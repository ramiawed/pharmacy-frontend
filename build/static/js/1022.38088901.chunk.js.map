{"version":3,"file":"static/js/1022.38088901.chunk.js","mappings":"iUA4EA,MAnDA,YAAgD,IAApBA,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzBC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAOd,OACE,iCACE,SAAC,IAAD,WACE,wBAAKP,EAAE,oBAET,gBACEQ,UAAW,CAACC,EAAAA,EAAAA,QAAuBA,EAAAA,EAAAA,YAA0BC,KAAK,KADpE,UAGIZ,IACA,gCACGQ,EAAKK,OAASC,EAAAA,GAAAA,WACb,SAAC,IAAD,CACEC,UAAU,EACVC,UAAWC,EAAAA,GAAAA,WACXC,QAAShB,EAAE,cACXiB,QAAS,WACPlB,GAAS,IAEXmB,KAAM,kBAAM,SAAC,MAAD,CAAaC,KAAM,MAC/BC,gBAAgB,KAIpB,SAAC,IAAD,CACEP,UAAU,EACVC,UAAWC,EAAAA,GAAAA,WACXC,QAAShB,EAAE,mBACXiB,QAAS,WA/BnBf,GAASmB,EAAAA,EAAAA,OACTnB,GAASoB,EAAAA,EAAAA,IAAW,CAAEf,MAAAA,MAiCZW,KAAM,kBAAM,SAAC,MAAD,KACZE,gBAAgB,a,oBCsD9B,EAzFoB,SAAC,GAA0B,IAAxBG,EAAuB,EAAvBA,iBACbvB,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAEjB,IADiBC,EAAAA,EAAAA,IAAYoB,EAAAA,KACLpB,EAAAA,EAAAA,IAAYC,EAAAA,KAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,GAA0CH,EAAAA,EAAAA,IAAYqB,EAAAA,IAA9CC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,MAEzB,GAFA,EAAgCC,OAENC,EAAAA,EAAAA,WAAS,IAAnC,eAAOhC,EAAP,KAAcC,EAAd,KAEMgC,EAAe,WACnB7B,GAASoB,EAAAA,EAAAA,IAAW,CAAEf,MAAAA,MAkCxB,OAZAyB,EAAAA,EAAAA,YAAU,WAOR,OANuB,IAAnBL,EAAQM,QAAcF,IAE1BG,OAAOC,SAAS,EAAG,GAEnBZ,IAEO,YACLa,EAAAA,EAAAA,SAED,IAEI9B,EAAKK,OAASC,EAAAA,GAAAA,OACnBN,EAAKK,OAASC,EAAAA,GAAAA,UACdN,EAAKK,OAASC,EAAAA,GAAAA,WACd,iCACE,SAAC,EAAD,CAAkBd,MAAOA,EAAOC,SAAUA,IACzC6B,EAAQ,IAAM9B,IACb,iBAAKU,UAAWC,EAAAA,EAAAA,MAAhB,WACE,iBAAMD,UAAWC,EAAAA,EAAAA,MAAjB,SAAuCT,EAAE,oBACzC,iBAAMQ,UAAWC,EAAAA,EAAAA,MAAjB,SAAuCmB,OAIhC,IAAVA,GAA0B,YAAXF,IAAyB5B,IACvC,+BACE,SAAC,IAAD,CAAWuC,IAAKrC,EAAE,2BAItB,gBAAKQ,UAAWC,EAAAA,EAAAA,sBAAhB,UACE,gBACE6B,MAAO,CACLC,cAAe,OACfC,YAAa,OACbC,aAAc,QAJlB,SAOG3C,GACC,SAAC,IAAD,CAAQC,SAAUA,EAAU2C,UAAU,IAEtCf,EAAQgB,KAAI,SAACC,GAAD,OACV,SAAC,IAAD,CACEA,OAAQA,EAERF,SAAUpC,EAAKK,OAASC,EAAAA,GAAAA,UADnBgC,EAAOC,gBASxB,SAAC,KAAD,CAAUC,GAAG","sources":["components/baskets-page-header/baskets-page-header.component.jsx","pages/baskets-page/baskets-page.component.jsx"],"sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getBaskets,\n  resetBasketsArray,\n} from \"../../redux/baskets/basketsSlice\";\n\n// icons\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// components\nimport Header from \"../header/header.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\nfunction BasketPageHeader({ isNew, setIsNew }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { user, token } = useSelector(selectUserData);\n\n  const refreshHandler = () => {\n    dispatch(resetBasketsArray());\n    dispatch(getBaskets({ token }));\n  };\n\n  return (\n    <>\n      <Header>\n        <h2>{t(\"nav-baskets\")}</h2>\n      </Header>\n      <div\n        className={[generalStyles.actions, generalStyles.margin_v_4].join(\" \")}\n      >\n        {!isNew && (\n          <>\n            {user.type !== UserTypeConstants.PHARMACY && (\n              <Icon\n                selected={false}\n                foreColor={Colors.MAIN_COLOR}\n                tooltip={t(\"new-basket\")}\n                onclick={() => {\n                  setIsNew(true);\n                }}\n                icon={() => <MdAddCircle size={24} />}\n                withBackground={true}\n              />\n            )}\n\n            <Icon\n              selected={false}\n              foreColor={Colors.MAIN_COLOR}\n              tooltip={t(\"refresh-tooltip\")}\n              onclick={() => {\n                refreshHandler();\n              }}\n              icon={() => <RiRefreshLine />}\n              withBackground={true}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default BasketPageHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router-dom\";\n\n// icons\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  cancelOperation,\n  getBaskets,\n  resetBaskets,\n  resetBasketsArray,\n  selectBaskets,\n} from \"../../redux/baskets/basketsSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport BasketPageHeader from \"../../components/baskets-page-header/baskets-page-header.component\";\nimport Basket from \"../../components/basket/basket.component\";\n\n// constants\nimport { UserTypeConstants } from \"../../utils/constants\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport NoContent from \"../../components/no-content/no-content.component\";\n\nconst BasketsPage = ({ onSelectedChange }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const { status, baskets, count, error } = useSelector(selectBaskets);\n\n  const [isNew, setIsNew] = useState(false);\n\n  const handleSearch = () => {\n    dispatch(getBaskets({ token }));\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetBasketsArray());\n    handleSearch();\n  };\n\n  const refreshHandler = () => {\n    dispatch(resetBaskets());\n    handleSearch();\n  };\n\n  useEffect(() => {\n    if (baskets.length === 0) handleSearch(1);\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user.type === UserTypeConstants.ADMIN ||\n    user.type === UserTypeConstants.PHARMACY ||\n    user.type === UserTypeConstants.WAREHOUSE ? (\n    <>\n      <BasketPageHeader isNew={isNew} setIsNew={setIsNew} />\n      {count > 0 && !isNew && (\n        <div className={generalStyles.count}>\n          <span className={generalStyles.label}>{t(\"baskets-count\")}</span>\n          <span className={generalStyles.count}>{count}</span>\n        </div>\n      )}\n\n      {count === 0 && status !== \"loading\" && !isNew && (\n        <>\n          <NoContent msg={t(\"no-basket-to-order\")} />\n        </>\n      )}\n\n      <div className={generalStyles.container_with_header}>\n        <div\n          style={{\n            paddingInline: \"10px\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\",\n          }}\n        >\n          {isNew ? (\n            <Basket setIsNew={setIsNew} editable={true} />\n          ) : (\n            baskets.map((basket) => (\n              <Basket\n                basket={basket}\n                key={basket._id}\n                editable={user.type !== UserTypeConstants.PHARMACY}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default BasketsPage;\n"],"names":["isNew","setIsNew","t","useTranslation","dispatch","useDispatch","useSelector","selectUserData","user","token","className","generalStyles","join","type","UserTypeConstants","selected","foreColor","Colors","tooltip","onclick","icon","size","withBackground","resetBasketsArray","getBaskets","onSelectedChange","selectOnlineStatus","selectBaskets","status","baskets","count","error","useState","handleSearch","useEffect","length","window","scrollTo","cancelOperation","msg","style","paddingInline","paddingLeft","paddingRight","editable","map","basket","_id","to"],"sourceRoot":""}