{"version":3,"file":"static/js/4321.9dd88712.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/partner-card/partner-card.module.scss?dc0e","components/partner-card/partner-card.component.jsx","components/search-container/search-container.component.jsx","webpack://pharmacy-frontend/./src/components/search-input/search-input.module.scss?50a3","components/search-input/search-input.component.jsx","components/warehouses-header/warehouses-header.component.jsx","pages/warehouses-page/warehouses-page.component.jsx","webpack://pharmacy-frontend/./src/components/search-container/search-container.module.scss?b7db"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"partner-card_small_font__B6atq\",\"partner_container\":\"partner-card_partner_container__VB59l\",\"full_width\":\"partner-card_full_width__CUiS6\",\"partner_logo\":\"partner-card_partner_logo__zh12g\",\"partner_name\":\"partner-card_partner_name__jXB4j\",\"from_top\":\"partner-card_from_top__OssbS\",\"name\":\"partner-card_name__xgWNa\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Logo from \"../../logo.png\";\n\n// components\nimport Button from \"../button/button.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport ButtonWithIcon from \"../button-with-icon/button-with-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { FaHandshake, FaHandshakeSlash } from \"react-icons/fa\";\n\n// redux-stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addFavorite,\n  selectFavoritesPartners,\n  removeFavorite,\n  selectFavoritesError,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  addCompanyToOurCompanies,\n  removeCompanyFromOurCompanies,\n  selectUserData,\n} from \"../../redux/auth/authSlice\";\nimport { addStatistics } from \"../../redux/statistics/statisticsSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\nimport {\n  resetMedicines,\n  setSearchCompanyName,\n  setSearchWarehouseId,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./partner-card.module.scss\";\n\n// constants and utils\nimport {\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\nfunction PartnerCard({ partner, fullWidth }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const {\n    settings: { showWarehouseItem },\n  } = useSelector(selectSettings);\n  const isOnline = useSelector(selectOnlineStatus);\n  const favorites = useSelector(selectFavoritesPartners);\n  const favoritesError = useSelector(selectFavoritesError);\n  const { token, user } = useSelector(selectUserData);\n\n  // own state\n  // state to display a loader icon when partner dispatch addToFavorite or removeFromFavorite\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeLinkCompanyToWarehouse, setChangeLinkCompanyToWarehouse] =\n    useState(false);\n\n  // determine if the partner can see the medicines in specific warehouse\n  const allowShowingWarehouseMedicines =\n    user.type === UserTypeConstants.ADMIN ||\n    partner.type === UserTypeConstants.COMPANY ||\n    (partner.type === UserTypeConstants.WAREHOUSE &&\n      showWarehouseItem &&\n      partner.allowShowingMedicines);\n\n  // method to handle add company to partner's favorite\n  const addPartnerToFavoriteHandler = () => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(addFavorite({ obj: { favoriteId: partner._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetUser: partner._id,\n              action: \"user-added-to-favorite\",\n            },\n            token,\n          })\n        );\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle remove company from partner's favorite\n  const removePartnerFromFavoriteHandler = () => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(removeFavorite({ obj: { favoriteId: partner._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        changeFavoriteLoading(false);\n      })\n      .catch(() => setChangeFavoriteLoading(false));\n  };\n\n  const addCompanyToOurCompaniesHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeLinkCompanyToWarehouse(true);\n\n    dispatch(addCompanyToOurCompanies({ companyId: partner._id, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeLinkCompanyToWarehouse(false);\n      })\n      .catch(() => {\n        setChangeLinkCompanyToWarehouse(false);\n      });\n  };\n\n  const removeCompanyFromOurCompaniesHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeLinkCompanyToWarehouse(true);\n\n    dispatch(removeCompanyFromOurCompanies({ companyId: partner._id, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeLinkCompanyToWarehouse(false);\n      })\n      .catch(() => {\n        setChangeLinkCompanyToWarehouse(false);\n      });\n  };\n\n  const partnerCardClickHandler = () => {\n    if (\n      partner.type === UserTypeConstants.WAREHOUSE &&\n      (user.type === UserTypeConstants.WAREHOUSE ||\n        user.type === UserTypeConstants.COMPANY ||\n        user.type === UserTypeConstants.GUEST)\n    ) {\n      return;\n    }\n\n    if (allowShowingWarehouseMedicines) {\n      // if the partner type is pharmacy or normal, change the selectedCount\n      // and selectedDates for this company\n      if (user.type === UserTypeConstants.PHARMACY) {\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetUser: partner._id,\n              action: \"choose-company\",\n            },\n            token,\n          })\n        );\n      }\n      dispatch(resetMedicines());\n\n      if (partner.type === UserTypeConstants.COMPANY) {\n        dispatch(setSearchCompanyName(partner.name));\n      }\n\n      if (partner.type === UserTypeConstants.WAREHOUSE) {\n        dispatch(setSearchWarehouseId(partner._id));\n      }\n\n      history.push({\n        pathname: \"/medicines\",\n        state: { myCompanies: partner.ourCompanies },\n      });\n    }\n  };\n\n  return (\n    <div\n      className={[\n        styles.partner_container,\n        fullWidth ? styles.full_width : \"\",\n      ].join(\" \")}\n    >\n      <p className={styles.partner_name}>{partner.name}</p>\n\n      {partner.logo_url?.length > 0 ? (\n        <img\n          src={`${SERVER_URL}/profiles/${partner.logo_url}`}\n          className={styles.partner_logo}\n          alt=\"thumb\"\n        />\n      ) : (\n        <img src={Logo} className={styles.partner_logo} alt=\"thumb\" />\n      )}\n\n      <div className={styles.from_top}>\n        {favoritesError === \"\" ? (\n          changeFavoriteLoading ? (\n            <div\n              className={[generalStyles.icon, generalStyles.fc_yellow].join(\n                \" \"\n              )}\n            >\n              <VscLoading className={generalStyles.loading} size={20} />\n            </div>\n          ) : (\n            <div\n              className={[generalStyles.icon, generalStyles.fc_yellow].join(\n                \" \"\n              )}\n            >\n              {favorites &&\n              favorites\n                .map((favorite) => favorite._id)\n                .includes(partner._id) ? (\n                <AiFillStar\n                  size={24}\n                  onClick={removePartnerFromFavoriteHandler}\n                />\n              ) : (\n                <AiOutlineStar\n                  size={24}\n                  onClick={addPartnerToFavoriteHandler}\n                />\n              )}\n            </div>\n          )\n        ) : null}\n\n        {user.type === UserTypeConstants.WAREHOUSE &&\n        partner.type === UserTypeConstants.COMPANY ? (\n          changeLinkCompanyToWarehouse ? (\n            <div>\n              <Icon\n                icon={() => (\n                  <VscLoading className={generalStyles.loading} size={20} />\n                )}\n                onclick={() => {}}\n                foreColor={Colors.YELLOW_COLOR}\n              />\n            </div>\n          ) : (\n            <div>\n              {user.ourCompanies.includes(partner._id) ? (\n                <ButtonWithIcon\n                  text={t(\"remove-company-from-warehouse-tooltip\")}\n                  action={removeCompanyFromOurCompaniesHandler}\n                  bgColor={Colors.FAILED_COLOR}\n                  icon={() => <FaHandshakeSlash size={20} />}\n                />\n              ) : (\n                <ButtonWithIcon\n                  text={t(\"add-company-to-warehouse-tooltip\")}\n                  action={addCompanyToOurCompaniesHandler}\n                  bgColor={Colors.SUCCEEDED_COLOR}\n                  icon={() => <FaHandshake size={20} />}\n                />\n              )}\n            </div>\n          )\n        ) : (\n          <></>\n        )}\n\n        {(partner.type === UserTypeConstants.COMPANY ||\n          (partner.type === UserTypeConstants.WAREHOUSE &&\n            user.type !== UserTypeConstants.WAREHOUSE)) && (\n          <div>\n            <Button\n              action={partnerCardClickHandler}\n              text={t(\"medicines\")}\n              bgColor={Colors.FAILED_COLOR}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PartnerCard;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-icons\nimport { FaFilter } from \"react-icons/fa\";\n\n// styles\nimport styles from \"./search-container.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\nimport Icon from \"../action-icon/action-icon.component\";\n\nfunction SearchContainer({ children, searchAction }) {\n  const { t } = useTranslation();\n\n  let childrenArray = React.Children.toArray(children);\n  const [moreSearchOptions, setMoreSearchOptions] = useState(false);\n\n  return (\n    <div\n      className={[\n        styles.search_container,\n        styles.expanded,\n        moreSearchOptions ? styles.expanded_with_options : \"\",\n      ].join(\" \")}\n    >\n      <div className={styles.expanded_div}>\n        {true && (\n          <>\n            <div style={{ flex: 1 }}>\n              {childrenArray[0]}\n              {moreSearchOptions && childrenArray.length > 1\n                ? childrenArray.map((child, index) => {\n                    if (index > 0) return child;\n                    return null;\n                  })\n                : null}\n\n              {moreSearchOptions && (\n                <button\n                  onClick={() => {\n                    searchAction();\n                    setMoreSearchOptions(false);\n                  }}\n                  style={{\n                    marginBlockStart: \"4px\",\n                    marginInline: \"auto\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    width: \"50%\",\n                  }}\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_main,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              )}\n            </div>\n\n            {childrenArray.length > 1 && (\n              <div\n                style={{\n                  marginInline: \"4px\",\n                  marginLeft: \"4px\",\n                  marginRight: \"4px\",\n                }}\n              >\n                <Icon\n                  onclick={() => setMoreSearchOptions(!moreSearchOptions)}\n                  icon={() => <FaFilter />}\n                />\n              </div>\n            )}\n\n            {childrenArray.length === 1 && (\n              <div\n                className={[generalStyles.icon, generalStyles.margin_h_4].join(\n                  \" \"\n                )}\n                onClick={() => {\n                  searchAction();\n                  setMoreSearchOptions(false);\n                }}\n              >\n                <button\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_secondary,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-input_small_font__t8rxR\",\"input_div\":\"search-input_input_div__4KoDe\",\"icon_close\":\"search-input_icon_close__TC1nF\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nimport styles from \"./search-input.module.scss\";\n\nfunction SearchInput({\n  type,\n  label,\n  id,\n  value,\n  onchange,\n  placeholder,\n  onEnterPress,\n  resetField,\n  onkeyup,\n}) {\n  const { t } = useTranslation();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (onEnterPress) {\n        onEnterPress();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.input_div}>\n      {label && <label htmlFor={id}>{t(label)}</label>}\n\n      <input\n        placeholder={placeholder ? t(`${placeholder}`) : \"\"}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onchange}\n        onKeyPress={handleKeyPress}\n        onKeyUp={onkeyup && onkeyup}\n      />\n      {resetField && value && (\n        <AiFillCloseCircle\n          onClick={() => resetField(id)}\n          className={styles.icon_close}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeDisplayType,\n  changeSearchCity,\n  changeSearchName,\n  resetWarehousePageState,\n  selectWarehousesPageState,\n} from \"../../redux/warehouse/warehousesSlice\";\n\n// components\nimport SearchContainer from \"../search-container/search-container.component\";\nimport SearchInput from \"../search-input/search-input.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport CitiesDropDown from \"../cities-dropdown/cities-dropdown.component\";\n\n// react icons\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore } from \"react-icons/ai\";\nimport { FaListUl } from \"react-icons/fa\";\nimport { VscClearAll } from \"react-icons/vsc\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants and utils\nimport { CitiesName, Colors, UserTypeConstants } from \"../../utils/constants\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\n\nfunction WarehousesHeader({ search, refreshHandler, count, keyUpHandler }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const { searchName, searchCity, displayType } = useSelector(\n    selectWarehousesPageState\n  );\n\n  // when you change the selected city\n  const citiesNameChangeHandler = (val) => {\n    dispatch(changeSearchCity(val));\n  };\n\n  // select card as display type\n  const selectCardDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"card\"));\n  };\n\n  // select list as display type\n  const selectListDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"list\"));\n  };\n\n  return (\n    <>\n      <SearchContainer searchAction={search}>\n        <SearchInput\n          label=\"user-name\"\n          id=\"search-name\"\n          type=\"text\"\n          value={searchName}\n          onchange={(e) => {\n            dispatch(changeSearchName(e.target.value));\n          }}\n          placeholder=\"search-by-warehouse-name\"\n          onEnterPress={search}\n          resetField={() => dispatch(changeSearchName(\"\"))}\n          onkeyup={keyUpHandler}\n        />\n\n        {user.type === UserTypeConstants.ADMIN && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              backgroundColor: Colors.WHITE_COLOR,\n              borderRadius: \"6px\",\n            }}\n          >\n            <CitiesDropDown\n              onSelectionChange={citiesNameChangeHandler}\n              defaultValue={{\n                value: searchCity,\n                label: t(searchCity.toLowerCase()),\n              }}\n              caption=\"user-city\"\n            />\n          </div>\n        )}\n      </SearchContainer>\n\n      {/* action's buttons */}\n      <div\n        className={[generalStyles.actions, generalStyles.margin_v_4].join(\" \")}\n      >\n        {/* refresh */}\n        <Icon\n          foreColor={Colors.MAIN_COLOR}\n          tooltip={t(\"refresh-tooltip\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n          withBackground={true}\n        />\n\n        {/* clear search filter */}\n        {(searchName.length > 0 || searchCity !== CitiesName.ALL) && (\n          <Icon\n            selected={false}\n            foreColor={Colors.MAIN_COLOR}\n            tooltip={t(\"clear-filter-tooltip\")}\n            onclick={() => {\n              dispatch(resetWarehousePageState());\n              refreshHandler();\n            }}\n            icon={() => <VscClearAll />}\n            withBackground={true}\n          />\n        )}\n\n        {/* display card option */}\n        <Icon\n          foreColor={\n            displayType === \"card\" ? Colors.SUCCEEDED_COLOR : Colors.MAIN_COLOR\n          }\n          tooltip={t(\"show-item-as-card-tooltip\")}\n          onclick={selectCardDisplayTypeHandler}\n          icon={() => <AiFillAppstore />}\n          withBackground={true}\n        />\n\n        {/* display list option */}\n        <Icon\n          foreColor={\n            displayType === \"list\" ? Colors.SUCCEEDED_COLOR : Colors.MAIN_COLOR\n          }\n          tooltip={t(\"show-item-as-row-tooltip\")}\n          onclick={selectListDisplayTypeHandler}\n          icon={() => <FaListUl />}\n          withBackground={true}\n        />\n\n        <Icon\n          withBackground={true}\n          tooltip={t(\"go-back\")}\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.MAIN_COLOR}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default WarehousesHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router\";\nimport ReactLoading from \"react-loading\";\n\n// components\nimport PartnerRow from \"../../components/partner-row/partner-row.component\";\nimport PartnerCard from \"../../components/partner-card/partner-card.component\";\nimport Toast from \"../../components/toast/toast.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport WarehousesHeader from \"../../components/warehouses-header/warehouses-header.component\";\nimport ButtonWithIcon from \"../../components/button-with-icon/button-with-icon.component\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getWarehouses,\n  resetWarehouse,\n  selectWarehouses,\n  selectWarehousesPageState,\n  cancelOperation,\n  changeSearchCity,\n  resetWarehousesArray,\n} from \"../../redux/warehouse/warehousesSlice\";\nimport {\n  getFavorites,\n  resetFavorites,\n  selectFavorites,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// constants and utils\nimport {\n  CitiesName,\n  Colors,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// icons\nimport { CgMoreVertical } from \"react-icons/cg\";\n\nlet timer;\n\nfunction WarehousePage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { token, user } = useSelector(selectUserData);\n  const { warehouses, count, status } = useSelector(selectWarehouses);\n  const { searchName, searchCity } = useSelector(selectWarehousesPageState);\n  const { displayType } = useSelector(selectWarehousesPageState);\n\n  // select favorites from favoriteSlice\n  const { error: favoriteError } = useSelector(selectFavorites);\n\n  const [favoritesError, setFavoritesError] = useState(favoriteError);\n\n  // handle search\n  const handleSearch = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST ||\n      user.type === UserTypeConstants.WAREHOUSE\n    ) {\n      dispatch(changeSearchCity(user.city));\n    }\n\n    dispatch(\n      getWarehouses({\n        token,\n      })\n    );\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetWarehousesArray());\n    handleSearch();\n  };\n\n  const refreshHandler = () => {\n    dispatch(resetFavorites());\n    dispatch(getFavorites({ token }));\n    dispatch(resetWarehouse());\n    handleSearch();\n  };\n\n  const keyUpHandler = (event) => {\n    if (event.keyCode === 13) return;\n    cancelOperation();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      handleEnterPress();\n    }, 200);\n  };\n\n  useEffect(() => {\n    if (warehouses.length === 0) handleSearch(1);\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user &&\n    (user.type === UserTypeConstants.ADMIN ||\n      user.type === UserTypeConstants.PHARMACY) ? (\n    <div className={generalStyles.container}>\n      <WarehousesHeader\n        count={count}\n        search={handleEnterPress}\n        refreshHandler={refreshHandler}\n        keyUpHandler={keyUpHandler}\n      />\n\n      {count > 0 && (\n        <div className={generalStyles.count}>\n          <span className={generalStyles.label}>{t(\"warehouses-count\")}</span>\n          <span className={generalStyles.count}>{count}</span>\n        </div>\n      )}\n\n      {/* display as list */}\n      {displayType === \"list\" &&\n        warehouses.map((warehouse) => (\n          <PartnerRow key={warehouse._id} partner={warehouse} />\n        ))}\n\n      {/* display as card */}\n      {displayType === \"card\" && (\n        <div\n          className={[\n            generalStyles.flex_container,\n            generalStyles.margin_top_10,\n          ].join(\" \")}\n        >\n          {warehouses.map((warehouse) => (\n            <PartnerCard key={warehouse._id} partner={warehouse} />\n          ))}\n        </div>\n      )}\n\n      {count > 0 && status !== \"loading\" && (\n        <div className={generalStyles.count}>\n          {warehouses.length} / {count}\n        </div>\n      )}\n\n      {warehouses.length === 0 &&\n        status !== \"loading\" &&\n        searchName.length === 0 &&\n        searchCity === CitiesName.ALL && <NoContent msg={t(\"no-warehouses\")} />}\n\n      {warehouses.length === 0 &&\n        status !== \"loading\" &&\n        (searchName.length !== 0 || searchCity !== CitiesName.ALL) && (\n          <NoContent msg={t(\"no-result-found\")} />\n        )}\n\n      {status === \"loading\" && (\n        <div className={generalStyles.flex_container}>\n          <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n        </div>\n      )}\n\n      {warehouses.length < count && (\n        <div className={generalStyles.flex_container}>\n          <ButtonWithIcon\n            text={t(\"more\")}\n            action={handleMoreResult}\n            bgColor={Colors.SECONDARY_COLOR}\n            icon={() => <CgMoreVertical />}\n          />\n        </div>\n      )}\n\n      {warehouses.length === count && status !== \"loading\" && count !== 0 && (\n        <p\n          className={[generalStyles.center, generalStyles.fc_secondary].join(\n            \" \"\n          )}\n        >\n          {t(\"no-more\")}\n        </p>\n      )}\n\n      {favoritesError && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          actionAfterTimeout={() => {\n            setFavoritesError(\"\");\n          }}\n        >\n          {t(favoriteError)}\n        </Toast>\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n}\n\nexport default WarehousePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-container_small_font__Ha0Xq\",\"search_container\":\"search-container_search_container__6isGM\",\"expanded\":\"search-container_expanded__79n+k\",\"expanded_div\":\"search-container_expanded_div__Hmmm1\",\"checkbox_div\":\"search-container_checkbox_div__RPj5T\"};"],"names":["partner","fullWidth","t","useTranslation","history","useHistory","dispatch","useDispatch","showWarehouseItem","useSelector","selectSettings","settings","isOnline","selectOnlineStatus","favorites","selectFavoritesPartners","favoritesError","selectFavoritesError","selectUserData","token","user","useState","changeFavoriteLoading","setChangeFavoriteLoading","changeLinkCompanyToWarehouse","setChangeLinkCompanyToWarehouse","allowShowingWarehouseMedicines","type","UserTypeConstants","allowShowingMedicines","className","styles","join","name","logo_url","length","src","SERVER_URL","alt","Logo","generalStyles","size","map","favorite","_id","includes","onClick","removeFavorite","obj","favoriteId","then","unwrapResult","catch","changeOnlineMsg","addFavorite","addStatistics","sourceUser","targetUser","action","icon","onclick","foreColor","Colors","ourCompanies","text","e","removeCompanyFromOurCompanies","companyId","bgColor","addCompanyToOurCompanies","resetMedicines","setSearchCompanyName","setSearchWarehouseId","push","pathname","state","myCompanies","children","searchAction","childrenArray","React","moreSearchOptions","setMoreSearchOptions","style","flex","child","index","marginBlockStart","marginInline","marginLeft","marginRight","width","label","id","value","onchange","placeholder","onEnterPress","resetField","onkeyup","htmlFor","onChange","onKeyPress","event","key","onKeyUp","timer","search","refreshHandler","keyUpHandler","count","selectUser","selectWarehousesPageState","searchName","searchCity","displayType","changeSearchName","target","display","justifyContent","backgroundColor","borderRadius","onSelectionChange","val","changeSearchCity","defaultValue","toLowerCase","caption","tooltip","withBackground","CitiesName","selected","resetWarehousePageState","changeDisplayType","goBack","onSelectedChange","selectWarehouses","warehouses","status","favoriteError","selectFavorites","error","setFavoritesError","handleSearch","city","getWarehouses","handleEnterPress","resetWarehousesArray","useEffect","window","scrollTo","cancelOperation","to","resetFavorites","getFavorites","resetWarehouse","keyCode","clearTimeout","setTimeout","warehouse","msg","color","actionAfterTimeout"],"sourceRoot":""}