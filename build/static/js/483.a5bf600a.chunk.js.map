{"version":3,"file":"static/js/483.a5bf600a.chunk.js","mappings":"wUACA,GAAgB,YAAc,uCAAuC,IAAM,+BAA+B,IAAM,+BAA+B,MAAQ,iCAAiC,OAAS,kCAAkC,KAAO,iC,oBC8G1O,MAvFA,YAAiD,IAArBA,EAAoB,EAApBA,iBAClBC,GAAMC,EAAAA,EAAAA,KAAND,EACAE,GAAmBC,EAAAA,EAAAA,MAAnBD,eAGFE,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAe,mCAAG,oGACCC,IAAAA,IAAA,UAClBC,EAAAA,GADkB,0BACOV,GAC5B,CACEW,QAAS,CACPC,cAAc,UAAD,OAAYV,MALT,OAChBW,EADgB,OAUtBN,EAAgBM,EAASC,KAAKA,KAAKR,cAVb,2CAAH,qDAkBrB,OALAS,EAAAA,EAAAA,YAAU,WACRP,IACAX,MACC,CAACG,KAGF,gBAAKgB,UAAWC,EAAAA,EAAAA,UAAhB,SACGX,GACC,iCACE,UAAC,IAAD,YACE,wBAAKR,EAAE,yBACP,gBACEoB,MAAO,CACLC,SAAU,WACVC,IAAK,OACLC,KAAM,QAJV,UAOE,SAAC,IAAD,CACEC,UAAU,EACVC,UAAWC,EAAAA,GAAAA,gBACXC,QAAS3B,EAAE,mBACX4B,KAAM,kBAAM,SAAC,MAAD,KACZC,QAASnB,UAKf,iBAAKQ,UAAWY,EAAAA,YAAhB,WACE,iBAAKZ,UAAWY,EAAAA,IAAhB,WACE,2BAAQ9B,EAAE,aACV,cAAGkB,UAAWY,EAAAA,OAAeV,MAAO,CAAEW,KAAM,GAA5C,SACGvB,EAAawB,UAEhB,cAAGd,UAAWY,EAAAA,OAAd,SAA8BtB,EAAayB,KAAKC,MAAM,KAAK,SAG7D,iBAAKhB,UAAWY,EAAAA,IAAhB,WACE,2BAAQ9B,EAAE,WACV,cAAGkB,UAAWY,EAAAA,KAAd,SAA4BtB,EAAa2B,UAGhB,KAA1B3B,EAAa4B,WACZ,gBACElB,UAAW,CACTY,EAAAA,IACAX,EAAAA,EAAAA,uBACAkB,KAAK,KAJT,UAME,gBACEnB,UAAWY,EAAAA,MACXQ,IAAG,UAAKC,EAAAA,GAAL,YAAmB/B,EAAa4B,UACnCI,IAAI,mBAOd,SAAC,IAAD","sources":["webpack://pharmacy-frontend/./src/pages/notification-page/notification-page.module.scss?48c8","pages/notification-page/notification-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content_div\":\"notification-page_content_div__40vu0\",\"row\":\"notification-page_row__vcuc7\",\"img\":\"notification-page_img__GpPfo\",\"image\":\"notification-page_image__Pdafe\",\"header\":\"notification-page_header__Khr58\",\"body\":\"notification-page_body__wxCO-\"};","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\n// components\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport Header from \"../../components/header/header.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\n\n// icons\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./notification-page.module.scss\";\n\n// constants\nimport { BASEURL, Colors, SERVER_URL } from \"../../utils/constants\";\n\nfunction NotificationPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const { notificationId } = useParams();\n\n  // selectors\n  const token = useSelector(selectToken);\n\n  const [notification, setNotification] = useState(null);\n\n  const getNotification = async () => {\n    const response = await axios.get(\n      `${BASEURL}/notifications/${notificationId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n\n    setNotification(response.data.data.notification);\n  };\n\n  useEffect(() => {\n    getNotification();\n    onSelectedChange();\n  }, [notificationId]);\n\n  return (\n    <div className={generalStyles.container}>\n      {notification ? (\n        <>\n          <Header>\n            <h2>{t(\"notification-label\")}</h2>\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"16px\",\n                left: \"46px\",\n              }}\n            >\n              <Icon\n                selected={false}\n                foreColor={Colors.SECONDARY_COLOR}\n                tooltip={t(\"refresh-tooltip\")}\n                icon={() => <RiRefreshLine />}\n                onclick={getNotification}\n              />\n            </div>\n          </Header>\n\n          <div className={styles.content_div}>\n            <div className={styles.row}>\n              <label>{t(\"header\")}</label>\n              <p className={styles.header} style={{ flex: 1 }}>\n                {notification.header}\n              </p>\n              <p className={styles.header}>{notification.date.split(\"T\")[0]}</p>\n            </div>\n\n            <div className={styles.row}>\n              <label>{t(\"body\")}</label>\n              <p className={styles.body}>{notification.body}</p>\n            </div>\n\n            {notification.logo_url !== \"\" && (\n              <div\n                className={[\n                  styles.img,\n                  generalStyles.flex_center_container,\n                ].join(\" \")}\n              >\n                <img\n                  className={styles.image}\n                  src={`${SERVER_URL}/${notification.logo_url}`}\n                  alt=\"thumb\"\n                />\n              </div>\n            )}\n          </div>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n}\n\nexport default NotificationPage;\n"],"names":["onSelectedChange","t","useTranslation","notificationId","useParams","token","useSelector","selectToken","useState","notification","setNotification","getNotification","axios","BASEURL","headers","Authorization","response","data","useEffect","className","generalStyles","style","position","top","left","selected","foreColor","Colors","tooltip","icon","onclick","styles","flex","header","date","split","body","logo_url","join","src","SERVER_URL","alt"],"sourceRoot":""}