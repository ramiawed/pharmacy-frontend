{"version":3,"file":"static/js/9666.1ba1896b.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/cart-row/cart-row.module.scss?f907","components/cart-row/cart-row.component.jsx","components/cart-warehouse-table-header/cart-warehouse-table-header.component.jsx","webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","components/no-content/no-content.component.jsx","webpack://pharmacy-frontend/./src/components/table-header/table-header.module.scss?29ac","components/table-header/table-header.component.jsx","webpack://pharmacy-frontend/./src/components/cart-warehouse/cart-warehouse.module.scss?bc3e","components/cart-warehouse/cart-warehouse.component.jsx","pages/cart-page/cart-page.component.jsx","pages/pharmacy-routes/pharmacy-routes.component.jsx","webpack://pharmacy-frontend/./src/components/table.module.scss?2909"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"qty\":\"cart-row_qty__HdE0h\",\"bonus_row\":\"cart-row_bonus_row__dM67o\"};","// component contains information about the item in the cart\n\n// Props\n// cartItem: object\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react icons\nimport { AiFillCaretLeft, AiFillCaretRight } from \"react-icons/ai\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\n\n// component\nimport Icon from \"../action-icon/action-icon.component\";\n\n// redux stuff\nimport { useDispatch } from \"react-redux\";\nimport {\n  decreaseItemQty,\n  increaseItemQty,\n  removeItemFromCart,\n} from \"../../redux/cart/cartSlice\";\n\n// styles\nimport styles from \"./cart-row.module.scss\";\nimport rowStyles from \"../row.module.scss\";\nimport tableStyles from \"../table.module.scss\";\n\n// constants\nimport { Colors, OfferTypes } from \"../../utils/constants\";\n\nfunction CartRow({ cartItem, inOrderDetails }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  return (\n    <div\n      className={[\n        rowStyles.container,\n        cartItem.bonus ? styles.bonus_row : \"\",\n      ].join(\" \")}\n    >\n      <label className={tableStyles.label_medium}>{cartItem.item.name}</label>\n\n      <label className={tableStyles.label_small}>\n        {cartItem.item.company.name}\n      </label>\n\n      <label className={tableStyles.label_small}>{cartItem.item.formula}</label>\n\n      <label className={tableStyles.label_small}>\n        {cartItem.item.caliber} / {cartItem.item.packing}\n      </label>\n\n      <label className={tableStyles.label_small}>\n        {inOrderDetails ? cartItem.price : cartItem.item.price} /{\" \"}\n        {inOrderDetails\n          ? cartItem.customer_price\n          : cartItem.item.customer_price}\n      </label>\n\n      {!inOrderDetails && (\n        <label className={tableStyles.label_small}>\n          {cartItem.warehouse.maxQty ? cartItem.warehouse.maxQty : \"\"}\n        </label>\n      )}\n\n      {inOrderDetails ? (\n        <div className={[tableStyles.label_small, styles.qty].join(\" \")}>\n          {cartItem.qty}\n        </div>\n      ) : (\n        <div className={[tableStyles.label_small, styles.qty].join(\" \")}>\n          {!cartItem.bonus && (\n            <AiFillCaretRight\n              onClick={() => {\n                if (cartItem.qty > 0) dispatch(decreaseItemQty(cartItem));\n              }}\n            />\n          )}\n          {cartItem.qty}\n          {!cartItem.bonus && (\n            <AiFillCaretLeft\n              onClick={() => {\n                if (\n                  cartItem.warehouse.maxQty !== 0 &&\n                  cartItem.qty < cartItem.warehouse.maxQty\n                )\n                  dispatch(increaseItemQty(cartItem));\n                else if (cartItem.warehouse.maxQty === 0) {\n                  dispatch(increaseItemQty(cartItem));\n                }\n              }}\n            />\n          )}\n        </div>\n      )}\n\n      <label className={tableStyles.label_xsmall}>\n        {cartItem.bonus && cartItem.bonus}{\" \"}\n        {cartItem.bonus\n          ? cartItem.bonusType === OfferTypes.PERCENTAGE\n            ? t(\"after-bonus-percentage-label\")\n            : t(\"after-quantity-label\")\n          : \"-\"}\n      </label>\n      <label className={tableStyles.label_small}>\n        {cartItem.qty *\n          (inOrderDetails ? cartItem.price : cartItem.item.price) -\n          (cartItem.bonus && cartItem.bonusType === OfferTypes.PERCENTAGE\n            ? (cartItem.qty *\n                (inOrderDetails ? cartItem.price : cartItem.item.price) *\n                cartItem.bonus) /\n              100\n            : 0)}\n      </label>\n      {!inOrderDetails && (\n        <label className={tableStyles.label_xsmall}>\n          <Icon\n            icon={() => <RiDeleteBin5Fill size={20} />}\n            foreColor={Colors.FAILED_COLOR}\n            tooltip=\"delete-cart-row\"\n            onclick={() => dispatch(removeItemFromCart(cartItem))}\n          />\n        </label>\n      )}\n    </div>\n  );\n}\n\nexport default CartRow;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport TableHeader from \"../table-header/table-header.component\";\n\nimport tableStyles from \"../table.module.scss\";\n\nfunction CartWarehouseTableHeader({ withoutMaxQty }) {\n  const { t } = useTranslation();\n\n  return (\n    <TableHeader>\n      <label className={tableStyles.label_medium}>{t(\"item-trade-name\")}</label>\n      <label className={tableStyles.label_small}>\n        {t(\"user-company-name\")}\n      </label>\n      <label className={tableStyles.label_small}>{t(\"item-formula\")}</label>\n      <label className={tableStyles.label_small}>\n        {t(\"item-caliber\")}/{t(\"item-packing\")}\n      </label>\n      <label className={tableStyles.label_small}>{t(\"price\")}</label>\n      {!withoutMaxQty && (\n        <label className={tableStyles.label_small}>{t(\"item-max-qty\")}</label>\n      )}\n\n      <label className={tableStyles.label_small}>{t(\"selected-qty\")}</label>\n      <label className={tableStyles.label_xsmall}>{t(\"offer-label\")}</label>\n      <label className={tableStyles.label_small}>{t(\"total-price\")}</label>\n      {!withoutMaxQty && <label className={tableStyles.label_xsmall}></label>}\n    </TableHeader>\n  );\n}\n\nexport default CartWarehouseTableHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_header__MhatS\",\"back\":\"header_back__wgjRV\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { useHistory } from \"react-router-dom\";\nimport { Colors } from \"../../utils/constants\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ children }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <div className={styles.header}>\n      {children}\n      <div className={styles.back}>\n        <Icon\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.WHITE_COLOR}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport generalStyles from \"../../style.module.scss\";\nimport NoContentImage from \"../../no-content.png\";\n\nfunction NoContent({ msg }) {\n  return (\n    <div\n      className={[generalStyles.no_content_div, generalStyles.fc_white].join(\n        \" \"\n      )}\n    >\n      {/* <p className={generalStyles.fc_white}>{msg}</p> */}\n      <img\n        src={NoContentImage}\n        alt=\"thumb\"\n        style={{\n          width: \"150px\",\n          height: \"150px\",\n        }}\n      />\n    </div>\n  );\n}\n\nexport default NoContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"table-header_header__Vm2um\"};","import React from \"react\";\n\nimport styles from \"./table-header.module.scss\";\n\nfunction TableHeader({ children }) {\n  return <div className={styles.header}>{children}</div>;\n}\n\nexport default TableHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"cart-warehouse_header__XorCl\",\"total_price\":\"cart-warehouse_total_price__XfuYf\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetCartItems, selectCartItems } from \"../../redux/cart/cartSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { statisticsOrders } from \"../../redux/statistics/statisticsSlice\";\n\n// components\nimport CartRow from \"../cart-row/cart-row.component\";\nimport Button from \"../button/button.component\";\nimport CartWarehouseTableHeader from \"../cart-warehouse-table-header/cart-warehouse-table-header.component\";\nimport Modal from \"../modal/modal.component\";\nimport Loader from \"../action-loader/action-loader.component\";\n\n// styles\nimport styles from \"./cart-warehouse.module.scss\";\n\n// constants\nimport { BASEURL, Colors, OfferTypes } from \"../../utils/constants\";\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\nimport { saveOrder, setRefresh } from \"../../redux/orders/ordersSlice\";\n\nfunction CartWarehouse({ warehouse }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { token, user } = useSelector(selectUserData);\n  const cartItems = useSelector(selectCartItems);\n  const {\n    settings: { saveOrders },\n  } = useSelector(selectSettings);\n\n  // own state\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showFailedModal, setShowFailedModal] = useState(false);\n  const [showLoadingModal, setShowLoadingModal] = useState(false);\n  const [showConfirmSaveOrder, setShowConfirmSaveOrder] = useState(false);\n\n  const computeTotalPrice = () => {\n    let total = 0;\n\n    cartItems\n      .filter((item) => item.warehouse.warehouse.name === warehouse)\n      .forEach((item) => {\n        total =\n          total +\n          item.qty * item.item.price -\n          (item.bonus && item.bonusType === OfferTypes.PERCENTAGE\n            ? (item.qty * item.item.price * item.bonus) / 100\n            : 0);\n      });\n\n    return total;\n  };\n\n  const sendOrderHandler = () => {\n    // check internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setShowLoadingModal(true);\n\n    let cartItemsToSend = cartItems\n      .filter((item) => item.warehouse.warehouse.name === warehouse)\n      .map((e) => {\n        return {\n          itemName: e.item.name,\n          companyName: e.item.company.name,\n          warehouseName: e.warehouse.warehouse.name,\n          formula: e.item.formula,\n          caliber: e.item.caliber,\n          packing: e.item.packing,\n          price: e.item.price,\n          customerPrice: e.item.customer_price,\n          quantity: e.qty,\n          bonus: e.bonusType\n            ? `${e.bonus} ${e.bonusType === \"pieces\" ? \"قطع\" : \"%\"}`\n            : \"\",\n          totalPrice:\n            e.qty * e.item.price -\n            (e.bonus && e.bonusType === \"percentage\"\n              ? (e.qty * e.item.price * e.bonus) / 100\n              : 0),\n        };\n      });\n\n    cartItemsToSend = [\n      ...cartItemsToSend,\n      {\n        itemName: \"\",\n        companyName: \"\",\n        warehouseName: \"\",\n        formula: \"\",\n        caliber: \"\",\n        packing: \"\",\n        price: \"\",\n        customerPrice: \"\",\n        quantity: \"\",\n        bonus: \"\",\n        totalPrice: computeTotalPrice(),\n      },\n    ];\n\n    axios\n      .post(\n        `${BASEURL}/users/sendemail`,\n        { cartItems: cartItemsToSend },\n        {\n          timeout: 25000,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      )\n      .then(() => {\n        dispatch(statisticsOrders({ token }));\n        setShowLoadingModal(false);\n        setShowSuccessModal(true);\n        if (saveOrders) {\n          let obj = {\n            pharmacy: user._id,\n            warehouse: cartItems.filter(\n              (item) => item.warehouse.warehouse.name === warehouse\n            )[0].warehouse.warehouse._id,\n            items: cartItems\n              .filter((item) => item.warehouse.warehouse.name === warehouse)\n              .map((e) => {\n                return {\n                  item: e.item._id,\n                  qty: e.qty,\n                  bonus: e.bonus,\n                  bonusType: e.bonusType,\n                  price: e.item.price,\n                  customer_price: e.item.customer_price,\n                };\n              }),\n          };\n\n          dispatch(saveOrder({ obj, token }));\n          dispatch(setRefresh(true));\n        }\n      })\n      .catch((err) => {\n        setShowLoadingModal(false);\n        setShowFailedModal(true);\n      });\n  };\n\n  return (\n    <>\n      <h4 className={styles.header}>{warehouse}</h4>\n      <CartWarehouseTableHeader />\n      {cartItems\n        .filter((item) => item.warehouse.warehouse.name === warehouse)\n        .map((item, index) => (\n          <CartRow cartItem={item} key={index} />\n        ))}\n\n      <p className={styles.total_price}>\n        {t(\"total-invoice-price\")} {computeTotalPrice()}\n      </p>\n\n      <Button\n        text={t(\"send-order\")}\n        bgColor={Colors.SUCCEEDED_COLOR}\n        action={() => setShowConfirmSaveOrder(true)}\n      />\n\n      {showLoadingModal && <Loader allowCancel={false} />}\n\n      {showSuccessModal && (\n        <Modal\n          closeModal={() => {\n            setShowSuccessModal(false);\n            dispatch(resetCartItems(warehouse));\n          }}\n          header={t(\"send-order\")}\n          cancelLabel={t(\"cancel-label\")}\n          small={true}\n          green={true}\n        >\n          {t(\"send-order-succeeded\")}\n        </Modal>\n      )}\n\n      {showFailedModal && (\n        <Modal\n          closeModal={() => {\n            setShowFailedModal(false);\n          }}\n          header={t(\"send-order\")}\n          cancelLabel={t(\"cancel-label\")}\n          small={true}\n        >\n          {t(\"send-order-failed\")}\n        </Modal>\n      )}\n\n      {showConfirmSaveOrder && (\n        <Modal\n          closeModal={() => {\n            setShowConfirmSaveOrder(false);\n          }}\n          header={t(\"send-order\")}\n          cancelLabel={t(\"cancel-label\")}\n          okLabel={t(\"send-order\")}\n          okModal={sendOrderHandler}\n          small={true}\n        >\n          {t(\"confirm-save-order\")}\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default CartWarehouse;\n","// YOU HAVE TO BE A PHARMACY USER TO SHOW THIS COMPONENT\n\n// this component page display the items you buy divided by warehouse name\n// if the cart is empty display an empty icon\n\n// this component page depends on the cartSlice that contains\n// 1- cartWarehouse: all warehouse that user buy medicine from it\n// 2- cartItems: all the item that user buy it\n\nimport React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux-stuff\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\nimport { selectCartWarehouse } from \"../../redux/cart/cartSlice\";\n\n// components\nimport Header from \"../../components/header/header.component\";\nimport CartWarehouse from \"../../components/cart-warehouse/cart-warehouse.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\n\n// constants and colors\nimport { UserTypeConstants } from \"../../utils/constants\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\nfunction CartPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n\n  // selectors\n  // get the logged user from redux store\n  const user = useSelector(selectUser);\n  // get the cart warehouses from redux store\n  const cartWarehouse = useSelector(selectCartWarehouse);\n\n  useEffect(() => {\n    onSelectedChange();\n  }, []);\n\n  // if there is no logged user or user type is not pharmacy\n  // redirect to the main page\n  return user && user.type === UserTypeConstants.PHARMACY ? (\n    <>\n      <Header>\n        <h2>{t(\"cart\")}</h2>\n      </Header>\n\n      <div className={generalStyles.container_with_header}>\n        {/* if cart contains an item or more */}\n        {cartWarehouse.length > 0 && (\n          <>\n            <div>\n              {cartWarehouse.map((w, index) => (\n                <CartWarehouse warehouse={w} key={index} />\n              ))}\n            </div>\n          </>\n        )}\n\n        {/* if the cart is empty */}\n        {cartWarehouse.length === 0 && (\n          <>\n            <NoContent msg={t(\"empty-cart\")} />\n          </>\n        )}\n      </div>\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default CartPage;\n","import React, { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePageLoader from \"../../components/home-page-loader/home-page-loader.component\";\nimport { SideNavLinks, TopNavLinks } from \"../../utils/constants\";\nimport CartPage from \"../cart-page/cart-page.component\";\n\nconst CompaniesPage = lazy(() =>\n  import(\"../companies-page/companies-page.component\")\n);\nconst FavoritesPage = lazy(() =>\n  import(\"../favorites-page/favorites-page.component\")\n);\nconst HomePage = lazy(() => import(\"../home-page/home-page.component\"));\nconst ItemPage = lazy(() => import(\"../item-page/item-page.component\"));\nconst ItemsPage = lazy(() => import(\"../items-page/items-page.component\"));\nconst MedicinesPage = lazy(() =>\n  import(\"../medicines-page/medicines-page.component\")\n);\nconst NotFound = lazy(() => import(\"../not-found/not-found.component\"));\nconst NotificationPage = lazy(() =>\n  import(\"../notification-page/notification-page.component\")\n);\nconst UserNotificationPage = lazy(() =>\n  import(\"../user-notification-page/user-notification-page.component\")\n);\nconst UserProfilePage = lazy(() =>\n  import(\"../user-profile-page/user-profile-page.component\")\n);\nconst WarehousesPage = lazy(() =>\n  import(\"../warehouses-page/warehouses-page.component\")\n);\nconst OrdersPage = lazy(() => import(\"../orders-page/orders-page.component\"));\nconst OrderDetailsPage = lazy(() =>\n  import(\"../order-details-page/order-details-page.component\")\n);\n\nfunction PharmacyRoutes({ changeOptionHandler }) {\n  return (\n    <>\n      <Suspense fallback={<HomePageLoader />}>\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: TopNavLinks.HOME,\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: \"\",\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/companies\">\n            <CompaniesPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: TopNavLinks.COMPANIES,\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: \"\",\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/medicines\">\n            <MedicinesPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: TopNavLinks.MEDICINES,\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: \"\",\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/warehouses\">\n            <WarehousesPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: TopNavLinks.WAREHOUSES,\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: \"\",\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/item\">\n            <ItemPage />\n          </Route>\n\n          <Route exact path=\"/profile\">\n            <UserProfilePage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: \"\",\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: SideNavLinks.PROFILE,\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/favorites\">\n            <FavoritesPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: TopNavLinks.FAVORITES,\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: \"\",\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/cart\">\n            <CartPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: \"\",\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: TopNavLinks.CART,\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          {/* <Route exact path=\"/items\">\n            <ItemsPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: \"\",\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: SideNavLinks.ITEMS,\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route> */}\n\n          <Route exact path=\"/notifications\">\n            <UserNotificationPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: \"\",\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: SideNavLinks.NOTIFICATIONS,\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/notification/:notificationId\">\n            <NotificationPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: \"\",\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: SideNavLinks.NOTIFICATIONS,\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/orders\">\n            <OrdersPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: \"\",\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: SideNavLinks.ORDERS,\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route exact path=\"/order-details\">\n            <OrderDetailsPage\n              onSelectedChange={() => {\n                changeOptionHandler({\n                  selectedTopNavOption: \"\",\n                  collapsedSideNavOption: true,\n                  selectedSideNavOption: SideNavLinks.ORDERS,\n                  showTopNav: false,\n                  showSearchBar: false,\n                });\n              }}\n            />\n          </Route>\n\n          <Route component={NotFound} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n\nexport default PharmacyRoutes;\n","// extracted by mini-css-extract-plugin\nexport default {\"label_small\":\"table_label_small__8-3Up\",\"label_xsmall\":\"table_label_xsmall__F3kmN\",\"label_medium\":\"table_label_medium__gVQ8c\",\"label_large\":\"table_label_large__Yk8HG\",\"center\":\"table_center__+B6kl\",\"underline\":\"table_underline__PZHMx\",\"hide_on_small\":\"table_hide_on_small__uIAcl\",\"hide_on_medium\":\"table_hide_on_medium__HgYD8\"};"],"names":["cartItem","inOrderDetails","t","useTranslation","dispatch","useDispatch","className","rowStyles","bonus","styles","join","tableStyles","item","name","company","formula","caliber","packing","price","customer_price","warehouse","maxQty","qty","onClick","decreaseItemQty","increaseItemQty","bonusType","OfferTypes","icon","size","foreColor","Colors","tooltip","onclick","removeItemFromCart","withoutMaxQty","children","history","useHistory","goBack","msg","generalStyles","src","NoContentImage","alt","style","width","height","isOnline","useSelector","selectOnlineStatus","selectUserData","token","user","cartItems","selectCartItems","saveOrders","selectSettings","settings","useState","showSuccessModal","setShowSuccessModal","showFailedModal","setShowFailedModal","showLoadingModal","setShowLoadingModal","showConfirmSaveOrder","setShowConfirmSaveOrder","computeTotalPrice","total","filter","forEach","map","index","text","bgColor","action","allowCancel","closeModal","resetCartItems","header","cancelLabel","small","green","okLabel","okModal","cartItemsToSend","e","itemName","companyName","warehouseName","customerPrice","quantity","totalPrice","axios","BASEURL","timeout","headers","Authorization","then","statisticsOrders","obj","pharmacy","_id","items","saveOrder","setRefresh","catch","err","changeOnlineMsg","onSelectedChange","selectUser","cartWarehouse","selectCartWarehouse","useEffect","type","UserTypeConstants","length","w","to","CompaniesPage","lazy","FavoritesPage","HomePage","ItemPage","MedicinesPage","NotFound","NotificationPage","UserNotificationPage","UserProfilePage","WarehousesPage","OrdersPage","OrderDetailsPage","changeOptionHandler","Suspense","fallback","exact","path","selectedTopNavOption","TopNavLinks","collapsedSideNavOption","selectedSideNavOption","showTopNav","showSearchBar","SideNavLinks","component"],"sourceRoot":""}