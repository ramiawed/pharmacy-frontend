{"version":3,"file":"static/js/8707.6e60d3a9.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/partner-card/partner-card.module.scss?dc0e","components/partner-card/partner-card.component.jsx","components/search-container/search-container.component.jsx","webpack://pharmacy-frontend/./src/components/search-input/search-input.module.scss?50a3","components/search-input/search-input.component.jsx","components/warehouses-header/warehouses-header.component.jsx","pages/warehouses-page/warehouses-page.component.jsx","webpack://pharmacy-frontend/./src/components/search-container/search-container.module.scss?b7db"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"partner-card_small_font__B6atq\",\"partner_container\":\"partner-card_partner_container__VB59l\",\"full_width\":\"partner-card_full_width__CUiS6\",\"partner_logo\":\"partner-card_partner_logo__zh12g\",\"partner_name\":\"partner-card_partner_name__jXB4j\",\"from_top\":\"partner-card_from_top__OssbS\",\"name\":\"partner-card_name__xgWNa\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Logo from \"../../logo.png\";\n\n// components\nimport Button from \"../button/button.component\";\nimport ButtonWithIcon from \"../button-with-icon/button-with-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { FaHandshake, FaHandshakeSlash } from \"react-icons/fa\";\n\n// redux-stuff\nimport { useSelector } from \"react-redux\";\nimport {\n  selectFavoritesPartners,\n  selectFavoritesError,\n} from \"../../redux/favorites/favoritesSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\n\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./partner-card.module.scss\";\n\n// constants and utils\nimport {\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\nfunction PartnerCard({\n  partner,\n  fullWidth,\n  addPartnerToFavoriteHandler,\n  addCompanyToOurCompaniesHandler,\n  removePartnerFromFavoriteHandler,\n  removeCompanyFromOurCompaniesHandler,\n  partnerRowClickHandler,\n}) {\n  const { t } = useTranslation();\n\n  // selectors\n  const {\n    settings: { showWarehouseItem },\n  } = useSelector(selectSettings);\n  const favorites = useSelector(selectFavoritesPartners);\n  const favoritesError = useSelector(selectFavoritesError);\n  const { user } = useSelector(selectUserData);\n\n  // determine if the partner can see the medicines in specific warehouse\n  const allowShowingWarehouseMedicines =\n    user.type === UserTypeConstants.ADMIN ||\n    partner.type === UserTypeConstants.COMPANY ||\n    (partner.type === UserTypeConstants.WAREHOUSE &&\n      showWarehouseItem &&\n      partner.allowShowingMedicines);\n\n  return (\n    <div\n      className={[\n        styles.partner_container,\n        fullWidth ? styles.full_width : \"\",\n      ].join(\" \")}\n    >\n      <p className={styles.partner_name}>{partner.name}</p>\n\n      {partner.logo_url?.length > 0 ? (\n        <img\n          src={`${SERVER_URL}/profiles/${partner.logo_url}`}\n          className={styles.partner_logo}\n          alt=\"thumb\"\n        />\n      ) : (\n        <img src={Logo} className={styles.partner_logo} alt=\"thumb\" />\n      )}\n\n      <div className={styles.from_top}>\n        {favoritesError === \"\" ? (\n          <div\n            className={[generalStyles.icon, generalStyles.fc_yellow].join(\" \")}\n          >\n            {favorites &&\n            favorites.map((favorite) => favorite._id).includes(partner._id) ? (\n              <AiFillStar\n                size={24}\n                onClick={removePartnerFromFavoriteHandler}\n              />\n            ) : (\n              <AiOutlineStar size={24} onClick={addPartnerToFavoriteHandler} />\n            )}\n          </div>\n        ) : null}\n\n        {user.type === UserTypeConstants.WAREHOUSE &&\n        partner.type === UserTypeConstants.COMPANY ? (\n          <div>\n            {user.ourCompanies.includes(partner._id) ? (\n              <ButtonWithIcon\n                text={t(\"remove-company-from-warehouse-tooltip\")}\n                action={removeCompanyFromOurCompaniesHandler}\n                bgColor={Colors.FAILED_COLOR}\n                icon={() => <FaHandshakeSlash size={24} />}\n              />\n            ) : (\n              <ButtonWithIcon\n                text={t(\"add-company-to-warehouse-tooltip\")}\n                action={addCompanyToOurCompaniesHandler}\n                bgColor={Colors.SUCCEEDED_COLOR}\n                icon={() => <FaHandshake size={24} />}\n              />\n            )}\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {(partner.type === UserTypeConstants.COMPANY ||\n          (partner.type === UserTypeConstants.WAREHOUSE &&\n            user.type !== UserTypeConstants.WAREHOUSE)) && (\n          <div>\n            <Button\n              action={() =>\n                partnerRowClickHandler(allowShowingWarehouseMedicines)\n              }\n              text={t(\"medicines\")}\n              bgColor={Colors.FAILED_COLOR}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PartnerCard;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-icons\nimport { FaFilter } from \"react-icons/fa\";\n\n// styles\nimport styles from \"./search-container.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\nimport Icon from \"../action-icon/action-icon.component\";\n\nfunction SearchContainer({ children, searchAction }) {\n  const { t } = useTranslation();\n\n  let childrenArray = React.Children.toArray(children);\n  const [moreSearchOptions, setMoreSearchOptions] = useState(false);\n\n  return (\n    <div\n      className={[\n        styles.search_container,\n        styles.expanded,\n        moreSearchOptions ? styles.expanded_with_options : \"\",\n      ].join(\" \")}\n    >\n      <div className={styles.expanded_div}>\n        {true && (\n          <>\n            <div style={{ flex: 1 }}>\n              {childrenArray[0]}\n              {moreSearchOptions && childrenArray.length > 1\n                ? childrenArray.map((child, index) => {\n                    if (index > 0) return child;\n                    return null;\n                  })\n                : null}\n\n              {moreSearchOptions && (\n                <button\n                  onClick={() => {\n                    searchAction();\n                    setMoreSearchOptions(false);\n                  }}\n                  style={{\n                    marginBlockStart: \"4px\",\n                    marginInline: \"auto\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    width: \"50%\",\n                  }}\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_main,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              )}\n            </div>\n\n            {childrenArray.length > 1 && (\n              <div\n                style={{\n                  marginInline: \"4px\",\n                  marginLeft: \"4px\",\n                  marginRight: \"4px\",\n                }}\n              >\n                <Icon\n                  onclick={() => setMoreSearchOptions(!moreSearchOptions)}\n                  icon={() => <FaFilter />}\n                />\n              </div>\n            )}\n\n            {childrenArray.length === 1 && (\n              <div\n                className={[generalStyles.icon, generalStyles.margin_h_4].join(\n                  \" \"\n                )}\n                onClick={() => {\n                  searchAction();\n                  setMoreSearchOptions(false);\n                }}\n              >\n                <button\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_secondary,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-input_small_font__t8rxR\",\"input_div\":\"search-input_input_div__4KoDe\",\"icon_close\":\"search-input_icon_close__TC1nF\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nimport styles from \"./search-input.module.scss\";\n\nfunction SearchInput({\n  type,\n  label,\n  id,\n  value,\n  onchange,\n  placeholder,\n  onEnterPress,\n  resetField,\n  onkeyup,\n}) {\n  const { t } = useTranslation();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (onEnterPress) {\n        onEnterPress();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.input_div}>\n      {label && <label htmlFor={id}>{t(label)}</label>}\n\n      <input\n        placeholder={placeholder ? t(`${placeholder}`) : \"\"}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onchange}\n        onKeyPress={handleKeyPress}\n        onKeyUp={onkeyup && onkeyup}\n      />\n      {resetField && value && (\n        <AiFillCloseCircle\n          onClick={() => resetField(id)}\n          className={styles.icon_close}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeDisplayType,\n  changeSearchCity,\n  changeSearchName,\n  resetWarehousePageState,\n  selectWarehousesPageState,\n} from \"../../redux/warehouse/warehousesSlice\";\n\n// components\nimport SearchContainer from \"../search-container/search-container.component\";\nimport SearchInput from \"../search-input/search-input.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport CitiesDropDown from \"../cities-dropdown/cities-dropdown.component\";\n\n// react icons\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore } from \"react-icons/ai\";\nimport { FaListUl } from \"react-icons/fa\";\nimport { VscClearAll } from \"react-icons/vsc\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants and utils\nimport { CitiesName, Colors, UserTypeConstants } from \"../../utils/constants\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\n\nfunction WarehousesHeader({ search, refreshHandler, count, keyUpHandler }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const { searchName, searchCity, displayType } = useSelector(\n    selectWarehousesPageState\n  );\n\n  // when you change the selected city\n  const citiesNameChangeHandler = (val) => {\n    dispatch(changeSearchCity(val));\n  };\n\n  // select card as display type\n  const selectCardDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"card\"));\n  };\n\n  // select list as display type\n  const selectListDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"list\"));\n  };\n\n  return (\n    <>\n      <SearchContainer searchAction={search}>\n        <SearchInput\n          label=\"user-name\"\n          id=\"search-name\"\n          type=\"text\"\n          value={searchName}\n          onchange={(e) => {\n            dispatch(changeSearchName(e.target.value));\n          }}\n          placeholder=\"search-by-warehouse-name\"\n          onEnterPress={search}\n          resetField={() => dispatch(changeSearchName(\"\"))}\n          onkeyup={keyUpHandler}\n        />\n\n        {user.type === UserTypeConstants.ADMIN && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              backgroundColor: Colors.WHITE_COLOR,\n              borderRadius: \"6px\",\n            }}\n          >\n            <CitiesDropDown\n              onSelectionChange={citiesNameChangeHandler}\n              defaultValue={{\n                value: searchCity,\n                label: t(searchCity.toLowerCase()),\n              }}\n              caption=\"user-city\"\n            />\n          </div>\n        )}\n      </SearchContainer>\n\n      {/* action's buttons */}\n      <div\n        className={[generalStyles.actions, generalStyles.margin_v_4].join(\" \")}\n      >\n        {/* refresh */}\n        <Icon\n          foreColor={Colors.MAIN_COLOR}\n          tooltip={t(\"refresh-tooltip\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n          withBackground={true}\n        />\n\n        {/* clear search filter */}\n        {(searchName.length > 0 || searchCity !== CitiesName.ALL) && (\n          <Icon\n            selected={false}\n            foreColor={Colors.MAIN_COLOR}\n            tooltip={t(\"clear-filter-tooltip\")}\n            onclick={() => {\n              dispatch(resetWarehousePageState());\n              refreshHandler();\n            }}\n            icon={() => <VscClearAll />}\n            withBackground={true}\n          />\n        )}\n\n        {/* display card option */}\n        <Icon\n          foreColor={\n            displayType === \"card\" ? Colors.SUCCEEDED_COLOR : Colors.MAIN_COLOR\n          }\n          tooltip={t(\"show-item-as-card-tooltip\")}\n          onclick={selectCardDisplayTypeHandler}\n          icon={() => <AiFillAppstore />}\n          withBackground={true}\n        />\n\n        {/* display list option */}\n        <Icon\n          foreColor={\n            displayType === \"list\" ? Colors.SUCCEEDED_COLOR : Colors.MAIN_COLOR\n          }\n          tooltip={t(\"show-item-as-row-tooltip\")}\n          onclick={selectListDisplayTypeHandler}\n          icon={() => <FaListUl />}\n          withBackground={true}\n        />\n\n        <Icon\n          withBackground={true}\n          tooltip={t(\"go-back\")}\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.MAIN_COLOR}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default WarehousesHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router\";\nimport ReactLoading from \"react-loading\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport PartnerRow from \"../../components/partner-row/partner-row.component\";\nimport PartnerCard from \"../../components/partner-card/partner-card.component\";\nimport Toast from \"../../components/toast/toast.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport WarehousesHeader from \"../../components/warehouses-header/warehouses-header.component\";\nimport ButtonWithIcon from \"../../components/button-with-icon/button-with-icon.component\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getWarehouses,\n  resetWarehouse,\n  selectWarehouses,\n  selectWarehousesPageState,\n  cancelOperation,\n  changeSearchCity,\n  resetWarehousesArray,\n} from \"../../redux/warehouse/warehousesSlice\";\nimport {\n  getFavorites,\n  resetFavorites,\n  selectFavorites,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// constants and utils\nimport {\n  CitiesName,\n  Colors,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// icons\nimport { CgMoreVertical } from \"react-icons/cg\";\n\n// handlers\nimport {\n  addPartnerToFavoriteHandler,\n  partnerRowClickHandler,\n  removePartnerFromFavoriteHandler,\n} from \"../../utils/handlers\";\n\nlet timer;\n\nfunction WarehousePage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { token, user } = useSelector(selectUserData);\n  const { warehouses, count, status } = useSelector(selectWarehouses);\n  const { searchName, searchCity } = useSelector(selectWarehousesPageState);\n  const { displayType } = useSelector(selectWarehousesPageState);\n\n  // select favorites from favoriteSlice\n  const { error: favoriteError } = useSelector(selectFavorites);\n\n  const [favoritesError, setFavoritesError] = useState(favoriteError);\n\n  // handle search\n  const handleSearch = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST ||\n      user.type === UserTypeConstants.WAREHOUSE\n    ) {\n      dispatch(changeSearchCity(user.city));\n    }\n\n    dispatch(\n      getWarehouses({\n        token,\n      })\n    );\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetWarehousesArray());\n    handleSearch();\n  };\n\n  const refreshHandler = () => {\n    dispatch(resetFavorites());\n    dispatch(getFavorites({ token }));\n    dispatch(resetWarehouse());\n    handleSearch();\n  };\n\n  const keyUpHandler = (event) => {\n    if (event.keyCode === 13) return;\n    cancelOperation();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      handleEnterPress();\n    }, 200);\n  };\n\n  useEffect(() => {\n    if (warehouses.length === 0) handleSearch(1);\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user &&\n    (user.type === UserTypeConstants.ADMIN ||\n      user.type === UserTypeConstants.PHARMACY) ? (\n    <div className={generalStyles.container}>\n      <WarehousesHeader\n        count={count}\n        search={handleEnterPress}\n        refreshHandler={refreshHandler}\n        keyUpHandler={keyUpHandler}\n      />\n\n      {count > 0 && (\n        <div className={generalStyles.count}>\n          <span className={generalStyles.label}>{t(\"warehouses-count\")}</span>\n          <span className={generalStyles.count}>{count}</span>\n        </div>\n      )}\n\n      {/* display as list */}\n      {displayType === \"list\" &&\n        warehouses.map((warehouse) => (\n          <PartnerRow\n            key={warehouse._id}\n            partner={warehouse}\n            addPartnerToFavoriteHandler={() =>\n              addPartnerToFavoriteHandler(\n                warehouse,\n                isOnline,\n                dispatch,\n                token,\n                user\n              )\n            }\n            removePartnerFromFavoriteHandler={() => {\n              removePartnerFromFavoriteHandler(\n                warehouse,\n                isOnline,\n                dispatch,\n                token\n              );\n            }}\n            partnerRowClickHandler={(allowShowingWarehouseMedicines) =>\n              partnerRowClickHandler(\n                warehouse,\n                allowShowingWarehouseMedicines,\n                user,\n                dispatch,\n                token,\n                history\n              )\n            }\n          />\n        ))}\n\n      {/* display as card */}\n      {displayType === \"card\" && (\n        <div\n          className={[\n            generalStyles.flex_container,\n            generalStyles.margin_top_10,\n          ].join(\" \")}\n        >\n          {warehouses.map((warehouse) => (\n            <PartnerCard\n              key={warehouse._id}\n              partner={warehouse}\n              addPartnerToFavoriteHandler={() =>\n                addPartnerToFavoriteHandler(\n                  warehouse,\n                  isOnline,\n                  dispatch,\n                  token,\n                  user\n                )\n              }\n              removePartnerFromFavoriteHandler={() => {\n                removePartnerFromFavoriteHandler(\n                  warehouse,\n                  isOnline,\n                  dispatch,\n                  token\n                );\n              }}\n              partnerRowClickHandler={(allowShowingWarehouseMedicines) =>\n                partnerRowClickHandler(\n                  warehouse,\n                  allowShowingWarehouseMedicines,\n                  user,\n                  dispatch,\n                  token,\n                  history\n                )\n              }\n            />\n          ))}\n        </div>\n      )}\n\n      {count > 0 && status !== \"loading\" && (\n        <div className={generalStyles.count}>\n          {warehouses.length} / {count}\n        </div>\n      )}\n\n      {warehouses.length === 0 &&\n        status !== \"loading\" &&\n        searchName.length === 0 &&\n        searchCity === CitiesName.ALL && <NoContent msg={t(\"no-warehouses\")} />}\n\n      {warehouses.length === 0 &&\n        status !== \"loading\" &&\n        (searchName.length !== 0 || searchCity !== CitiesName.ALL) && (\n          <NoContent msg={t(\"no-result-found\")} />\n        )}\n\n      {status === \"loading\" && (\n        <div className={generalStyles.flex_container}>\n          <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n        </div>\n      )}\n\n      {warehouses.length < count && (\n        <div className={generalStyles.flex_container}>\n          <ButtonWithIcon\n            text={t(\"more\")}\n            action={handleMoreResult}\n            bgColor={Colors.SECONDARY_COLOR}\n            icon={() => <CgMoreVertical />}\n          />\n        </div>\n      )}\n\n      {warehouses.length === count && status !== \"loading\" && count !== 0 && (\n        <p\n          className={[generalStyles.center, generalStyles.fc_secondary].join(\n            \" \"\n          )}\n        >\n          {t(\"no-more\")}\n        </p>\n      )}\n\n      {favoritesError && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          actionAfterTimeout={() => {\n            setFavoritesError(\"\");\n          }}\n        >\n          {t(favoriteError)}\n        </Toast>\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n}\n\nexport default WarehousePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-container_small_font__Ha0Xq\",\"search_container\":\"search-container_search_container__6isGM\",\"expanded\":\"search-container_expanded__79n+k\",\"expanded_div\":\"search-container_expanded_div__Hmmm1\",\"checkbox_div\":\"search-container_checkbox_div__RPj5T\"};"],"names":["partner","fullWidth","addPartnerToFavoriteHandler","addCompanyToOurCompaniesHandler","removePartnerFromFavoriteHandler","removeCompanyFromOurCompaniesHandler","partnerRowClickHandler","t","useTranslation","showWarehouseItem","useSelector","selectSettings","settings","favorites","selectFavoritesPartners","favoritesError","selectFavoritesError","user","selectUserData","allowShowingWarehouseMedicines","type","UserTypeConstants","allowShowingMedicines","className","styles","join","name","logo_url","length","src","SERVER_URL","alt","Logo","generalStyles","map","favorite","_id","includes","size","onClick","ourCompanies","text","action","bgColor","Colors","icon","children","searchAction","childrenArray","React","useState","moreSearchOptions","setMoreSearchOptions","style","flex","child","index","marginBlockStart","marginInline","marginLeft","marginRight","width","onclick","label","id","value","onchange","placeholder","onEnterPress","resetField","onkeyup","htmlFor","onChange","onKeyPress","event","key","onKeyUp","timer","search","refreshHandler","keyUpHandler","count","history","useHistory","dispatch","useDispatch","selectUser","selectWarehousesPageState","searchName","searchCity","displayType","e","changeSearchName","target","display","justifyContent","backgroundColor","borderRadius","onSelectionChange","val","changeSearchCity","defaultValue","toLowerCase","caption","foreColor","tooltip","withBackground","CitiesName","selected","resetWarehousePageState","changeDisplayType","goBack","onSelectedChange","isOnline","selectOnlineStatus","token","selectWarehouses","warehouses","status","favoriteError","selectFavorites","error","setFavoritesError","handleSearch","city","getWarehouses","handleEnterPress","resetWarehousesArray","useEffect","window","scrollTo","cancelOperation","to","resetFavorites","getFavorites","resetWarehouse","keyCode","clearTimeout","setTimeout","warehouse","msg","color","changeOnlineMsg","actionAfterTimeout"],"sourceRoot":""}