{"version":3,"file":"static/js/3334.5a7af33d.chunk.js","mappings":"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","sources":["components/side-nav-admin/side-nav-admin.component.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n// icons\nimport { HiUsers } from \"react-icons/hi\";\nimport { GiMedicines } from \"react-icons/gi\";\nimport { RiAdvertisementFill } from \"react-icons/ri\";\nimport {\n  MdBackup,\n  MdNotificationsActive,\n  MdOutlineSettings,\n} from \"react-icons/md\";\nimport {\n  BsFillEnvelopeFill,\n  BsFillBarChartLineFill,\n  BsBasket2Fill,\n} from \"react-icons/bs\";\nimport { CgProfile } from \"react-icons/cg\";\n\n// react redux\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPageState, setPageState } from \"../../redux/items/itemsSlices\";\nimport {\n  setSearchCompanyId,\n  setSearchWarehouseId,\n} from \"../../redux/medicines/medicinesSlices\";\nimport { orderSliceSignOut, setRefresh } from \"../../redux/orders/ordersSlice\";\n\n// styles\nimport styles from \"../side-nav.module.scss\";\n\n// constants\nimport { SideNavLinks, UserTypeConstants } from \"../../utils/constants.js\";\n\nfunction SideNavAdmin({ selectedOption, onSelectedChange, collapsed }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const {\n    settings: { saveOrders },\n  } = useSelector(selectSettings);\n\n  return (\n    <>\n      <div\n        style={{\n          height: \"5px\",\n        }}\n      ></div>\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.PARTNERS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.PARTNERS);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n        }}\n        to=\"/admin/partners\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <HiUsers size={24} />\n            {collapsed && (\n              <label className={styles.tooltip}>\n                {t(SideNavLinks.PARTNERS)}\n              </label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(SideNavLinks.PARTNERS)}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.ITEMS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.ITEMS);\n          dispatch(resetPageState());\n          dispatch(\n            setPageState({\n              company: null,\n              warehouse: null,\n              role: UserTypeConstants.ADMIN,\n            })\n          );\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n        }}\n        to={{\n          pathname: \"/items\",\n        }}\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <GiMedicines size={24} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"items\")}</label>\n            )}\n          </div>\n          {!collapsed && <div className={styles.nav_label}>{t(\"items\")}</div>}\n        </div>\n      </Link>\n\n      {saveOrders && (\n        <Link\n          className={[\n            styles.link,\n            selectedOption === SideNavLinks.ORDERS ? `${styles.selected}` : \"\",\n          ].join(\" \")}\n          onClick={() => {\n            onSelectedChange(SideNavLinks.ORDERS);\n            dispatch(setRefresh(true));\n            dispatch(orderSliceSignOut());\n            dispatch(setSearchWarehouseId(null));\n            dispatch(setSearchCompanyId(null));\n          }}\n          to=\"/orders\"\n        >\n          <div className={styles.nav}>\n            <div className={styles.nav_icon}>\n              <BsFillEnvelopeFill size={24} />\n              {collapsed && (\n                <label className={styles.tooltip}>{t(\"orders\")}</label>\n              )}\n            </div>\n            {!collapsed && (\n              <div className={styles.nav_label}>{t(\"orders\")} </div>\n            )}\n          </div>\n        </Link>\n      )}\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.BASKETS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.BASKETS);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n        }}\n        to=\"/baskets\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"baskets\")}</label>\n            )}\n            <BsBasket2Fill size={24} />\n          </div>\n          {!collapsed && <div className={styles.nav_label}>{t(\"baskets\")}</div>}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.STATISTICS\n            ? `${styles.selected}`\n            : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.STATISTICS);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n          // dispatch(setSelectedWarehouse(null));\n        }}\n        to=\"/admin/statistics\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <BsFillBarChartLineFill size={24} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"statistics\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"statistics\")}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.ADVERTISEMENTS\n            ? `${styles.selected}`\n            : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.ADVERTISEMENTS);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n          // dispatch(setSelectedWarehouse(null));\n        }}\n        to=\"/admin/advertisements\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"advertisements\")}</label>\n            )}\n            <RiAdvertisementFill size={24} />\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"advertisements\")}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.NOTIFICATIONS\n            ? `${styles.selected}`\n            : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.NOTIFICATIONS);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n          // dispatch(setSelectedWarehouse(null));\n        }}\n        to=\"/admin/notifications\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <MdNotificationsActive size={24} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"notifications\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"notifications\")}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.SETTINGS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.SETTINGS);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n        }}\n        to=\"/admin/settings\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <MdOutlineSettings size={24} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"settings\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"settings\")}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.BACKUP_RESTORE\n            ? `${styles.selected}`\n            : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.BACKUP_RESTORE);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n          // dispatch(setSelectedWarehouse(null));\n        }}\n        to=\"/admin/backup-restore\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <MdBackup size={24} />\n            {collapsed && (\n              <label className={styles.tooltip}>\n                {t(\"backup and restore\")}\n              </label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"backup and restore\")}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.PROFILE ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.PROFILE);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n          // dispatch(setSelectedWarehouse(null));\n        }}\n        to=\"/profile\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <CgProfile size={24} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"profile\")}</label>\n            )}\n          </div>\n          {!collapsed && <div className={styles.nav_label}>{t(\"profile\")}</div>}\n        </div>\n      </Link>\n    </>\n  );\n}\n\nexport default SideNavAdmin;\n"],"names":["selectedOption","onSelectedChange","collapsed","t","useTranslation","dispatch","useDispatch","saveOrders","useSelector","selectSettings","settings","style","height","className","styles","SideNavLinks","join","onClick","setSearchWarehouseId","setSearchCompanyId","to","size","resetPageState","setPageState","company","warehouse","role","UserTypeConstants","pathname","setRefresh","orderSliceSignOut"],"sourceRoot":""}