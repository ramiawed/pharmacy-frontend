{"version":3,"file":"static/js/265.2bc9239b.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/add-to-cart-modal/add-to-cart-modal.module.scss?998e","components/add-to-cart-modal/add-to-cart-modal.component.jsx","webpack://pharmacy-frontend/./src/components/item-row/item-row.module.scss?0115","components/item-row/item-row.component.jsx","webpack://pharmacy-frontend/./src/components/item-card/item-card.module.scss?2503","components/item-card/item-card.component.jsx","webpack://pharmacy-frontend/./src/components/medicines-table-header/medicines-table-header.module.scss?8eb7","components/medicines-table-header/medicines-table-header.component.jsx","webpack://pharmacy-frontend/./src/components/medicines-search-string/medicines-search-string.module.scss?3bd3","components/medicines-search-string/medicines-search-string.component.jsx","pages/medicines-page/medicines-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"warehouse_row\":\"add-to-cart-modal_warehouse_row__WLx7w\",\"offer\":\"add-to-cart-modal_offer__vBdMK\",\"value\":\"add-to-cart-modal_value__aJCXy\",\"max_qty_div\":\"add-to-cart-modal_max_qty_div__DeRw8\",\"select_warehouse\":\"add-to-cart-modal_select_warehouse__QvEuj\",\"error\":\"add-to-cart-modal_error__N6LB6\"};","// Modal that show the item with it's warehouse to allow pharmacy to buy an item\n// you should select a quantity greater than zero an less than the selected warehouse max quantity\n\n// Props\n// item: the item that the pharmacy will buy\n// close: action to close the modal\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport Modal from \"../modal/modal.component\";\nimport SelectCustom from \"../select/select.component\";\n\n// redux stuff\nimport { addItemToCart } from \"../../redux/cart/cartSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { statisticsItemAddedToCart } from \"../../redux/statistics/statisticsSlice\";\nimport { selectOnlineStatus } from \"../../redux/online/onlineSlice\";\n\n// constants and utils\nimport {\n  Colors,\n  OfferTypes,\n  onKeyPressForNumberInput,\n  toEnglishNumber,\n} from \"../../utils/constants\";\n\n// styles\nimport styles from \"./add-to-cart-modal.module.scss\";\n\n// check if there is an offer for entered quantity in a specific warehouse\nconst checkOfferQty = (selectedWarehouse, qty) => {\n  // check if the specified warehouse has an offer\n  if (selectedWarehouse.offer.offers.length > 0) {\n    // through all the offers, check if the entered quantity has an offer\n    for (let i = 0; i < selectedWarehouse.offer.offers.length; i++) {\n      // check if the entered quantity has an offer\n      if (qty >= selectedWarehouse.offer.offers[i].qty) {\n        // if it has return:\n        // 1- mode of the offer (pieces, percentage)\n        // 2- bonus\n        // 2-1: if the mode is pieces return the bonus * (entered qty / bonus qty)\n        // 2-2: if the mode is percentage return the bonus\n        if (selectedWarehouse.offer.mode === OfferTypes.PERCENTAGE) {\n          return selectedWarehouse.offer.offers[i].bonus;\n        } else {\n          return (\n            selectedWarehouse.offer.offers[i].bonus +\n            checkOfferQty(\n              selectedWarehouse,\n              qty - selectedWarehouse.offer.offers[i].qty\n            )\n          );\n        }\n      }\n    }\n  }\n\n  return 0;\n};\n\nfunction AddToCartModal({ item, close, setAddItemToCartMsg }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const { token, user } = useSelector(selectUserData);\n  const isOnline = useSelector(selectOnlineStatus);\n\n  // build the warehouse option array that contains this item\n  // get all the warehouse that contains this item\n  // put asterisk after warehouse name if the warehouse has an offer\n  const itemWarehousesOption = item.warehouses\n    .filter((w) => w.warehouse.city === user.city)\n    .map((w) => {\n      const asterisk = w.offer.offers.length > 0 ? \"*\" : \"\";\n\n      return {\n        label: `${w.warehouse.name} ${asterisk}`,\n        value: w.warehouse._id,\n      };\n    });\n\n  // select the first warehouse in the list\n  const [selectedWarehouse, setSelectedWarehouse] = useState(\n    item.warehouses.filter((w) => w.warehouse.city === user.city)[0]\n  );\n\n  const [offer, setOffer] = useState(\n    item.warehouses.filter((w) => w.warehouse.city === user.city)[0].offer\n  );\n  const [qty, setQty] = useState();\n  const [qtyError, setQtyError] = useState(false);\n\n  const handleWarehouseChange = (val) => {\n    setSelectedWarehouse(item.warehouses.find((w) => w.warehouse._id == val));\n    setOffer(item.warehouses.find((w) => w.warehouse._id == val).offer);\n  };\n\n  // const onKeyPress = (event) => {\n  //   return event.charCode >= 48 && event.charCode <= 57;\n  // };\n\n  const quantityChange = (e) => {\n    const value = Number.parseInt(toEnglishNumber(e.target.value));\n    setQty(isNaN(value) ? \"\" : value);\n    setQtyError(false);\n  };\n\n  const handleAddItemToCart = () => {\n    if (qty === \"\") {\n      setQtyError(true);\n      return;\n    }\n\n    if (selectedWarehouse.maxQty !== 0 && qty > selectedWarehouse.maxQty) {\n      setQtyError(true);\n      return;\n    }\n\n    const bonusQty = checkOfferQty(selectedWarehouse, qty);\n\n    dispatch(\n      addItemToCart({\n        item: item,\n        warehouse: selectedWarehouse,\n        qty: qty,\n        bonus: bonusQty > 0 ? bonusQty : null,\n        bonusType: bonusQty > 0 ? selectedWarehouse.offer.mode : null,\n      })\n    );\n\n    if (isOnline) {\n      dispatch(statisticsItemAddedToCart({ obj: { itemId: item._id }, token }));\n    }\n\n    close();\n    setAddItemToCartMsg(\"add-item-to-cart\");\n  };\n\n  return (\n    <>\n      <Modal\n        header=\"add-to-cart\"\n        cancelLabel=\"cancel-label\"\n        okLabel=\"add-label\"\n        closeModal={close}\n        okModal={handleAddItemToCart}\n        small={true}\n      >\n        {/* <div className={styles.warehouse_row}> */}\n        <div className={styles.select_warehouse}>\n          <label>{t(\"item-warehouse\")}</label>\n          <SelectCustom\n            bgColor={Colors.SECONDARY_COLOR}\n            foreColor=\"#fff\"\n            options={itemWarehousesOption}\n            onchange={handleWarehouseChange}\n            defaultOption={itemWarehousesOption[0]}\n            // caption=\"item-warehouse\"\n          />\n        </div>\n\n        <div className={styles.max_qty_div}>\n          <label>{t(\"item-max-qty\")}</label>\n          <p>\n            {selectedWarehouse.maxQty === 0\n              ? t(\"no-limit-qty\")\n              : selectedWarehouse.maxQty}\n          </p>\n        </div>\n        <div className={styles.max_qty_div}>\n          <label>{t(\"selected-qty\")}</label>\n          <input\n            className={qtyError ? styles.error : \"\"}\n            // type=\"number\"\n            // min={0}\n            value={qty}\n            onKeyPress={onKeyPressForNumberInput}\n            onChange={quantityChange}\n          />\n        </div>\n        {/* </div> */}\n\n        {offer?.offers.length > 0 &&\n          offer.offers.map((o, index) => (\n            <div className={styles.offer} key={index}>\n              <p>\n                <label>{t(\"quantity-label\")}</label>\n                <label className={styles.value} style={{ padding: \"0 6px\" }}>\n                  {o.qty}\n                </label>\n                <label style={{ paddingLeft: \"20px\" }}>\n                  {t(\"after-quantity-label\")}\n                </label>\n              </p>\n              <p>\n                <label>\n                  {offer.mode === OfferTypes.PIECES\n                    ? t(\"bonus-quantity-label\")\n                    : t(\"bonus-percentage-label\")}\n                </label>\n                <label className={styles.value}>{o.bonus}</label>\n                <label>\n                  {offer.mode === OfferTypes.PIECES\n                    ? t(\"after-bonus-quantity-label\")\n                    : t(\"after-bonus-percentage-label\")}\n                </label>\n              </p>\n            </div>\n          ))}\n      </Modal>\n    </>\n  );\n}\n\nexport default AddToCartModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"item-row_name__seC8Y\",\"align_center\":\"item-row_align_center__Ml13j\",\"align_start\":\"item-row_align_start__fA8fS\",\"details\":\"item-row_details__o1dWD\",\"icon\":\"item-row_icon__BqqxX\",\"fixed\":\"item-row_fixed__fKMWF\",\"price\":\"item-row_price__sAutL\",\"small_font\":\"item-row_small_font__V3pjP\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n// react-redux stuff\nimport {\n  statisticsItemFavorites,\n  statisticsItemSelected,\n} from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport rowStyles from \"../row.module.scss\";\nimport styles from \"./item-row.module.scss\";\n\n// constants and utils\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\nimport Toast from \"../toast/toast.component\";\n\n// if logged user is\n// 1- ADMIN: highlight the row by green color if the medicine has an offer.\n// 2- COMPANY: don't highlight the row never.\n// 3- GUEST: don't highlight the row never.\n// 4- WAREHOUSE: highlight the row by green if the medicine has an offer by logging warehouse.\n// 5- PHARMACY: highlight the row by green if the medicine has an offer by any warehouse\n// in the same city with the logging user\nconst checkOffer = (item, user) => {\n  // don't show the offer if the logged user is GUEST or COMPANY\n  if (\n    user.type === UserTypeConstants.GUEST ||\n    user.type === UserTypeConstants.COMPANY\n  ) {\n    return false;\n  }\n\n  let result = false;\n\n  if (user.type === UserTypeConstants.ADMIN) {\n    item.warehouses.forEach((w) => {\n      if (w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  if (user.type === UserTypeConstants.WAREHOUSE) {\n    item.warehouses\n      .filter((w) => w.warehouse._id === user._id)\n      .forEach((w) => {\n        if (w.offer.offers.length > 0) {\n          result = true;\n        }\n      });\n  }\n\n  if (user.type === UserTypeConstants.PHARMACY) {\n    item.warehouses.forEach((w) => {\n      if (w.warehouse.city === user.city && w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nfunction ItemRow({ item, isSearch, isFavorite, isSmallFavorite }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const favoritesItems = useSelector(selectFavoritesItems);\n\n  // own state\n  const [showModal, setShowModal] = useState(false);\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n  const [addItemToCart, setAddItemToCart] = useState(\"\");\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(addFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(statisticsItemFavorites({ obj: { itemId: item._id }, token }));\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(removeFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  const dispatchStatisticsHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        statisticsItemSelected({\n          obj: { itemId: item._id },\n          token,\n        })\n      );\n    }\n  };\n\n  // render method\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: checkOffer(item, user)\n            ? Colors.OFFER_COLOR\n            : Colors.WHITE_COLOR,\n          cursor: \"pointer\",\n        }}\n        className={[\n          isSearch || isFavorite\n            ? rowStyles.search_container\n            : rowStyles.container,\n        ].join(\" \")}\n        onClick={() => {\n          dispatchStatisticsHandler();\n\n          history.push(\"/item\", {\n            from: user.type,\n            type: \"info\",\n            allowAction: false,\n            itemId: item._id,\n            companyId: item.company._id,\n            warehouseId:\n              user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n          });\n        }}\n      >\n        <label\n          className={[\n            styles.name,\n            !isFavorite ? styles.align_center : \"\",\n            isFavorite ? styles.align_start : \"\",\n            isSmallFavorite ? styles.small_font : \"\",\n          ].join(\" \")}\n        >\n          {item.name}\n        </label>\n\n        <label\n          className={[\n            styles.details,\n            styles.center,\n            isSmallFavorite ? styles.small_font : \"\",\n          ].join(\" \")}\n        >\n          {item.company.name}\n        </label>\n\n        <label\n          className={[\n            styles.fixed,\n            styles.center,\n            isSmallFavorite ? styles.small_font : \"\",\n          ].join(\" \")}\n        >\n          {item.caliber}\n        </label>\n\n        <label\n          className={[\n            styles.fixed,\n            styles.center,\n            isSmallFavorite ? styles.small_font : \"\",\n          ].join(\" \")}\n        >\n          {item.packing}\n        </label>\n\n        <label\n          className={[\n            styles.details,\n            styles.center,\n            isSmallFavorite ? styles.small_font : \"\",\n          ].join(\" \")}\n        >\n          {item.formula}\n        </label>\n\n        {user.type !== UserTypeConstants.GUEST && !isFavorite && (\n          <label className={[styles.price, styles.center].join(\" \")}>\n            {item.price}\n          </label>\n        )}\n\n        {!isFavorite && (\n          <label className={[styles.price, styles.center].join(\" \")}>\n            {item.customer_price}\n          </label>\n        )}\n\n        {!isFavorite && (\n          <label\n            className={[\n              styles.details,\n              styles.center,\n              isSmallFavorite ? styles.small_font : \"\",\n            ].join(\" \")}\n          >\n            {item.barcode}\n          </label>\n        )}\n\n        <label className={[styles.center, styles.icon].join(\" \")}>\n          {changeAddToWarehouseLoading ? (\n            <Icon\n              icon={() => <VscLoading className={generalStyles.loading} />}\n              onclick={() => {}}\n              foreColor={Colors.SECONDARY_COLOR}\n            />\n          ) : (\n            user.type === UserTypeConstants.WAREHOUSE &&\n            (item.warehouses.map((w) => w.warehouse._id).includes(user._id) ? (\n              <Icon\n                icon={() => <RiDeleteBin5Fill />}\n                onclick={removeItemFromWarehouseHandler}\n                tooltip={t(\"remove-from-warehouse-tooltip\")}\n                foreColor={Colors.FAILED_COLOR}\n              />\n            ) : (\n              <Icon\n                icon={() => <MdAddCircle />}\n                onclick={addItemToWarehouseHandler}\n                tooltip={t(\"add-to-warehouse-tooltip\")}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            ))\n          )}\n\n          {user.type === UserTypeConstants.PHARMACY &&\n          item.existing_place[user.city] > 0 ? (\n            <Icon\n              icon={() => <GiShoppingCart />}\n              onclick={(e) => {\n                setShowModal(true);\n                e.stopPropagation();\n              }}\n              foreColor={Colors.SUCCEEDED_COLOR}\n            />\n          ) : (\n            <div style={{ width: \"24px\" }}></div>\n          )}\n        </label>\n\n        <label className={[styles.icon, styles.align_center].join(\" \")}>\n          {changeFavoriteLoading ? (\n            <Icon\n              icon={() => <VscLoading className={generalStyles.loading} />}\n              onclick={() => {}}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : favoritesItems\n              .map((favorite) => favorite._id)\n              .includes(item._id) ? (\n            <Icon\n              icon={() => <AiFillStar />}\n              onclick={removeItemFromFavoritesItemsHandler}\n              tooltip={t(\"remove-from-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : (\n            <Icon\n              icon={() => <AiOutlineStar />}\n              onclick={addItemToFavoriteItemsHandler}\n              tooltip={t(\"add-to-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          )}\n        </label>\n      </div>\n\n      {showModal && (\n        <AddToCartModal\n          item={item}\n          close={() => setShowModal(false)}\n          setAddItemToCartMsg={setAddItemToCart}\n        />\n      )}\n\n      {addItemToCart.length > 0 && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addItemToCart)}\n          actionAfterTimeout={() => setAddItemToCart(\"\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default ItemRow;\n","// extracted by mini-css-extract-plugin\nexport default {\"partner_container\":\"item-card_partner_container__S-nN0\",\"partner_container_has_offer\":\"item-card_partner_container_has_offer__Lk+ad\",\"logo_div\":\"item-card_logo_div__JPceh\",\"logo\":\"item-card_logo__cJH9F\",\"content\":\"item-card_content__c02UJ\",\"showed_content\":\"item-card_showed_content__QeM6e\",\"has_offer\":\"item-card_has_offer__ogWNl\",\"behind_content\":\"item-card_behind_content__P+DRN\",\"item_name\":\"item-card_item_name__o+J8+\",\"info\":\"item-card_info__ZqYpE\",\"bigger\":\"item-card_bigger__IS-s4\",\"more_info\":\"item-card_more_info__OKbUv\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// redux-stuff\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport { selectToken, selectUser } from \"../../redux/auth/authSlice\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./item-card.module.scss\";\nimport rowStyles from \"../row.module.scss\";\n\n// constants and utils\nimport {\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { statisticsItemFavorites } from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// if logged user is\n// 1- ADMIN: highlight the row by green color if the medicine has an offer.\n// 2- COMPANY: don't highlight the row never.\n// 3- GUEST: don't highlight the row never.\n// 4- WAREHOUSE: highlight the row by green if the medicine has an offer by logging warehouse.\n// 5- PHARMACY: highlight the row by green if the medicine has an offer by any warehouse\n// in the same city with the logging user\nconst checkOffer = (item, user) => {\n  if (\n    user.type === UserTypeConstants.GUEST ||\n    user.type === UserTypeConstants.COMPANY\n  ) {\n    return false;\n  }\n\n  let result = false;\n\n  if (user.type === UserTypeConstants.ADMIN) {\n    item.warehouses.forEach((w) => {\n      if (w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  if (user.type === UserTypeConstants.WAREHOUSE) {\n    item.warehouses\n      .filter((w) => w.warehouse._id === user._id)\n      .forEach((w) => {\n        if (w.offer.offers.length > 0) {\n          result = true;\n        }\n      });\n  }\n\n  if (user.type === UserTypeConstants.PHARMACY) {\n    item.warehouses.forEach((w) => {\n      if (w.warehouse.city === user.city && w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nfunction ItemCard({ companyItem }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isOnline = useSelector(selectOnlineStatus);\n  const user = useSelector(selectUser);\n  const favorites = useSelector(selectFavoritesItems);\n  const token = useSelector(selectToken);\n  const [showModal, setShowModal] = useState(false);\n\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      addFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then((result) => {\n        dispatch(\n          statisticsItemFavorites({ obj: { itemId: companyItem._id }, token })\n        );\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      removeFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  const dispatchStatisticsHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        statisticsItemFavorites({\n          obj: { itemId: companyItem._id },\n          token,\n        })\n      );\n    }\n  };\n  return (\n    <div\n      className={[\n        styles.partner_container,\n        checkOffer(companyItem, user) ? styles.partner_container_has_offer : \"\",\n      ].join(\" \")}\n      onClick={() => {\n        dispatchStatisticsHandler();\n\n        history.push(\"item\", {\n          from: user.type,\n          type: \"info\",\n          allowAction: false,\n\n          itemId: companyItem._id,\n          companyId: companyItem.company._id,\n          warehouseId:\n            user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n        });\n      }}\n    >\n      <div\n        className={[\n          generalStyles.actions,\n          generalStyles.padding_v_4,\n          generalStyles.padding_h_6,\n        ].join(\" \")}\n      >\n        {changeAddToWarehouseLoading ? (\n          <Icon\n            icon={() => (\n              <VscLoading className={generalStyles.loading} size={20} />\n            )}\n            onclick={() => {}}\n            foreColor={Colors.SECONDARY_COLOR}\n          />\n        ) : (\n          user.type === UserTypeConstants.WAREHOUSE &&\n          (companyItem.warehouses\n            .map((w) => w.warehouse._id)\n            .includes(user._id) ? (\n            <Icon\n              icon={() => <RiDeleteBin5Fill size={24} />}\n              onclick={removeItemFromWarehouseHandler}\n              tooltip={t(\"remove-from-warehouse-tooltip\")}\n              foreColor={Colors.FAILED_COLOR}\n            />\n          ) : (\n            <Icon\n              icon={() => <MdAddCircle size={24} />}\n              onclick={addItemToWarehouseHandler}\n              tooltip={t(\"add-to-warehouse-tooltip\")}\n              foreColor={Colors.SUCCEEDED_COLOR}\n            />\n          ))\n        )}\n\n        {user.type === UserTypeConstants.PHARMACY &&\n          companyItem.warehouses.length > 0 && (\n            <div\n              className={[\n                generalStyles.icon,\n                generalStyles.fc_green,\n                generalStyles.position_top_5_left_40,\n              ].join(\" \")}\n              onClick={(e) => {\n                setShowModal(true);\n                e.stopPropagation();\n              }}\n            >\n              <GiShoppingCart size={24} />\n            </div>\n          )}\n\n        {changeFavoriteLoading ? (\n          <Icon\n            icon={() => (\n              <VscLoading className={generalStyles.loading} size={24} />\n            )}\n            onclick={() => {}}\n            foreColor={Colors.YELLOW_COLOR}\n          />\n        ) : favorites\n            .map((favorite) => favorite._id)\n            .includes(companyItem._id) ? (\n          <Icon\n            icon={() => <AiFillStar size={24} />}\n            onclick={removeItemFromFavoritesItems}\n            tooltip={t(\"remove-from-favorite-tooltip\")}\n            foreColor={Colors.YELLOW_COLOR}\n          />\n        ) : (\n          <Icon\n            icon={() => <AiOutlineStar size={24} />}\n            onclick={addItemToFavoriteItems}\n            tooltip={t(\"add-to-favorite-tooltip\")}\n            foreColor={Colors.YELLOW_COLOR}\n          />\n        )}\n      </div>\n\n      <div className={styles.logo_div}>\n        {companyItem.logo_url && companyItem.logo_url !== \"\" ? (\n          <img\n            src={`${SERVER_URL}/${companyItem.logo_url}`}\n            className={styles.logo}\n            alt=\"thumb\"\n          />\n        ) : (\n          <img\n            src={`${SERVER_URL}/default-medicine.png`}\n            className={styles.logo}\n            alt=\"thumb\"\n          />\n        )}\n      </div>\n\n      <div className={styles.content}>\n        <div\n          className={[\n            styles.showed_content,\n            checkOffer(companyItem, user) ? styles.has_offer : \"\",\n          ].join(\" \")}\n        >\n          <label\n            className={[\n              generalStyles.fc_white,\n              generalStyles.center,\n              generalStyles.block,\n            ].join(\" \")}\n          >\n            {/* <Link\n              onClick={dispatchStatisticsHandler}\n              to={{\n                pathname: \"/item\",\n                state: {\n                  from: user.type,\n                  type: \"info\",\n                  allowAction: false,\n\n                  itemId: companyItem._id,\n                  companyId: companyItem.company._id,\n                  warehouseId:\n                    user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n                },\n              }}\n              className={[\n                rowStyles.hover_underline,\n                generalStyles.fc_white,\n              ].join(\" \")}\n            >\n            </Link> */}\n            {companyItem.name}\n          </label>\n\n          {user.type !== UserTypeConstants.GUEST && (\n            <div className={styles.info}>\n              <label>{t(\"item-price\")}:</label>\n              <label className={styles.bigger}>{companyItem.price}</label>\n            </div>\n          )}\n\n          <div className={styles.info}>\n            <label>{t(\"item-customer-price\")}:</label>\n            <label className={styles.bigger}>\n              {companyItem.customer_price}\n            </label>\n          </div>\n\n          <div className={styles.info}>\n            <label>{t(\"item-formula\")}:</label>\n            <label className={styles.bigger}>{companyItem.formula}</label>\n          </div>\n\n          <div className={styles.more_info}>\n            <div className={styles.info}>\n              <label>{t(\"item-packing\")}</label>\n              <label className={styles.bigger}>{companyItem.packing}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label>{t(\"item-caliber\")}</label>\n              <label className={styles.bigger}>{companyItem.caliber}</label>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.behind_content}></div>\n      </div>\n\n      {showModal && (\n        <AddToCartModal item={companyItem} close={() => setShowModal(false)} />\n      )}\n    </div>\n  );\n}\n\nexport default ItemCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"small\":\"medicines-table-header_small__1fRiB\",\"large\":\"medicines-table-header_large__hwG6F\",\"normal\":\"medicines-table-header_normal__DdomQ\",\"icon\":\"medicines-table-header_icon__j70WI\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nimport TableHeader from \"../table-header/table-header.component\";\n\nimport styles from \"./medicines-table-header.module.scss\";\n\nfunction MedicinesTableHeader({ user }) {\n  const { t } = useTranslation();\n\n  return (\n    <TableHeader>\n      <label\n        className={styles.normal}\n        style={{\n          flex: 3,\n        }}\n      >\n        {t(\"item-trade-name\")}\n      </label>\n\n      {/* company name */}\n      <label\n        className={styles.large}\n        style={{\n          flex: 1,\n        }}\n      >\n        {t(\"user-company-name\")}\n      </label>\n      <label\n        className={styles.small}\n        style={{\n          flex: 1,\n        }}\n      >\n        {t(\"user-company-name-small\")}\n      </label>\n\n      {/* caliber */}\n      <label\n        className={styles.large}\n        style={{\n          width: \"40px\",\n        }}\n      >\n        {t(\"item-caliber\")}\n      </label>\n      <label\n        className={styles.small}\n        style={{\n          width: \"25px\",\n        }}\n      >\n        {t(\"item-caliber-small\")}\n      </label>\n\n      {/* packing */}\n      <label\n        className={styles.large}\n        style={{\n          width: \"40px\",\n        }}\n      >\n        {t(\"item-packing\")}\n      </label>\n\n      <label\n        className={styles.small}\n        style={{\n          width: \"25px\",\n        }}\n      >\n        {t(\"item-packing-small\")}\n      </label>\n\n      {/* formula */}\n      <label\n        className={styles.large}\n        style={{\n          flex: 1,\n        }}\n      >\n        {t(\"item-formula\")}\n      </label>\n\n      <label\n        className={styles.small}\n        style={{\n          flex: 1,\n        }}\n      >\n        {t(\"item-formula-small\")}\n      </label>\n\n      {/* price */}\n      {user.type !== UserTypeConstants.GUEST && (\n        <>\n          <label\n            className={styles.large}\n            style={{\n              width: \"65px\",\n            }}\n          >\n            {t(\"item-price\")}\n          </label>\n          <label\n            className={styles.small}\n            style={{\n              width: \"30px\",\n            }}\n          >\n            {t(\"item-price-small\")}\n          </label>\n        </>\n      )}\n\n      {/* customer price */}\n      <label\n        className={styles.large}\n        style={{\n          width: \"65px\",\n        }}\n      >\n        {t(\"item-customer-price\")}\n      </label>\n      <label\n        className={styles.small}\n        style={{\n          width: \"30px\",\n        }}\n      >\n        {t(\"item-customer-price-small\")}\n      </label>\n\n      <label\n        className={styles.large}\n        style={{\n          flex: 1,\n        }}\n      >\n        {t(\"item-barcode\")}\n      </label>\n      <label\n        className={styles.small}\n        style={{\n          flex: 1,\n        }}\n      >\n        {t(\"item-barcode-small\")}\n      </label>\n\n      <label className={styles.icon}></label>\n      <label className={styles.icon}></label>\n    </TableHeader>\n  );\n}\n\nexport default MedicinesTableHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"div_search_str\":\"medicines-search-string_div_search_str__VtrHq\",\"label\":\"medicines-search-string_label__-AfzZ\",\"value\":\"medicines-search-string_value__TyoDg\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nimport styles from \"./medicines-search-string.module.scss\";\n\nfunction MedicinesSearchString({ pageState, user }) {\n  const { t } = useTranslation();\n  return (\n    <div className={styles.div_search_str}>\n      {pageState.searchName && (\n        <>\n          <label className={styles.label}>{t(\"item-name\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchName}</label>\n        </>\n      )}\n\n      {pageState.searchCompanyName && (\n        <>\n          <label className={styles.label}>{t(\"item-company\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchCompanyName}</label>\n        </>\n      )}\n\n      {pageState.searchWarehouseName && (\n        <>\n          <label className={styles.label}>{t(\"item-warehouse\")}:</label>{\" \"}\n          <label className={styles.value}>\n            {pageState.searchWarehouseName}\n          </label>\n        </>\n      )}\n\n      {pageState.searchInWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchInWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-out-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-out-warehouse\")}</label>\n        )}\n    </div>\n  );\n}\n\nexport default MedicinesSearchString;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect, useHistory, useLocation } from \"react-router\";\nimport ReactLoading from \"react-loading\";\n\n// components\nimport Header from \"../../components/header/header.component\";\nimport ItemCard from \"../../components/item-card/item-card.component\";\nimport SearchContainer from \"../../components/search-container/search-container.component\";\nimport SearchInput from \"../../components/search-input/search-input.component\";\nimport ItemRow from \"../../components/item-row/item-row.component\";\nimport MedicinesTableHeader from \"../../components/medicines-table-header/medicines-table-header.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Button from \"../../components/button/button.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\nimport MedicinesSearchString from \"../../components/medicines-search-string/medicines-search-string.component\";\n\n// react-icons\nimport { FaSearch, FaListUl } from \"react-icons/fa\";\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore, AiFillStar } from \"react-icons/ai\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { selectFavoritesItems } from \"../../redux/favorites/favoritesSlice.js\";\nimport {\n  getMedicines,\n  selectMedicines,\n  cancelOperation,\n  setSearchName,\n  setSearchCompanyName,\n  setSearchWarehouseName,\n  setSearchInWarehouse,\n  setSearchOutWarehouse,\n  setCity,\n  setDisplayType,\n  resetMedicinesArray,\n  resetMedicinesPageState,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport searchContainerStyles from \"../../components/search-container/search-container.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\nimport { VscClearAll } from \"react-icons/vsc\";\n\nlet timer = null;\n\nfunction MedicinesPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  // selectors\n  const { token, user } = useSelector(selectUserData);\n  const { medicines, count, status, pageState } = useSelector(selectMedicines);\n  const favoritesItems = useSelector(selectFavoritesItems);\n\n  // own state\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  // handle search\n  const handleSearch = () => {\n    if (user.type === UserTypeConstants.PHARMACY) {\n      dispatch(setCity(user.city));\n    } else {\n      dispatch(setCity(\"\"));\n    }\n\n    dispatch(getMedicines({ token }));\n  };\n\n  const handleMoreResult = () => {\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetMedicinesArray());\n    handleSearch();\n  };\n\n  const keyUpHandler = () => {\n    cancelOperation();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      dispatch(resetMedicinesArray());\n\n      handleSearch();\n    }, 200);\n  };\n\n  useEffect(() => {\n    if (medicines.length === 0) {\n      handleSearch();\n    }\n\n    onSelectedChange();\n\n    window.scrollTo(0, 0);\n  }, []);\n\n  return user ? (\n    <div className={generalStyles.container}>\n      <Header>\n        <h2>\n          {t(\"nav-medicines\")} <span>{count}</span>\n        </h2>\n\n        <MedicinesSearchString pageState={pageState} user={user} />\n\n        <div style={{ position: \"relative\", height: \"50px\" }}>\n          <SearchContainer searchAction={handleEnterPress}>\n            <SearchInput\n              label=\"user-name\"\n              id=\"search-name\"\n              type=\"text\"\n              value={pageState.searchName}\n              onchange={(e) => {\n                dispatch(setSearchName(e.target.value));\n              }}\n              icon={<FaSearch />}\n              placeholder=\"search-by-name-composition-barcode\"\n              onEnterPress={handleEnterPress}\n              resetField={() => {\n                dispatch(setSearchName(\"\"));\n              }}\n              onkeyup={keyUpHandler}\n            />\n            {/* // {user.type !== UserTypeConstants.GUEST && companyId === null && ( */}\n            {user.type !== UserTypeConstants.GUEST && (\n              <SearchInput\n                label=\"item-company\"\n                id=\"item-company\"\n                type=\"text\"\n                value={pageState.searchCompanyName}\n                onchange={(e) => {\n                  dispatch(setSearchCompanyName(e.target.value));\n                }}\n                icon={<FaSearch />}\n                placeholder=\"search\"\n                onEnterPress={handleEnterPress}\n                resetField={() => {\n                  dispatch(setSearchCompanyName(\"\"));\n                }}\n              />\n            )}\n\n            {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n            {(user.type === UserTypeConstants.ADMIN ||\n              user.type === UserTypeConstants.PHARMACY) && (\n              <SearchInput\n                label=\"item-warehouse\"\n                id=\"item-warehouse\"\n                type=\"text\"\n                value={pageState.searchWarehouseName}\n                onchange={(e) => {\n                  dispatch(setSearchWarehouseName(e.target.value));\n                }}\n                icon={<FaSearch />}\n                placeholder=\"search\"\n                onEnterPress={handleEnterPress}\n                resetField={() => {\n                  dispatch(setSearchWarehouseName(\"\"));\n                }}\n              />\n            )}\n\n            {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n            {user.type !== UserTypeConstants.GUEST && (\n              <div className={searchContainerStyles.checkbox_div}>\n                <input\n                  type=\"checkbox\"\n                  value={pageState.searchInWarehouse}\n                  checked={pageState.searchInWarehouse}\n                  onChange={() => {\n                    dispatch(\n                      setSearchInWarehouse(!pageState.searchInWarehouse)\n                    );\n                    dispatch(setSearchOutWarehouse(false));\n                  }}\n                />\n                {user.type === UserTypeConstants.WAREHOUSE && (\n                  <label>{t(\"warehouse-in-warehouse\")}</label>\n                )}\n                {user.type !== UserTypeConstants.WAREHOUSE && (\n                  <label>{t(\"pharmacy-in-warehouse\")}</label>\n                )}\n              </div>\n            )}\n\n            {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n            {user.type !== UserTypeConstants.GUEST && (\n              <div className={searchContainerStyles.checkbox_div}>\n                <input\n                  type=\"checkbox\"\n                  value={pageState.searchOutWarehouse}\n                  checked={pageState.searchOutWarehouse}\n                  onChange={() => {\n                    dispatch(\n                      setSearchOutWarehouse(!pageState.searchOutWarehouse)\n                    );\n                    dispatch(setSearchInWarehouse(false));\n                  }}\n                />\n                {user.type === UserTypeConstants.WAREHOUSE && (\n                  <label>{t(\"warehouse-out-warehouse\")}</label>\n                )}\n                {user.type !== UserTypeConstants.WAREHOUSE && (\n                  <label>{t(\"pharmacy-out-warehouse\")}</label>\n                )}\n              </div>\n            )}\n          </SearchContainer>\n        </div>\n      </Header>\n      <div className={generalStyles.actions}>\n        <Icon\n          withBackground={true}\n          icon={() => <RiRefreshLine />}\n          foreColor={Colors.SECONDARY_COLOR}\n          tooltip={t(\"refresh-tooltip\")}\n          onclick={handleEnterPress}\n        />\n        {(pageState.searchName.length > 0 ||\n          pageState.searchCompanyName.length > 0 ||\n          pageState.searchWarehouseName.length > 0 ||\n          pageState.searchInWarehouse ||\n          pageState.searchOutWarehouse) && (\n          <Icon\n            withBackground={true}\n            selected={false}\n            foreColor={Colors.SECONDARY_COLOR}\n            tooltip={t(\"clear-filter-tooltip\")}\n            onclick={() => {\n              dispatch(resetMedicinesPageState());\n              handleEnterPress();\n              setShowFavorites(false);\n            }}\n            icon={() => <VscClearAll />}\n          />\n        )}\n\n        <div className={generalStyles.relative}>\n          <Icon\n            withBackground={true}\n            icon={() => <AiFillStar />}\n            foreColor={\n              showFavorites ? Colors.SUCCEEDED_COLOR : Colors.SECONDARY_COLOR\n            }\n            tooltip={t(\"show-favorite-tooltip\")}\n            onclick={() => setShowFavorites(!showFavorites)}\n          />\n\n          {showFavorites && (\n            <div\n              className={[\n                generalStyles.favorites_content,\n                generalStyles.favorites_content_wider,\n                generalStyles.bg_white,\n              ].join(\" \")}\n            >\n              {showFavorites &&\n                favoritesItems.map((item) => (\n                  <ItemRow\n                    key={item._id}\n                    item={item}\n                    isFavorite={true}\n                    isSmallFavorite={true}\n                  />\n                ))}\n            </div>\n          )}\n        </div>\n\n        <Icon\n          withBackground={true}\n          icon={() => <AiFillAppstore />}\n          foreColor={\n            pageState.displayType === \"card\"\n              ? Colors.SUCCEEDED_COLOR\n              : Colors.SECONDARY_COLOR\n          }\n          tooltip={t(\"show-item-as-card-tooltip\")}\n          onclick={() => dispatch(setDisplayType(\"card\"))}\n        />\n\n        <Icon\n          withBackground={true}\n          icon={() => <FaListUl />}\n          foreColor={\n            pageState.displayType === \"list\"\n              ? Colors.SUCCEEDED_COLOR\n              : Colors.SECONDARY_COLOR\n          }\n          tooltip={t(\"show-item-as-row-tooltip\")}\n          onclick={() => dispatch(setDisplayType(\"list\"))}\n        />\n      </div>\n\n      {count > 0 && pageState.displayType === \"list\" && (\n        <MedicinesTableHeader user={user} />\n      )}\n\n      {pageState.displayType === \"list\" &&\n        medicines.map((medicine) => (\n          <ItemRow key={medicine._id} item={medicine} />\n        ))}\n\n      {pageState.displayType === \"card\" && (\n        <div\n          className={[\n            generalStyles.flex_container,\n            generalStyles.margin_top_10,\n          ].join(\" \")}\n        >\n          {medicines.map((medicine) => (\n            <ItemCard key={medicine._id} companyItem={medicine} />\n          ))}\n        </div>\n      )}\n\n      {count === 0 && status !== \"loading\" && (\n        <NoContent msg={t(\"no-medicines\")} />\n      )}\n\n      {status === \"loading\" && (\n        <div className={generalStyles.flex_container}>\n          <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n        </div>\n      )}\n\n      {medicines.length < count && status !== \"loading\" && (\n        <Button\n          text={t(\"more\")}\n          action={handleMoreResult}\n          bgColor={Colors.SECONDARY_COLOR}\n        />\n      )}\n\n      {medicines.length === count && status !== \"loading\" && count !== 0 && (\n        <p\n          className={[generalStyles.center, generalStyles.fc_secondary].join(\n            \" \"\n          )}\n        >\n          {t(\"no-more\")}\n        </p>\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default MedicinesPage;\n"],"names":["checkOfferQty","selectedWarehouse","qty","offer","offers","length","i","mode","OfferTypes","bonus","item","close","setAddItemToCartMsg","t","useTranslation","dispatch","useDispatch","useSelector","selectUserData","token","user","isOnline","selectOnlineStatus","itemWarehousesOption","warehouses","filter","w","warehouse","city","map","asterisk","label","name","value","_id","useState","setSelectedWarehouse","setOffer","setQty","qtyError","setQtyError","header","cancelLabel","okLabel","closeModal","okModal","maxQty","bonusQty","addItemToCart","bonusType","statisticsItemAddedToCart","obj","itemId","small","className","styles","bgColor","Colors","foreColor","options","onchange","val","find","defaultOption","onKeyPress","onKeyPressForNumberInput","onChange","e","Number","parseInt","toEnglishNumber","target","isNaN","o","index","style","padding","paddingLeft","checkOffer","type","UserTypeConstants","result","forEach","isSearch","isFavorite","isSmallFavorite","history","useHistory","favoritesItems","selectFavoritesItems","showModal","setShowModal","changeFavoriteLoading","setChangeFavoriteLoading","changeAddToWarehouseLoading","setChangeAddToWarehouseLoading","setAddItemToCart","backgroundColor","cursor","rowStyles","join","onClick","statisticsItemSelected","push","from","allowAction","companyId","company","warehouseId","caliber","packing","formula","price","customer_price","barcode","icon","generalStyles","onclick","includes","removeItemFromWarehouse","then","unwrapResult","catch","changeOnlineMsg","tooltip","addItemToWarehouse","existing_place","stopPropagation","width","favorite","removeFavoriteItem","favoriteItemId","addFavoriteItem","statisticsItemFavorites","toastText","actionAfterTimeout","companyItem","selectUser","favorites","selectToken","size","logo_url","src","SERVER_URL","alt","flex","pageState","searchName","searchCompanyName","searchWarehouseName","searchInWarehouse","searchOutWarehouse","timer","onSelectedChange","selectMedicines","medicines","count","status","showFavorites","setShowFavorites","handleSearch","setCity","getMedicines","handleEnterPress","resetMedicinesArray","useEffect","window","scrollTo","position","height","searchAction","id","setSearchName","placeholder","onEnterPress","resetField","onkeyup","cancelOperation","clearTimeout","setTimeout","setSearchCompanyName","setSearchWarehouseName","searchContainerStyles","checked","setSearchInWarehouse","setSearchOutWarehouse","withBackground","selected","resetMedicinesPageState","displayType","setDisplayType","medicine","msg","color","text","action","to"],"sourceRoot":""}