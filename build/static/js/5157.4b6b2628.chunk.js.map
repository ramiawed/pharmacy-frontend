{"version":3,"file":"static/js/5157.4b6b2628.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","components/no-content/no-content.component.jsx","components/baskets-page-header/baskets-page-header.component.jsx","pages/baskets-page/baskets-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\",\"back\":\"header_back__wgjRV\"};","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../action-icon/action-icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ children }) {\n  const history = useHistory();\n\n  return (\n    <div className={styles.header}>\n      {children}\n      <div className={styles.back}>\n        <Icon\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.WHITE_COLOR}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport generalStyles from \"../../style.module.scss\";\nimport NoContentImage from \"../../no-content.jpeg\";\nimport { Colors } from \"../../utils/constants\";\n\nfunction NoContent({ msg }) {\n  return (\n    <div className={[generalStyles.no_content_div].join(\" \")}>\n      <img\n        src={NoContentImage}\n        alt=\"thumb\"\n        style={{\n          width: \"150px\",\n          height: \"150px\",\n        }}\n      />\n\n      <p\n        style={{\n          color: Colors.MAIN_COLOR,\n        }}\n      >\n        {msg}\n      </p>\n    </div>\n  );\n}\n\nexport default NoContent;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getBaskets,\n  resetBasketsArray,\n} from \"../../redux/baskets/basketsSlice\";\n\n// icons\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// components\nimport Header from \"../header/header.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\nfunction BasketPageHeader({ isNew, setIsNew }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { user, token } = useSelector(selectUserData);\n\n  const refreshHandler = () => {\n    dispatch(resetBasketsArray());\n    dispatch(getBaskets({ token }));\n  };\n\n  return (\n    <>\n      <Header>\n        <h2>{t(\"nav-baskets\")}</h2>\n      </Header>\n      <div\n        className={[generalStyles.actions, generalStyles.margin_v_4].join(\" \")}\n      >\n        {!isNew && (\n          <>\n            {user.type !== UserTypeConstants.PHARMACY && (\n              <Icon\n                selected={false}\n                foreColor={Colors.MAIN_COLOR}\n                tooltip={t(\"new-basket\")}\n                onclick={() => {\n                  setIsNew(true);\n                }}\n                icon={() => <MdAddCircle size={24} />}\n                withBackground={true}\n              />\n            )}\n\n            <Icon\n              selected={false}\n              foreColor={Colors.MAIN_COLOR}\n              tooltip={t(\"refresh-tooltip\")}\n              onclick={() => {\n                refreshHandler();\n              }}\n              icon={() => <RiRefreshLine />}\n              withBackground={true}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default BasketPageHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router-dom\";\n\n// icons\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  cancelOperation,\n  getBaskets,\n  resetBaskets,\n  resetBasketsArray,\n  selectBaskets,\n} from \"../../redux/baskets/basketsSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport BasketPageHeader from \"../../components/baskets-page-header/baskets-page-header.component\";\nimport Basket from \"../../components/basket/basket.component\";\n\n// constants\nimport { UserTypeConstants } from \"../../utils/constants\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport NoContent from \"../../components/no-content/no-content.component\";\n\nconst BasketsPage = ({ onSelectedChange }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const { status, baskets, count, error } = useSelector(selectBaskets);\n\n  const [isNew, setIsNew] = useState(false);\n\n  const handleSearch = () => {\n    dispatch(getBaskets({ token }));\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetBasketsArray());\n    handleSearch();\n  };\n\n  const refreshHandler = () => {\n    dispatch(resetBaskets());\n    handleSearch();\n  };\n\n  useEffect(() => {\n    if (baskets.length === 0) handleSearch(1);\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user.type === UserTypeConstants.ADMIN ||\n    user.type === UserTypeConstants.PHARMACY ||\n    user.type === UserTypeConstants.WAREHOUSE ? (\n    <>\n      <BasketPageHeader isNew={isNew} setIsNew={setIsNew} />\n      {count > 0 && !isNew && (\n        <div className={generalStyles.count}>\n          <span className={generalStyles.label}>{t(\"baskets-count\")}</span>\n          <span className={generalStyles.count}>{count}</span>\n        </div>\n      )}\n\n      {count === 0 && status !== \"loading\" && !isNew && (\n        <>\n          <NoContent msg={t(\"no-basket-to-order\")} />\n        </>\n      )}\n\n      <div className={generalStyles.container_with_header}>\n        <div\n          style={{\n            paddingInline: \"10px\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\",\n          }}\n        >\n          {isNew ? (\n            <Basket setIsNew={setIsNew} editable={true} />\n          ) : (\n            baskets.map((basket) => (\n              <Basket\n                basket={basket}\n                key={basket._id}\n                editable={user.type !== UserTypeConstants.PHARMACY}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default BasketsPage;\n"],"names":["children","history","useHistory","className","styles","onclick","goBack","icon","foreColor","Colors","msg","generalStyles","join","src","NoContentImage","alt","style","width","height","color","isNew","setIsNew","t","useTranslation","dispatch","useDispatch","useSelector","selectUserData","user","token","type","UserTypeConstants","selected","tooltip","size","withBackground","resetBasketsArray","getBaskets","onSelectedChange","selectOnlineStatus","selectBaskets","status","baskets","count","error","useState","handleSearch","useEffect","length","window","scrollTo","cancelOperation","paddingInline","paddingLeft","paddingRight","editable","map","basket","_id","to"],"sourceRoot":""}