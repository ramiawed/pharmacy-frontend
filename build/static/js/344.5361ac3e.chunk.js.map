{"version":3,"file":"static/js/344.5361ac3e.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/card-info/card-info.module.scss?a8ee","components/card-info/card-info.component.jsx","webpack://pharmacy-frontend/./src/pages/basket-order-details-page/basket-order-details-page.module.scss?0d15","pages/basket-order-details-page/basket-order-details-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"card-info_small_font__AusTH\",\"card\":\"card-info_card__VcLb9\",\"header\":\"card-info_header__uTcny\",\"expanded\":\"card-info_expanded__IDH-A\",\"warning\":\"card-info_warning__bmiK1\"};","// card component that can collapsed or expanded by pressing on the header\n\n// props\n// headerTitle: text to show in the header section\n// children: array of component to show in the body of the card\n// type: warning or normal to change to background color of the card\n\nimport React, { useState } from \"react\";\n\n// react icon\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\n\n// styles\nimport styles from \"./card-info.module.scss\";\n\nfunction CardInfo({ headerTitle, children, type }) {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <div\n      className={[styles.card, type === \"warning\" ? styles.warning : null].join(\n        \" \"\n      )}\n    >\n      <div\n        onClick={() => setExpanded(!expanded)}\n        className={[\n          styles.header,\n          type === \"warning\" ? styles.warning : null,\n          expanded ? styles.expanded : null,\n        ].join(\" \")}\n      >\n        <p>{headerTitle}</p>\n        <label\n          className={styles.header_label}\n          onClick={() => setExpanded(!expanded)}\n        >\n          {expanded ? <BsFillCaretUpFill /> : <BsFillCaretDownFill />}\n        </label>\n      </div>\n      {expanded && <div>{children}</div>}\n    </div>\n  );\n}\n\nexport default CardInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"basket-order-details-page_small_font__3yC2P\",\"container\":\"basket-order-details-page_container__ZmVnq\",\"basic_details_container\":\"basket-order-details-page_basic_details_container__jpsU0\",\"row\":\"basket-order-details-page_row__vWrH7\",\"label\":\"basket-order-details-page_label__q6hz6\",\"name\":\"basket-order-details-page_name__aefnm\",\"actions_div\":\"basket-order-details-page_actions_div__AJl4L\"};","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport Header from \"../../components/header/header.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport CardInfo from \"../../components/card-info/card-info.component\";\nimport Basket from \"../../components/basket/basket.component\";\n\n// icons\nimport { RiRefreshLine, RiSendPlaneFill } from \"react-icons/ri\";\nimport { BsCheckAll } from \"react-icons/bs\";\nimport { MdOutlineLocalShipping, MdRemoveDone } from \"react-icons/md\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  selectBasketOrders,\n  updateOrders,\n} from \"../../redux/basketOrdersSlice/basketOrdersSlice\";\n\n// constants and utils\nimport { BASEURL, Colors, UserTypeConstants } from \"../../utils/constants\";\n\n//styles\nimport styles from \"./basket-order-details-page.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\nimport { useLocation } from \"react-router-dom\";\n\nconst BasketOrderDetailsPage = ({ onSelectedChange }) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const orderId = location?.search.slice(1);\n\n  const dispatch = useDispatch();\n\n  // selectors\n  const { token, user } = useSelector(selectUserData);\n  const { status } = useSelector(selectBasketOrders);\n\n  // own states\n  const [orderDetails, setOrderDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emptyMsg, setEmptyMsg] = useState(\"\");\n\n  const markOrdersAs = (verb) => {\n    const ids = [orderId];\n\n    if (ids.length > 0) {\n      let body = {};\n      if (user.type === UserTypeConstants.PHARMACY) {\n        body = {\n          pharmacyStatus: verb,\n        };\n      }\n      if (user.type === UserTypeConstants.WAREHOUSE) {\n        body = {\n          warehouseStatus: verb,\n        };\n      }\n      dispatch(\n        updateOrders({\n          obj: {\n            ids,\n            body,\n          },\n          token,\n        })\n      );\n    }\n  };\n\n  const getOrderDetails = async () => {\n    setEmptyMsg(\"\");\n    setLoading(true);\n    axios\n      .get(`${BASEURL}/ordered-baskets/details?id=${orderId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        if (response.data.data.order === null) {\n          setEmptyMsg(\"order-deleted\");\n        } else {\n          setOrderDetails(response.data.data.basketOrder);\n        }\n      })\n      .catch((err) => {\n        setEmptyMsg(\"order-details-error\");\n      });\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getOrderDetails();\n\n    onSelectedChange();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loader allowCancel={false} />\n      ) : (\n        <>\n          <Header>\n            <h2>{t(\"order-details\")}</h2>\n            <div className={generalStyles.refresh_icon}>\n              <Icon\n                icon={() => <RiRefreshLine color={Colors.WHITE_COLOR} />}\n                foreColor={Colors.SECONDARY_COLOR}\n                tooltip={t(\"refresh-tooltip\")}\n                onclick={getOrderDetails}\n              />\n            </div>\n          </Header>\n          <div className={generalStyles.container_with_header}>\n            {orderDetails ? (\n              <>\n                <div className={styles.container}>\n                  <CardInfo headerTitle={t(\"order-details\")}>\n                    <div className={styles.basic_details_container}>\n                      <div className={styles.row}>\n                        <label className={styles.label}>\n                          {t(\"pharmacy-name\")}:\n                        </label>\n                        <label className={styles.name}>\n                          {orderDetails.pharmacy.name}\n                        </label>\n                      </div>\n\n                      <div className={styles.row}>\n                        <label className={styles.label}>\n                          {t(\"user-certificate-name\")}:\n                        </label>\n                        <label className={styles.name}>\n                          {orderDetails.pharmacy.certificateName}\n                        </label>\n                      </div>\n\n                      <div className={styles.row}>\n                        <label className={styles.label}>\n                          {t(\"user-address-details\")}:\n                        </label>\n                        <label className={styles.name}>\n                          {orderDetails.pharmacy.addressDetails}\n                        </label>\n                      </div>\n\n                      <div className={styles.row}>\n                        <label className={styles.label}>\n                          {t(\"user-mobile\")}:\n                        </label>\n                        <label className={styles.name}>\n                          {orderDetails.pharmacy.mobile}\n                        </label>\n                      </div>\n\n                      <div className={styles.row}>\n                        <label className={styles.label}>\n                          {t(\"warehouse-name\")}:\n                        </label>\n                        <label className={styles.name}>\n                          {orderDetails.warehouse.name}\n                        </label>\n                      </div>\n\n                      <div className={styles.row}>\n                        <label className={styles.label}>\n                          {t(\"date-label\")}:\n                        </label>\n                        <label className={styles.name}>\n                          {new Date(\n                            orderDetails.createdAt\n                          ).toLocaleDateString()}\n                        </label>\n                      </div>\n                    </div>\n\n                    <div className={styles.actions_div}>\n                      {user.type === UserTypeConstants.PHARMACY && (\n                        <Icon\n                          selected={false}\n                          foreColor={Colors.SUCCEEDED_COLOR}\n                          tooltip={t(\"mark-as-received\")}\n                          icon={() => <BsCheckAll />}\n                          onclick={() => markOrdersAs(\"received\")}\n                          withBackground={true}\n                        />\n                      )}\n\n                      {user.type === UserTypeConstants.PHARMACY && (\n                        <Icon\n                          selected={false}\n                          foreColor={Colors.SUCCEEDED_COLOR}\n                          tooltip={t(\"mark-as-sent\")}\n                          icon={() => <RiSendPlaneFill />}\n                          onclick={() => markOrdersAs(\"sent\")}\n                          withBackground={true}\n                        />\n                      )}\n\n                      {user.type === UserTypeConstants.WAREHOUSE && (\n                        <>\n                          <Icon\n                            selected={false}\n                            foreColor={Colors.SUCCEEDED_COLOR}\n                            tooltip={t(\"mark-as-shipped\")}\n                            icon={() => <MdOutlineLocalShipping />}\n                            onclick={() => markOrdersAs(\"sent\")}\n                            withBackground={true}\n                          />\n\n                          <Icon\n                            selected={false}\n                            foreColor={Colors.SUCCEEDED_COLOR}\n                            tooltip={t(\"mark-as-received\")}\n                            icon={() => <BsCheckAll />}\n                            onclick={() => markOrdersAs(\"received\")}\n                            withBackground={true}\n                          />\n\n                          <Icon\n                            selected={false}\n                            foreColor={Colors.FAILED_COLOR}\n                            tooltip={t(\"mark-as-will-dont-server\")}\n                            icon={() => <MdRemoveDone />}\n                            onclick={() => markOrdersAs(\"dontServe\")}\n                            withBackground={true}\n                          />\n                        </>\n                      )}\n                    </div>\n                  </CardInfo>\n                </div>\n\n                <Basket\n                  basket={orderDetails.basket}\n                  editable={false}\n                  forRead={true}\n                />\n              </>\n            ) : (\n              <NoContent msg={t(emptyMsg)} />\n            )}\n          </div>\n        </>\n      )}\n      {status === \"loading\" && <Loader allowCancel={false} />}\n    </>\n  );\n};\n\nexport default BasketOrderDetailsPage;\n"],"names":["headerTitle","children","type","useState","expanded","setExpanded","className","styles","join","onClick","onSelectedChange","t","useTranslation","location","useLocation","orderId","search","slice","dispatch","useDispatch","useSelector","selectUserData","token","user","status","selectBasketOrders","orderDetails","setOrderDetails","loading","setLoading","emptyMsg","setEmptyMsg","markOrdersAs","verb","ids","length","body","UserTypeConstants","pharmacyStatus","warehouseStatus","updateOrders","obj","getOrderDetails","axios","BASEURL","headers","Authorization","then","response","data","order","basketOrder","catch","err","useEffect","allowCancel","generalStyles","icon","color","Colors","foreColor","tooltip","onclick","pharmacy","name","certificateName","addressDetails","mobile","warehouse","Date","createdAt","toLocaleDateString","selected","withBackground","basket","editable","forRead","msg"],"sourceRoot":""}