{"version":3,"file":"static/js/483.8dd943aa.chunk.js","mappings":"wOACA,EAAiE,uB,UC8CjE,MA9BA,YAAmD,IAAjCA,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACjCC,GAAUC,EAAAA,EAAAA,MACRC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACE,iBAAKE,UAAWC,EAAhB,WACE,yBACGH,EAAEJ,GACFC,GAAQ,0BAAOA,IAAgB,MAEjCF,IACC,SAAC,IAAD,CACES,UAAU,EACVC,UAAWC,EAAAA,GAAAA,YACXC,QAASP,EAAE,WACXQ,QAASb,EACTc,KAAM,kBAAM,SAAC,MAAD,QAGhB,SAAC,IAAD,CACED,QAAS,WACPV,EAAQY,UAEVD,KAAM,kBAAM,SAAC,KAAD,KACZJ,UAAWC,EAAAA,GAAAA,mB,iECxCnB,EAAyC,uD,UCOzC,EAJ6B,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SAC9B,OAAO,gBAAKT,UAAWC,EAAhB,SAAgDQ,M,oMCJzD,EAAiF,uCAAjF,EAA8H,+BAA9H,EAAqK,iCAArK,EAA+M,kCAA/M,EAAwP,gCAAxP,EAA+R,gC,oBCgF/R,MA9DA,YAAiD,IAArBC,EAAoB,EAApBA,iBAClBC,GAAmBC,EAAAA,EAAAA,MAAnBD,eAGFE,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAe,mCAAG,2FACtBD,EAAgB,MADM,SAECE,IAAAA,IAAA,UAClBC,EAAAA,GADkB,0BACOV,GAC5B,CACEW,QAAS,CACPC,cAAc,UAAD,OAAYV,MANT,OAEhBW,EAFgB,OAWtBN,EAAgBM,EAASC,KAAKA,KAAKR,cAXb,2CAAH,qDAmBrB,OALAS,EAAAA,EAAAA,YAAU,WACRP,IACAT,MACC,CAACC,KAGF,8BACGM,GACC,iCACE,SAAC,IAAD,CAAQvB,MAAM,qBAAqBD,eAAgB0B,KAEnD,SAAC,IAAD,WACE,iBAAKnB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAe0B,MAAO,CAAEC,KAAM,GAA5C,SACGX,EAAaY,UAEhB,cAAG7B,UAAWC,EAAd,SAA4BgB,EAAaa,KAAKC,MAAM,KAAK,SAG3D,2BAC6B,KAA1Bd,EAAae,WACZ,gBACEhC,UAAWC,EACXgC,IAAG,UAAKC,EAAAA,GAAL,0BAAiCjB,EAAae,UACjDG,IAAI,WAGR,cAAGnC,UAAWC,EAAd,SAA4BgB,EAAamB,mBAMjD,SAAC,IAAD","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","webpack://pharmacy-frontend/./src/components/main-content-container/main-content-container.module.scss?3a38","components/main-content-container/main-content-container.component.jsx","webpack://pharmacy-frontend/./src/pages/notification-page/notification-page.module.scss?48c8","pages/notification-page/notification-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../icon/icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ refreshHandler, title, count }) {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <div className={styles.header}>\n      <p>\n        {t(title)}\n        {count ? <span>{count}</span> : \"\"}\n      </p>\n      {refreshHandler && (\n        <Icon\n          selected={false}\n          foreColor={Colors.WHITE_COLOR}\n          tooltip={t(\"refresh\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n        />\n      )}\n      <Icon\n        onclick={() => {\n          history.goBack();\n        }}\n        icon={() => <IoMdArrowRoundBack />}\n        foreColor={Colors.WHITE_COLOR}\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"main_content_container\":\"main-content-container_main_content_container__Aihvg\"};","import React from \"react\";\n\nimport styles from \"./main-content-container.module.scss\";\n\nconst MainContentContainer = ({ children }) => {\n  return <div className={styles.main_content_container}>{children}</div>;\n};\n\nexport default MainContentContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"notification-page_small_font__k81M-\",\"content_div\":\"notification-page_content_div__40vu0\",\"row\":\"notification-page_row__vcuc7\",\"image\":\"notification-page_image__Pdafe\",\"header\":\"notification-page_header__Khr58\",\"date\":\"notification-page_date__tG690\",\"body\":\"notification-page_body__wxCO-\"};","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\n\n// redux stuff\nimport { useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\n// components\nimport MainContentContainer from \"../../components/main-content-container/main-content-container.component\";\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport Header from \"../../components/header/header.component\";\n\n// styles\nimport styles from \"./notification-page.module.scss\";\n\n// constants\nimport { BASEURL, SERVER_URL } from \"../../utils/constants\";\n\nfunction NotificationPage({ onSelectedChange }) {\n  const { notificationId } = useParams();\n\n  // selectors\n  const token = useSelector(selectToken);\n\n  const [notification, setNotification] = useState(null);\n\n  const getNotification = async () => {\n    setNotification(null);\n    const response = await axios.get(\n      `${BASEURL}/notifications/${notificationId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n\n    setNotification(response.data.data.notification);\n  };\n\n  useEffect(() => {\n    getNotification();\n    onSelectedChange();\n  }, [notificationId]);\n\n  return (\n    <>\n      {notification ? (\n        <>\n          <Header title=\"notification label\" refreshHandler={getNotification} />\n\n          <MainContentContainer>\n            <div className={styles.content_div}>\n              <div className={styles.row}>\n                <p className={styles.header} style={{ flex: 1 }}>\n                  {notification.header}\n                </p>\n                <p className={styles.date}>{notification.date.split(\"T\")[0]}</p>\n              </div>\n\n              <div>\n                {notification.logo_url !== \"\" && (\n                  <img\n                    className={styles.image}\n                    src={`${SERVER_URL}/notifications/${notification.logo_url}`}\n                    alt=\"thumb\"\n                  />\n                )}\n                <p className={styles.body}>{notification.body}</p>\n              </div>\n            </div>\n          </MainContentContainer>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n\nexport default NotificationPage;\n"],"names":["refreshHandler","title","count","history","useHistory","t","useTranslation","className","styles","selected","foreColor","Colors","tooltip","onclick","icon","goBack","children","onSelectedChange","notificationId","useParams","token","useSelector","selectToken","useState","notification","setNotification","getNotification","axios","BASEURL","headers","Authorization","response","data","useEffect","style","flex","header","date","split","logo_url","src","SERVER_URL","alt","body"],"sourceRoot":""}