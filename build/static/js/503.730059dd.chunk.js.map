{"version":3,"file":"static/js/503.730059dd.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/item-card/item-card.module.scss?2503","components/item-card/item-card.component.jsx","webpack://pharmacy-frontend/./src/components/medicines-search-string/medicines-search-string.module.scss?3bd3","components/medicines-search-string/medicines-search-string.component.jsx","webpack://pharmacy-frontend/./src/components/item-row-new/item-row-new.module.scss?d05c","components/item-row-new/item-row-new.component.jsx","pages/medicines-page/medicines-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"partner_container\":\"item-card_partner_container__S-nN0\",\"icons_div\":\"item-card_icons_div__86zY2\",\"offer_icon\":\"item-card_offer_icon__+2Nvl\",\"logo_div\":\"item-card_logo_div__JPceh\",\"logo\":\"item-card_logo__cJH9F\",\"company_name\":\"item-card_company_name__KJsSX\",\"content\":\"item-card_content__c02UJ\",\"showed_content\":\"item-card_showed_content__QeM6e\",\"main_details\":\"item-card_main_details__OZepj\",\"name_details\":\"item-card_name_details__M3BOT\",\"name\":\"item-card_name__N+CBQ\",\"composition\":\"item-card_composition__CCz0a\",\"price\":\"item-card_price__LYumk\",\"customer_price\":\"item-card_customer_price__ewJ7l\",\"info\":\"item-card_info__ZqYpE\",\"label\":\"item-card_label__MlSEw\",\"value\":\"item-card_value__kZusY\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Logo from \"../../logo01.png\";\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// redux-stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { statisticsItemFavorites } from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport { selectToken, selectUser } from \"../../redux/auth/authSlice\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./item-card.module.scss\";\n\n// constants and utils\nimport {\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\nimport { GoBookmark } from \"react-icons/go\";\n\n// if logged user is\n// 1- ADMIN: highlight the row by green color if the medicine has an offer.\n// 2- COMPANY: don't highlight the row never.\n// 3- GUEST: don't highlight the row never.\n// 4- WAREHOUSE: highlight the row by green if the medicine has an offer by logging warehouse.\n// 5- PHARMACY: highlight the row by green if the medicine has an offer by any warehouse\n// in the same city with the logging user\nconst checkOffer = (item, user) => {\n  if (\n    user.type === UserTypeConstants.GUEST ||\n    user.type === UserTypeConstants.COMPANY\n  ) {\n    return false;\n  }\n\n  let result = false;\n\n  if (user.type === UserTypeConstants.ADMIN) {\n    item.warehouses.forEach((w) => {\n      if (w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  if (user.type === UserTypeConstants.WAREHOUSE) {\n    item.warehouses\n      .filter((w) => w.warehouse._id === user._id)\n      .forEach((w) => {\n        if (w.offer.offers.length > 0) {\n          result = true;\n        }\n      });\n  }\n\n  if (user.type === UserTypeConstants.PHARMACY) {\n    item.warehouses.forEach((w) => {\n      if (w.warehouse.city === user.city && w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nfunction ItemCard({ companyItem }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isOnline = useSelector(selectOnlineStatus);\n  const user = useSelector(selectUser);\n  const favorites = useSelector(selectFavoritesItems);\n  const token = useSelector(selectToken);\n  const [showModal, setShowModal] = useState(false);\n\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      addFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then((result) => {\n        dispatch(\n          statisticsItemFavorites({ obj: { itemId: companyItem._id }, token })\n        );\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      removeFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    // e.stopPropagation();\n  };\n\n  const dispatchStatisticsHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        statisticsItemFavorites({\n          obj: { itemId: companyItem._id },\n          token,\n        })\n      );\n    }\n  };\n  return (\n    <div\n      className={[styles.partner_container].join(\" \")}\n      onClick={() => {\n        dispatchStatisticsHandler();\n\n        history.push(\"item\", {\n          from: user.type,\n          type: \"info\",\n          allowAction: false,\n          itemId: companyItem._id,\n          companyId: companyItem.company._id,\n          warehouseId:\n            user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n        });\n      }}\n    >\n      {checkOffer(companyItem, user) && (\n        <div className={styles.offer_icon}>\n          <GoBookmark size={24} />\n        </div>\n      )}\n      <div className={styles.company_name}>{companyItem.company.name}</div>\n      <div\n        style={{\n          flex: 1,\n        }}\n      >\n        <div className={styles.icons_div}>\n          {changeAddToWarehouseLoading ? (\n            <Icon\n              icon={() => (\n                <VscLoading className={generalStyles.loading} size={20} />\n              )}\n              onclick={() => {}}\n              foreColor={Colors.SECONDARY_COLOR}\n            />\n          ) : (\n            user.type === UserTypeConstants.WAREHOUSE &&\n            (companyItem.warehouses\n              .map((w) => w.warehouse._id)\n              .includes(user._id) ? (\n              <Icon\n                icon={() => <RiDeleteBin5Fill size={24} />}\n                onclick={removeItemFromWarehouseHandler}\n                tooltip={t(\"remove-from-warehouse-tooltip\")}\n                foreColor={Colors.FAILED_COLOR}\n              />\n            ) : (\n              <Icon\n                icon={() => <MdAddCircle size={24} />}\n                onclick={addItemToWarehouseHandler}\n                tooltip={t(\"add-to-warehouse-tooltip\")}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            ))\n          )}\n\n          {user.type === UserTypeConstants.PHARMACY &&\n            companyItem.existing_place[user.city] > 0 && (\n              <Icon\n                icon={() => <GiShoppingCart size={24} />}\n                onclick={() => setShowModal(true)}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            )}\n\n          {changeFavoriteLoading ? (\n            <Icon\n              icon={() => (\n                <VscLoading className={generalStyles.loading} size={24} />\n              )}\n              onclick={() => {}}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : favorites\n              .map((favorite) => favorite._id)\n              .includes(companyItem._id) ? (\n            <Icon\n              icon={() => <AiFillStar size={24} />}\n              onclick={removeItemFromFavoritesItems}\n              tooltip={t(\"remove-from-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : (\n            <Icon\n              icon={() => <AiOutlineStar size={24} />}\n              onclick={addItemToFavoriteItems}\n              tooltip={t(\"add-to-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          )}\n        </div>\n\n        <div className={styles.logo_div}>\n          {companyItem.logo_url && companyItem.logo_url !== \"\" ? (\n            <img\n              src={`${SERVER_URL}/items/${companyItem.logo_url}`}\n              className={styles.logo}\n              alt=\"thumb\"\n            />\n          ) : (\n            <img src={Logo} className={styles.logo} alt=\"thumb\" />\n          )}\n        </div>\n\n        <div className={styles.content}>\n          <div className={[styles.showed_content].join(\" \")}>\n            <div className={styles.main_details}>\n              <div className={styles.name_details}>\n                <label className={styles.name}>{companyItem.name}</label>\n                <label className={styles.composition}>\n                  {companyItem.composition}\n                </label>\n              </div>\n\n              {user.type !== UserTypeConstants.GUEST && (\n                <div className={styles.price}>\n                  <label>{companyItem.price}</label>\n                </div>\n              )}\n              <div className={styles.price}>\n                <label className={styles.customer_price}>\n                  {companyItem.customer_price}\n                </label>\n              </div>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-formula\")}:</label>\n              <label className={styles.value}>{companyItem.formula}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-packing\")}:</label>\n              <label className={styles.value}>{companyItem.packing}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-caliber\")}:</label>\n              <label className={styles.value}>{companyItem.caliber}</label>\n            </div>\n          </div>\n\n          <div className={styles.behind_content}></div>\n        </div>\n      </div>\n\n      {showModal && (\n        <AddToCartModal item={companyItem} close={() => setShowModal(false)} />\n      )}\n    </div>\n  );\n}\n\nexport default ItemCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"div_search_str\":\"medicines-search-string_div_search_str__VtrHq\",\"label\":\"medicines-search-string_label__-AfzZ\",\"value\":\"medicines-search-string_value__TyoDg\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nimport styles from \"./medicines-search-string.module.scss\";\n\nfunction MedicinesSearchString({ pageState, user }) {\n  const { t } = useTranslation();\n  return (\n    <div className={styles.div_search_str}>\n      {pageState.searchName && (\n        <>\n          <label className={styles.label}>{t(\"item-name\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchName}</label>\n        </>\n      )}\n\n      {pageState.searchCompanyName && (\n        <>\n          <label className={styles.label}>{t(\"item-company\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchCompanyName}</label>\n        </>\n      )}\n\n      {pageState.searchWarehouseName && (\n        <>\n          <label className={styles.label}>{t(\"item-warehouse\")}:</label>{\" \"}\n          <label className={styles.value}>\n            {pageState.searchWarehouseName}\n          </label>\n        </>\n      )}\n\n      {pageState.searchInWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchInWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-out-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-out-warehouse\")}</label>\n        )}\n    </div>\n  );\n}\n\nexport default MedicinesSearchString;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"item-row-new_container__BmVfP\",\"offer_icon\":\"item-row-new_offer_icon__kZLfS\",\"name\":\"item-row-new_name__AMJBn\",\"details\":\"item-row-new_details__h9Wqb\",\"row\":\"item-row-new_row__QBMCU\",\"label\":\"item-row-new_label__HcIo8\",\"value\":\"item-row-new_value__ALhFG\",\"last_row\":\"item-row-new_last_row__lJ7PG\",\"actions\":\"item-row-new_actions__j3L0M\",\"loading\":\"item-row-new_loading__-UImT\",\"loading-move\":\"item-row-new_loading-move__R--Ia\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// react-redux stuff\nimport {\n  statisticsItemFavorites,\n  statisticsItemSelected,\n} from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport Toast from \"../toast/toast.component\";\n\n// react icons\nimport { GoBookmark } from \"react-icons/go\";\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// styles\nimport styles from \"./item-row-new.module.scss\";\n\n// constants and utils\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\n// if logged user is\n// 1- ADMIN: highlight the row by green color if the medicine has an offer.\n// 2- COMPANY: don't highlight the row never.\n// 3- GUEST: don't highlight the row never.\n// 4- WAREHOUSE: highlight the row by green if the medicine has an offer by logging warehouse.\n// 5- PHARMACY: highlight the row by green if the medicine has an offer by any warehouse\n// in the same city with the logging user\nconst checkOffer = (item, user) => {\n  // don't show the offer if the logged user is GUEST or COMPANY\n  if (\n    user.type === UserTypeConstants.GUEST ||\n    user.type === UserTypeConstants.COMPANY\n  ) {\n    return false;\n  }\n\n  let result = false;\n\n  if (user.type === UserTypeConstants.ADMIN) {\n    item.warehouses.forEach((w) => {\n      if (w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  if (user.type === UserTypeConstants.WAREHOUSE) {\n    item.warehouses\n      .filter((w) => w.warehouse._id === user._id)\n      .forEach((w) => {\n        if (w.offer.offers.length > 0) {\n          result = true;\n        }\n      });\n  }\n\n  if (user.type === UserTypeConstants.PHARMACY) {\n    item.warehouses.forEach((w) => {\n      if (w.warehouse.city === user.city && w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nfunction ItemRowNew({ item }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const favoritesItems = useSelector(selectFavoritesItems);\n\n  // own state\n  const [showModal, setShowModal] = useState(false);\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n  const [addItemToCart, setAddItemToCart] = useState(\"\");\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(addFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(statisticsItemFavorites({ obj: { itemId: item._id }, token }));\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(removeFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  const dispatchStatisticsHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        statisticsItemSelected({\n          obj: { itemId: item._id },\n          token,\n        })\n      );\n    }\n  };\n\n  // render method\n  return (\n    <>\n      <div className={styles.container}>\n        {checkOffer(item, user) && (\n          <div className={styles.offer_icon}>\n            <GoBookmark size={24} />\n          </div>\n        )}\n\n        <div\n          className={styles.name}\n          onClick={() => {\n            dispatchStatisticsHandler();\n\n            history.push(\"/item\", {\n              from: user.type,\n              type: \"info\",\n              allowAction: false,\n              itemId: item._id,\n              companyId: item.company._id,\n              warehouseId:\n                user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n            });\n          }}\n        >\n          {item.name}\n        </div>\n        <div className={styles.details}>\n          <div className={[styles.row].join(\" \")}>\n            <div>\n              <label className={styles.label}>{t(\"item-company\")}:</label>\n              <label className={styles.value}>{item.company.name}</label>\n            </div>\n          </div>\n          <div className={styles.row}>\n            <div>\n              <label className={styles.label}>{t(\"item-formula\")}:</label>\n              <label className={styles.value}>{item.formula}</label>\n            </div>\n            <div>\n              <label className={styles.label}>{t(\"item-caliber\")}:</label>\n              <label className={styles.value}>{item.caliber}</label>\n            </div>\n          </div>\n          <div className={styles.row}>\n            <div>\n              <label className={styles.label}>{t(\"item-packing\")}:</label>\n              <label className={styles.value}>{item.packing}</label>\n            </div>\n          </div>\n          <div className={styles.row}>\n            {user.type !== UserTypeConstants.GUEST && (\n              <div>\n                <label className={styles.label}>{t(\"item-price\")}:</label>\n                <label className={styles.value}>{item.price}</label>\n              </div>\n            )}\n            <div>\n              <label className={styles.label}>\n                {t(\"item-customer-price\")}:\n              </label>\n              <label className={styles.value}>{item.customer_price}</label>\n            </div>\n          </div>\n          <div className={[styles.row, styles.last_row].join(\" \")}>\n            <div>\n              <label className={styles.label}>{t(\"item-composition\")}:</label>\n              <label className={styles.value}>{item.composition}</label>\n            </div>\n          </div>\n        </div>\n        <div className={styles.actions}>\n          {changeAddToWarehouseLoading ? (\n            <Icon\n              icon={() => <VscLoading className={styles.loading} />}\n              onclick={() => {}}\n              foreColor={Colors.SECONDARY_COLOR}\n            />\n          ) : (\n            user.type === UserTypeConstants.WAREHOUSE &&\n            (item.warehouses.map((w) => w.warehouse._id).includes(user._id) ? (\n              <Icon\n                icon={() => <RiDeleteBin5Fill />}\n                onclick={removeItemFromWarehouseHandler}\n                tooltip={t(\"remove-from-warehouse-tooltip\")}\n                foreColor={Colors.FAILED_COLOR}\n              />\n            ) : (\n              <Icon\n                icon={() => <MdAddCircle />}\n                onclick={addItemToWarehouseHandler}\n                tooltip={t(\"add-to-warehouse-tooltip\")}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            ))\n          )}\n\n          {user.type === UserTypeConstants.PHARMACY &&\n          item.existing_place[user.city] > 0 ? (\n            <Icon\n              icon={() => <GiShoppingCart />}\n              onclick={(e) => {\n                setShowModal(true);\n              }}\n              foreColor={Colors.SUCCEEDED_COLOR}\n            />\n          ) : (\n            <div style={{ width: \"24px\" }}></div>\n          )}\n\n          {changeFavoriteLoading ? (\n            <Icon\n              icon={() => <VscLoading className={styles.loading} />}\n              onclick={() => {}}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : favoritesItems\n              .map((favorite) => favorite._id)\n              .includes(item._id) ? (\n            <Icon\n              icon={() => <AiFillStar />}\n              onclick={removeItemFromFavoritesItemsHandler}\n              tooltip={t(\"remove-from-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : (\n            <Icon\n              icon={() => <AiOutlineStar />}\n              onclick={addItemToFavoriteItemsHandler}\n              tooltip={t(\"add-to-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          )}\n        </div>\n      </div>\n\n      {showModal && (\n        <AddToCartModal\n          item={item}\n          close={() => setShowModal(false)}\n          setAddItemToCartMsg={setAddItemToCart}\n        />\n      )}\n\n      {addItemToCart.length > 0 && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addItemToCart)}\n          actionAfterTimeout={() => setAddItemToCart(\"\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default ItemRowNew;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router\";\nimport ReactLoading from \"react-loading\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport ItemCard from \"../../components/item-card/item-card.component\";\nimport SearchContainer from \"../../components/search-container/search-container.component\";\nimport SearchInput from \"../../components/search-input/search-input.component\";\nimport ItemRow from \"../../components/item-row/item-row.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Button from \"../../components/button/button.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\nimport MedicinesSearchString from \"../../components/medicines-search-string/medicines-search-string.component\";\n\n// react-icons\nimport { FaSearch, FaListUl } from \"react-icons/fa\";\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore, AiFillStar } from \"react-icons/ai\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { selectFavoritesItems } from \"../../redux/favorites/favoritesSlice.js\";\nimport {\n  getMedicines,\n  selectMedicines,\n  cancelOperation,\n  setSearchName,\n  setSearchCompanyName,\n  setSearchWarehouseName,\n  setSearchInWarehouse,\n  setSearchOutWarehouse,\n  setCity,\n  setDisplayType,\n  resetMedicinesArray,\n  resetMedicinesPageState,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport searchContainerStyles from \"../../components/search-container/search-container.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\nimport { VscClearAll } from \"react-icons/vsc\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport ItemRowNew from \"../../components/item-row-new/item-row-new.component\";\n\nlet timer = null;\n\nfunction MedicinesPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const { token, user } = useSelector(selectUserData);\n  const { medicines, count, status, pageState } = useSelector(selectMedicines);\n  const favoritesItems = useSelector(selectFavoritesItems);\n\n  // own state\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  // handle search\n  const handleSearch = () => {\n    if (user.type === UserTypeConstants.PHARMACY) {\n      dispatch(setCity(user.city));\n    } else {\n      dispatch(setCity(\"\"));\n    }\n\n    dispatch(getMedicines({ token }));\n  };\n\n  const handleMoreResult = () => {\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetMedicinesArray());\n    handleSearch();\n  };\n\n  const keyUpHandler = () => {\n    cancelOperation();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      dispatch(resetMedicinesArray());\n\n      handleSearch();\n    }, 200);\n  };\n\n  useEffect(() => {\n    if (medicines.length === 0) {\n      handleSearch();\n    }\n\n    onSelectedChange();\n\n    window.scrollTo(0, 0);\n  }, []);\n\n  return user ? (\n    <>\n      <SearchContainer searchAction={handleEnterPress}>\n        <SearchInput\n          label=\"user-name\"\n          id=\"search-name\"\n          type=\"text\"\n          value={pageState.searchName}\n          onchange={(e) => {\n            dispatch(setSearchName(e.target.value));\n          }}\n          icon={<FaSearch />}\n          placeholder=\"search-by-name-composition-barcode\"\n          onEnterPress={handleEnterPress}\n          resetField={() => {\n            dispatch(setSearchName(\"\"));\n          }}\n          onkeyup={keyUpHandler}\n        />\n        {/* // {user.type !== UserTypeConstants.GUEST && companyId === null && ( */}\n        {user.type !== UserTypeConstants.GUEST && (\n          <SearchInput\n            label=\"item-company\"\n            id=\"item-company\"\n            type=\"text\"\n            value={pageState.searchCompanyName}\n            onchange={(e) => {\n              dispatch(setSearchCompanyName(e.target.value));\n            }}\n            icon={<FaSearch />}\n            placeholder=\"search\"\n            onEnterPress={handleEnterPress}\n            resetField={() => {\n              dispatch(setSearchCompanyName(\"\"));\n            }}\n          />\n        )}\n\n        {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n        {(user.type === UserTypeConstants.ADMIN ||\n          user.type === UserTypeConstants.PHARMACY) && (\n          <SearchInput\n            label=\"item-warehouse\"\n            id=\"item-warehouse\"\n            type=\"text\"\n            value={pageState.searchWarehouseName}\n            onchange={(e) => {\n              dispatch(setSearchWarehouseName(e.target.value));\n            }}\n            icon={<FaSearch />}\n            placeholder=\"search\"\n            onEnterPress={handleEnterPress}\n            resetField={() => {\n              dispatch(setSearchWarehouseName(\"\"));\n            }}\n          />\n        )}\n\n        {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n        {user.type !== UserTypeConstants.GUEST && (\n          <div className={searchContainerStyles.checkbox_div}>\n            <input\n              type=\"checkbox\"\n              value={pageState.searchInWarehouse}\n              checked={pageState.searchInWarehouse}\n              onChange={() => {\n                dispatch(setSearchInWarehouse(!pageState.searchInWarehouse));\n                dispatch(setSearchOutWarehouse(false));\n              }}\n            />\n            {user.type === UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"warehouse-in-warehouse\")}</label>\n            )}\n            {user.type !== UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"pharmacy-in-warehouse\")}</label>\n            )}\n          </div>\n        )}\n\n        {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n        {user.type !== UserTypeConstants.GUEST && (\n          <div className={searchContainerStyles.checkbox_div}>\n            <input\n              type=\"checkbox\"\n              value={pageState.searchOutWarehouse}\n              checked={pageState.searchOutWarehouse}\n              onChange={() => {\n                dispatch(setSearchOutWarehouse(!pageState.searchOutWarehouse));\n                dispatch(setSearchInWarehouse(false));\n              }}\n            />\n            {user.type === UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"warehouse-out-warehouse\")}</label>\n            )}\n            {user.type !== UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"pharmacy-out-warehouse\")}</label>\n            )}\n          </div>\n        )}\n      </SearchContainer>\n      <div\n        className={generalStyles.container}\n        style={{\n          marginBlockStart: \"50px\",\n        }}\n      >\n        <MedicinesSearchString pageState={pageState} user={user} />\n\n        <div className={generalStyles.actions}>\n          <Icon\n            withBackground={true}\n            icon={() => <RiRefreshLine />}\n            foreColor={Colors.GREY_COLOR}\n            tooltip={t(\"refresh-tooltip\")}\n            onclick={handleEnterPress}\n          />\n          {(pageState.searchName.length > 0 ||\n            pageState.searchCompanyName.length > 0 ||\n            pageState.searchWarehouseName.length > 0 ||\n            pageState.searchInWarehouse ||\n            pageState.searchOutWarehouse) && (\n            <Icon\n              withBackground={true}\n              selected={false}\n              foreColor={Colors.GREY_COLOR}\n              tooltip={t(\"clear-filter-tooltip\")}\n              onclick={() => {\n                dispatch(resetMedicinesPageState());\n                handleEnterPress();\n                setShowFavorites(false);\n              }}\n              icon={() => <VscClearAll />}\n            />\n          )}\n\n          <div className={generalStyles.relative}>\n            <Icon\n              withBackground={true}\n              icon={() => <AiFillStar />}\n              foreColor={\n                showFavorites ? Colors.SUCCEEDED_COLOR : Colors.GREY_COLOR\n              }\n              tooltip={t(\"show-favorite-tooltip\")}\n              onclick={() => setShowFavorites(!showFavorites)}\n            />\n\n            {showFavorites && (\n              <div\n                className={[\n                  generalStyles.favorites_content,\n                  generalStyles.favorites_content_wider,\n                  generalStyles.bg_white,\n                ].join(\" \")}\n              >\n                {showFavorites &&\n                  favoritesItems.map((item) => (\n                    <ItemRow\n                      key={item._id}\n                      item={item}\n                      isFavorite={true}\n                      isSmallFavorite={true}\n                    />\n                  ))}\n              </div>\n            )}\n          </div>\n\n          <Icon\n            withBackground={true}\n            icon={() => <AiFillAppstore />}\n            foreColor={\n              pageState.displayType === \"card\"\n                ? Colors.SUCCEEDED_COLOR\n                : Colors.GREY_COLOR\n            }\n            tooltip={t(\"show-item-as-card-tooltip\")}\n            onclick={() => dispatch(setDisplayType(\"card\"))}\n          />\n\n          <Icon\n            withBackground={true}\n            icon={() => <FaListUl />}\n            foreColor={\n              pageState.displayType === \"list\"\n                ? Colors.SUCCEEDED_COLOR\n                : Colors.GREY_COLOR\n            }\n            tooltip={t(\"show-item-as-row-tooltip\")}\n            onclick={() => dispatch(setDisplayType(\"list\"))}\n          />\n\n          <Icon\n            withBackground={true}\n            tooltip={t(\"go-back\")}\n            onclick={() => {\n              history.goBack();\n            }}\n            icon={() => <IoMdArrowRoundBack />}\n            foreColor={Colors.GREY_COLOR}\n          />\n        </div>\n\n        {/* {count > 0 && pageState.displayType === \"list\" && (\n       <MedicinesTableHeader user={user} />\n     )} */}\n\n        {pageState.displayType === \"list\" &&\n          medicines.map((medicine) => (\n            <ItemRowNew key={medicine._id} item={medicine} />\n          ))}\n\n        {pageState.displayType === \"card\" && (\n          <div\n            className={[\n              generalStyles.flex_container,\n              generalStyles.margin_top_10,\n            ].join(\" \")}\n          >\n            {medicines.map((medicine) => (\n              <ItemCard key={medicine._id} companyItem={medicine} />\n            ))}\n          </div>\n        )}\n\n        {count === 0 && status !== \"loading\" && (\n          <NoContent msg={t(\"no-medicines\")} />\n        )}\n\n        {status === \"loading\" && (\n          <div className={generalStyles.flex_container}>\n            <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n          </div>\n        )}\n\n        {medicines.length < count && status !== \"loading\" && (\n          <Button\n            text={t(\"more\")}\n            action={handleMoreResult}\n            bgColor={Colors.SECONDARY_COLOR}\n          />\n        )}\n\n        {medicines.length === count && status !== \"loading\" && count !== 0 && (\n          <p\n            className={[generalStyles.center, generalStyles.fc_secondary].join(\n              \" \"\n            )}\n          >\n            {t(\"no-more\")}\n          </p>\n        )}\n      </div>\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default MedicinesPage;\n"],"names":["checkOffer","item","user","type","UserTypeConstants","result","warehouses","forEach","w","offer","offers","length","filter","warehouse","_id","city","companyItem","t","useTranslation","history","useHistory","dispatch","useDispatch","isOnline","useSelector","selectOnlineStatus","selectUser","favorites","selectFavoritesItems","token","selectToken","useState","showModal","setShowModal","changeFavoriteLoading","setChangeFavoriteLoading","changeAddToWarehouseLoading","setChangeAddToWarehouseLoading","className","styles","join","onClick","statisticsItemFavorites","obj","itemId","push","from","allowAction","companyId","company","warehouseId","size","name","style","flex","icon","generalStyles","onclick","foreColor","Colors","map","includes","e","removeItemFromWarehouse","then","unwrapResult","catch","changeOnlineMsg","tooltip","addItemToWarehouse","existing_place","favorite","removeFavoriteItem","favoriteItemId","addFavoriteItem","logo_url","src","SERVER_URL","alt","Logo","composition","price","customer_price","formula","packing","caliber","close","pageState","searchName","searchCompanyName","searchWarehouseName","searchInWarehouse","searchOutWarehouse","selectUserData","favoritesItems","addItemToCart","setAddItemToCart","statisticsItemSelected","width","setAddItemToCartMsg","bgColor","toastText","actionAfterTimeout","timer","onSelectedChange","selectMedicines","medicines","count","status","showFavorites","setShowFavorites","handleSearch","setCity","getMedicines","handleEnterPress","resetMedicinesArray","useEffect","window","scrollTo","searchAction","label","id","value","onchange","setSearchName","target","placeholder","onEnterPress","resetField","onkeyup","cancelOperation","clearTimeout","setTimeout","setSearchCompanyName","setSearchWarehouseName","searchContainerStyles","checked","onChange","setSearchInWarehouse","setSearchOutWarehouse","marginBlockStart","withBackground","selected","resetMedicinesPageState","isFavorite","isSmallFavorite","displayType","setDisplayType","goBack","medicine","msg","color","text","action","to"],"sourceRoot":""}