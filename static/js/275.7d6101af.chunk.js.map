{"version":3,"file":"static/js/275.7d6101af.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/card-info/card-info.module.scss?a8ee","components/card-info/card-info.component.jsx","webpack://pharmacy-frontend/./src/components/loader/loader.module.scss?2f05","components/loader/loader.component.jsx","webpack://pharmacy-frontend/./src/components/choose-company-modal/choose-company-modal.module.scss?c918","components/choose-company-modal/choose-company-modal.component.jsx","components/setting-row/setting-row.component.jsx","webpack://pharmacy-frontend/./src/components/setting-section-header/setting-section-header.module.scss?dbfb","components/setting-section-header/setting-section-header.component.jsx","components/companies-section-one-settings/companies-section-one-settings.component.jsx","components/companies-section-two-settings/companies-section-two-settings.component.jsx","webpack://pharmacy-frontend/./src/components/choose-item-modal/choose-item-modal.module.scss?ae94","components/choose-item-modal/choose-item-modal.component.jsx","components/items-section-three-settings/items-section-three-settings.component.jsx","components/items-section-one-settings/items-section-one-settings.component.jsx","components/items-section-two-settings/items-section-two-settings.component.jsx","components/warehouses-section-one-settings/warehouses-section-one-settings.component.jsx","components/setting-checkbox/setting-checkbox.component.jsx","pages/settings-page/settings-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card-info_card__VcLb9\",\"header\":\"card-info_header__uTcny\",\"warning\":\"card-info_warning__bmiK1\"};","// card component that can collapsed or expanded by pressing on the header\n\n// props\n// headerTitle: text to show in the header section\n// children: array of component to show in the body of the card\n// type: warning or normal to change to background color of the card\n\nimport React, { useState } from \"react\";\n\n// react icon\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\n\n// styles\nimport styles from \"./card-info.module.scss\";\n\nfunction CardInfo({ headerTitle, children, type }) {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <div\n      className={[styles.card, type === \"warning\" ? styles.warning : null].join(\n        \" \"\n      )}\n    >\n      <div\n        onClick={() => setExpanded(!expanded)}\n        className={[\n          styles.header,\n          type === \"warning\" ? styles.warning : null,\n        ].join(\" \")}\n      >\n        <p>{headerTitle}</p>\n        <label\n          className={styles.header_label}\n          onClick={() => setExpanded(!expanded)}\n        >\n          {expanded ? <BsFillCaretUpFill /> : <BsFillCaretDownFill />}\n        </label>\n      </div>\n      {expanded && <div>{children}</div>}\n    </div>\n  );\n}\n\nexport default CardInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"loader_loader__qZv+U\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport ReactLoading from \"react-loading\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// styles\nimport styles from \"./loader.module.scss\";\n\nfunction Loader({ color }) {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      className={styles.loader}\n      style={{ color: color ? color : Colors.SECONDARY_COLOR }}\n    >\n      <ReactLoading\n        type=\"bars\"\n        height={75}\n        width={75}\n        color={color ? color : Colors.SECONDARY_COLOR}\n      />\n      <p>{t(\"loading-data\")}</p>\n    </div>\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"search_container\":\"choose-company-modal_search_container__LEEok\",\"search_input\":\"choose-company-modal_search_input__CHtHO\",\"company_row\":\"choose-company-modal_company_row__9RA7E\"};","import React, { useEffect, useState, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport Modal from \"../modal/modal.component\";\nimport Button from \"../button/button.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport NoContent from \"../no-content/no-content.component\";\nimport Loader from \"../loader/loader.component\";\n\n// icons\nimport { IoIosSearch } from \"react-icons/io\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// styles\nimport styles from \"./choose-company-modal.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\nfunction ChooseCompanyModal({ close, chooseAction, url }) {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  // own state\n  const [searchName, setSearchName] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n\n  const keyDownHandler = (event) => {\n    if (event.code === \"Enter\") {\n      getCompanies(1);\n    }\n\n    if (event.code !== \"Escape\") event.stopPropagation();\n  };\n\n  const getCompanies = async (p) => {\n    try {\n      setLoading(true);\n      let nameCondition = \"\";\n\n      if (searchName.trim().length > 0) {\n        nameCondition = `&name=${searchName.trim()}`;\n      }\n\n      const response = await axios.get(`${url}&page=${p}${nameCondition}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (p === 1) {\n        setData(response.data.data.users);\n      } else {\n        setData([...data, ...response.data.data.users]);\n      }\n      setCount(response.data.count);\n      setLoading(false);\n      setPage(p + 1);\n    } catch (err) {}\n  };\n\n  const addAction = (id) => {\n    dispatch(chooseAction({ id, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setData(data.filter((d) => d._id !== id));\n      });\n  };\n\n  useEffect(() => {\n    getCompanies(1);\n  }, []);\n\n  return (\n    <Modal\n      header=\"choose-company\"\n      cancelLabel=\"cancel-label\"\n      closeModal={close}\n      small={true}\n    >\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <div\n            className={[\n              styles.search_container,\n              generalStyles.flex_center_container,\n            ].join(\" \")}\n          >\n            <IoIosSearch color={Colors.SECONDARY_COLOR} size={24} />\n            <input\n              className={styles.search_input}\n              placeholder={t(\"enter-company-name\")}\n              value={searchName}\n              onChange={(e) => setSearchName(e.target.value)}\n              onKeyDown={keyDownHandler}\n            />\n            <Button\n              text=\"search\"\n              action={() => {\n                getCompanies(1);\n              }}\n              bgColor={Colors.SECONDARY_COLOR}\n            />\n          </div>\n\n          <div\n            style={{\n              maxHeight: \"300px\",\n              overflow: \"auto\",\n            }}\n          >\n            {data?.length > 0 &&\n              data.map((d) => (\n                <Row key={d._id} data={d} addAction={addAction} />\n              ))}\n\n            {data.length === 0 && searchName.length === 0 && (\n              <NoContent msg={t(\"search-for-company\")} />\n            )}\n\n            {data.length === 0 && searchName.length !== 0 && (\n              <NoContent msg={t(\"search-empty\")} />\n            )}\n          </div>\n\n          {data.length < count && (\n            <div className={generalStyles.padding_v_6}>\n              <Button\n                text=\"more\"\n                action={() => {\n                  getCompanies(page);\n                }}\n                bgColor={Colors.SECONDARY_COLOR}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n}\n\nconst Row = ({ data, addAction }) => {\n  let timer = useRef();\n\n  const dispatch = useDispatch();\n  const isOnline = useSelector(selectOnlineStatus);\n\n  const [loading, setLoading] = useState(false);\n\n  const addToFavorites = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setLoading(true);\n    addAction(data._id);\n\n    timer = setTimeout(() => {\n      setLoading(false);\n    }, 15000);\n  };\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div className={styles.company_row}>\n      <p className={styles.company_name}>{data.name}</p>\n      {loading ? (\n        <Icon\n          icon={() => (\n            <VscLoading className={generalStyles.loading} size={24} />\n          )}\n          onclick={() => {}}\n          foreColor={Colors.SECONDARY_COLOR}\n        />\n      ) : (\n        <Icon\n          icon={() => <GrAddCircle />}\n          foreColor={Colors.SUCCEEDED_COLOR}\n          onclick={addToFavorites}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ChooseCompanyModal;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// icons\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport Icon from \"../action-icon/action-icon.component\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport rowStyles from \"../row.module.scss\";\n\nfunction SettingRow({ data, tooltip, action, type }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n\n  // this variable uses to reset the loading state\n  // if the action does not complete\n  let timer = useRef();\n\n  // own state\n  const [loading, setLoading] = useState(false);\n\n  const removeFromAdvertisementSectionHandler = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setLoading(true);\n    timer = setTimeout(() => {\n      setLoading(false);\n    }, 15000);\n    action(data._id);\n  };\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <div\n        className={[rowStyles.container, rowStyles.without_box_shadow].join(\n          \" \"\n        )}\n      >\n        <label\n          style={{ flex: 3, textAlign: \"start\" }}\n          className={rowStyles.padding_start}\n        >\n          {data.name}\n        </label>\n        {type === \"item\" && (\n          <>\n            <label style={{ flex: 1 }}>{data.caliber}</label>\n            <label style={{ flex: 1 }}>{data.packing}</label>\n          </>\n        )}\n        <div className={rowStyles.padding_end}>\n          {loading ? (\n            <Icon\n              icon={() => (\n                <VscLoading className={generalStyles.loading} size={24} />\n              )}\n              onclick={() => {}}\n              foreColor={Colors.FAILED_COLOR}\n            />\n          ) : (\n            <Icon\n              icon={() => <RiDeleteBin5Fill size={20} />}\n              foreColor={Colors.FAILED_COLOR}\n              onclick={removeFromAdvertisementSectionHandler}\n              tooltip={t(tooltip)}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SettingRow;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"setting-section-header_input__YRPV5\",\"error\":\"setting-section-header_error__aYyvA\",\"label\":\"setting-section-header_label__pzVxB\",\"checkbox_label\":\"setting-section-header_checkbox_label__zG5BO\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport Icon from \"../action-icon/action-icon.component\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\n// icons\nimport { AiFillCloseCircle, AiFillEdit } from \"react-icons/ai\";\nimport { IoCheckmarkDoneCircle } from \"react-icons/io5\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./setting-section-header.module.scss\";\n\n// constants and utils\nimport {\n  Colors,\n  onKeyPressForNumberInput,\n  toEnglishNumber,\n} from \"../../utils/constants\";\n\nfunction SettingSectionHeader({\n  show,\n  title,\n  description,\n  order,\n  header,\n  checkboxLabel,\n  updateAction,\n  field,\n}) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n\n  // own states\n  const [edit, setEdit] = useState(false);\n  const [showState, setShowState] = useState(show);\n  const [titleState, setTitleState] = useState(title);\n  const [titleError, setTitleError] = useState(false);\n  const [descriptionState, setDescriptionState] = useState(description);\n  const [orderState, setOrderState] = useState(order);\n  const [orderError, setOrderError] = useState(false);\n\n  const closeHandler = () => {\n    setShowState(show);\n    setTitleState(title);\n    setDescriptionState(description);\n    setOrderState(order);\n\n    setTitleError(false);\n    setOrderError(false);\n\n    setEdit(false);\n  };\n\n  const editHandler = () => {\n    let error = false;\n    if (titleState.trim().length === 0) {\n      setTitleError(true);\n      error = true;\n    }\n\n    if (orderState < 1 || orderState > 7) {\n      setOrderError(true);\n      error = true;\n    }\n\n    if (error) {\n      return;\n    }\n\n    dispatch(\n      updateAction({\n        token,\n        obj: {\n          [`${field}`]: {\n            title: titleState,\n            description: descriptionState,\n            order: orderState,\n            show: showState,\n          },\n        },\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setEdit(false);\n      });\n  };\n\n  const quantityChange = (e) => {\n    const value = Number.parseInt(toEnglishNumber(e.target.value));\n    setOrderState(isNaN(value) ? \"\" : value);\n  };\n\n  return (\n    <>\n      <div\n        className={[generalStyles.flex_center_container]}\n        style={{ justifyContent: \"flex-start\" }}\n      >\n        <h3 style={{ color: Colors.FAILED_COLOR, paddingInlineEnd: \"12px\" }}>\n          {header}\n        </h3>\n        {edit ? (\n          <>\n            <Icon\n              icon={() => <IoCheckmarkDoneCircle size={20} />}\n              foreColor={Colors.SUCCEEDED_COLOR}\n              onclick={editHandler}\n            />\n            <Icon\n              icon={() => <AiFillCloseCircle size={20} />}\n              foreColor={Colors.FAILED_COLOR}\n              onclick={closeHandler}\n            />\n          </>\n        ) : (\n          <Icon\n            icon={() => <AiFillEdit size={20} />}\n            foreColor={Colors.SECONDARY_COLOR}\n            onclick={() => {\n              setEdit(true);\n            }}\n            tooltip={t(\"update-label\")}\n          />\n        )}\n      </div>\n\n      <div\n        className={[\n          generalStyles.flex_center_container,\n          generalStyles.fc_secondary,\n          generalStyles.padding_v_4,\n        ].join(\" \")}\n        style={{\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <label className={styles.label}>{t(\"section-title\")}</label>\n        {edit ? (\n          <input\n            className={[styles.input, titleError ? styles.error : \"\"].join(\" \")}\n            value={titleState}\n            onChange={(e) => setTitleState(e.target.value)}\n            placeholder={t(\"section-title-placeholder\")}\n          />\n        ) : (\n          <label>{titleState}</label>\n        )}\n      </div>\n\n      <div\n        className={[\n          generalStyles.flex_center_container,\n          generalStyles.fc_secondary,\n          generalStyles.padding_v_4,\n        ].join(\" \")}\n        style={{\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <label className={styles.label}>{t(\"section-description\")}</label>\n        {edit ? (\n          <input\n            className={[styles.input].join(\" \")}\n            value={descriptionState}\n            onChange={(e) => setDescriptionState(e.target.value)}\n            placeholder={t(\"section-description-placeholder\")}\n          />\n        ) : (\n          <label>{descriptionState}</label>\n        )}\n      </div>\n\n      <div\n        className={[\n          generalStyles.flex_center_container,\n          generalStyles.fc_secondary,\n          generalStyles.padding_v_4,\n        ].join(\" \")}\n        style={{\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <label className={styles.label}>{t(\"section-order\")}</label>\n        {edit ? (\n          <>\n            <input\n              value={orderState}\n              onKeyPress={onKeyPressForNumberInput}\n              onChange={quantityChange}\n              className={[styles.input, orderError ? styles.error : \"\"].join(\n                \" \"\n              )}\n              placeholder={t(\"section-order-placeholder\")}\n            />\n          </>\n        ) : (\n          <label>{orderState}</label>\n        )}\n      </div>\n\n      <div\n        className={[\n          generalStyles.flex_center_container,\n          generalStyles.fc_secondary,\n        ].join(\" \")}\n        style={{\n          justifyContent: \"flex-start\",\n        }}\n      >\n        <input\n          type=\"checkbox\"\n          value={showState}\n          checked={showState}\n          disabled={!edit}\n          onChange={() => setShowState(!showState)}\n        />\n        <label className={styles.checkbox_label}>{t(checkboxLabel)}</label>\n      </div>\n    </>\n  );\n}\n\nexport default SettingSectionHeader;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport ChooseCompanyModal from \"../choose-company-modal/choose-company-modal.component\";\nimport CardInfo from \"../card-info/card-info.component\";\nimport Button from \"../button/button.component\";\nimport Toast from \"../toast/toast.component\";\nimport SettingRow from \"../setting-row/setting-row.component\";\nimport SettingSectionHeader from \"../setting-section-header/setting-section-header.component\";\nimport Loader from \"../loader/loader.component\";\n\n// redux stuff\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSettings,\n  updateSettings,\n} from \"../../redux/settings/settingsSlice\";\nimport {\n  addCompanyToSectionOne,\n  resetAddCompanyToSectionOneStatus,\n  resetRemoveCompanyFromSectionOneStatus,\n  selectCompaniesSectionOne,\n  removeCompanyFromSectionOne,\n} from \"../../redux/advertisements/companiesSectionOneSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { BASEURL, Colors } from \"../../utils/constants\";\n\nfunction CompaniesSectionOneSettings() {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  const {\n    companiesSectionOne,\n    companiesSectionOneStatus,\n    addCompanyToSectionOneStatus,\n    removeCompanyFromSectionOneStatus,\n    addCompanyToSectionOneError,\n    removeCompanyFromSectionOneError,\n  } = useSelector(selectCompaniesSectionOne);\n\n  const {\n    settings: {\n      companiesSectionOne: { show, title, description, order, titleRight },\n    },\n  } = useSelector(selectSettings);\n\n  const [showChooseModal, setShowChooseModal] = useState(false);\n\n  const removeFromSectionOne = (id) => {\n    dispatch(removeCompanyFromSectionOne({ id: id, token }));\n  };\n\n  return (\n    <>\n      <SettingSectionHeader\n        show={show}\n        title={title}\n        description={description}\n        order={order}\n        titleRight={titleRight}\n        header=\"القسم الاول / شركات /\"\n        checkboxLabel=\"show-section-one-companies-in-home-page\"\n        updateAction={updateSettings}\n        field=\"companiesSectionOne\"\n      />\n\n      <CardInfo headerTitle={t(\"section-one-companies\")}>\n        {companiesSectionOneStatus === \"loading\" ? (\n          <Loader />\n        ) : (\n          <>\n            <div>\n              {companiesSectionOne.map((company) => (\n                <SettingRow\n                  data={company}\n                  key={company._id}\n                  action={removeFromSectionOne}\n                />\n              ))}\n\n              <div className={generalStyles.padding_v_6}>\n                <Button\n                  text=\"add-label\"\n                  action={() => {\n                    setShowChooseModal(true);\n                  }}\n                  bgColor={Colors.SUCCEEDED_COLOR}\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </CardInfo>\n\n      {showChooseModal && (\n        <ChooseCompanyModal\n          close={() => setShowChooseModal(false)}\n          chooseAction={addCompanyToSectionOne}\n          url={`${BASEURL}/users?limit=9&isActive=true&type=company&inSectionOne=false`}\n        />\n      )}\n\n      {addCompanyToSectionOneStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"company-added\")}\n          actionAfterTimeout={() =>\n            dispatch(resetAddCompanyToSectionOneStatus())\n          }\n        />\n      )}\n\n      {addCompanyToSectionOneStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addCompanyToSectionOneError)}\n          actionAfterTimeout={() =>\n            dispatch(resetAddCompanyToSectionOneStatus())\n          }\n        />\n      )}\n\n      {removeCompanyFromSectionOneStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"company-removed\")}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveCompanyFromSectionOneStatus())\n          }\n        />\n      )}\n\n      {removeCompanyFromSectionOneStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(removeCompanyFromSectionOneError)}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveCompanyFromSectionOneStatus())\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default CompaniesSectionOneSettings;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport ChooseCompanyModal from \"../choose-company-modal/choose-company-modal.component\";\nimport CardInfo from \"../card-info/card-info.component\";\nimport Button from \"../button/button.component\";\nimport Toast from \"../toast/toast.component\";\nimport SettingRow from \"../setting-row/setting-row.component\";\nimport SettingSectionHeader from \"../setting-section-header/setting-section-header.component\";\nimport Loader from \"../loader/loader.component\";\n\n// redux stuff\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSettings,\n  updateSettings,\n} from \"../../redux/settings/settingsSlice\";\nimport {\n  addCompanyToSectionTwo,\n  resetAddCompanyToSectionTwoStatus,\n  resetRemoveCompanyFromSectionTwoStatus,\n  selectCompaniesSectionTwo,\n  removeCompanyFromSectionTwo,\n} from \"../../redux/advertisements/companiesSectionTwoSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { BASEURL, Colors } from \"../../utils/constants\";\n\nfunction CompaniesSectionTwoSettings() {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  const {\n    companiesSectionTwo,\n    companiesSectionTwoStatus,\n    addCompanyToSectionTwoStatus,\n    removeCompanyFromSectionTwoStatus,\n    addCompanyToSectionTwoError,\n    removeCompanyFromSectionTwoError,\n  } = useSelector(selectCompaniesSectionTwo);\n\n  const {\n    settings: {\n      companiesSectionTwo: { show, title, description, order },\n    },\n  } = useSelector(selectSettings);\n\n  const [showChooseModal, setShowChooseModal] = useState(false);\n\n  const removeFromSectionTwo = (id) => {\n    dispatch(removeCompanyFromSectionTwo({ id: id, token }));\n  };\n\n  return (\n    <>\n      <SettingSectionHeader\n        show={show}\n        title={title}\n        description={description}\n        order={order}\n        header=\"القسم الثاني / شركات /\"\n        checkboxLabel=\"show-section-two-companies-in-home-page\"\n        updateAction={updateSettings}\n        field=\"companiesSectionTwo\"\n      />\n\n      <CardInfo headerTitle={t(\"section-two-companies\")}>\n        {companiesSectionTwoStatus === \"loading\" ? (\n          <Loader />\n        ) : (\n          <>\n            <div>\n              {companiesSectionTwo.map((company) => (\n                <SettingRow\n                  data={company}\n                  key={company._id}\n                  // tooltip=\"remove-company\"\n                  action={removeFromSectionTwo}\n                />\n              ))}\n\n              <div className={generalStyles.padding_v_6}>\n                <Button\n                  text=\"add-label\"\n                  action={() => {\n                    setShowChooseModal(true);\n                  }}\n                  bgColor={Colors.SUCCEEDED_COLOR}\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </CardInfo>\n\n      {showChooseModal && (\n        <ChooseCompanyModal\n          close={() => setShowChooseModal(false)}\n          chooseAction={addCompanyToSectionTwo}\n          url={`${BASEURL}/users?limit=9&isActive=true&type=company&inSectionTwo=false`}\n        />\n      )}\n\n      {addCompanyToSectionTwoStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"company-added\")}\n          actionAfterTimeout={() =>\n            dispatch(resetAddCompanyToSectionTwoStatus())\n          }\n        />\n      )}\n\n      {addCompanyToSectionTwoStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addCompanyToSectionTwoError)}\n          actionAfterTimeout={() =>\n            dispatch(resetAddCompanyToSectionTwoStatus())\n          }\n        />\n      )}\n\n      {removeCompanyFromSectionTwoStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"company-removed\")}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveCompanyFromSectionTwoStatus())\n          }\n        />\n      )}\n\n      {removeCompanyFromSectionTwoStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(removeCompanyFromSectionTwoError)}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveCompanyFromSectionTwoStatus())\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default CompaniesSectionTwoSettings;\n","// extracted by mini-css-extract-plugin\nexport default {\"search_container\":\"choose-item-modal_search_container__KStNN\",\"search_input\":\"choose-item-modal_search_input__rfCu4\",\"item_row\":\"choose-item-modal_item_row__mmTpP\",\"item_name\":\"choose-item-modal_item_name__j0LDx\",\"small\":\"choose-item-modal_small__gOmtc\"};","import React, { useEffect, useState, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport Modal from \"../modal/modal.component\";\nimport Button from \"../button/button.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport NoContent from \"../no-content/no-content.component\";\nimport Loader from \"../loader/loader.component\";\n\n// icons\nimport { IoIosSearch } from \"react-icons/io\";\nimport { GrAddCircle } from \"react-icons/gr\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// styles\nimport styles from \"./choose-item-modal.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\nfunction ChooseItemModal({ close, chooseAction, url }) {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  const [searchName, setSearchName] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n\n  const keyDownHandler = (event) => {\n    if (event.code === \"Enter\") {\n      getItems(1);\n    }\n\n    if (event.code !== \"Escape\") event.stopPropagation();\n  };\n\n  const getItems = async (p) => {\n    try {\n      setLoading(true);\n      let nameCondition = \"\";\n\n      if (searchName.trim().length > 0) {\n        nameCondition = `&itemName=${searchName.trim()}`;\n      }\n\n      const response = await axios.get(`${url}&page=${p}${nameCondition}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      if (p === 1) {\n        setData(response.data.data.items);\n      } else {\n        setData([...data, ...response.data.data.items]);\n      }\n      setCount(response.data.count);\n      setLoading(false);\n      setPage(p + 1);\n    } catch (err) {}\n  };\n\n  const addAction = (id) => {\n    dispatch(chooseAction({ id, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setData(data.filter((d) => d._id !== id));\n      });\n  };\n\n  useEffect(() => {\n    getItems(1);\n  }, []);\n\n  return (\n    <Modal\n      header=\"choose-item\"\n      cancelLabel=\"cancel-label\"\n      closeModal={close}\n      small={true}\n    >\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <div\n            className={[\n              styles.search_container,\n              generalStyles.flex_center_container,\n            ].join(\" \")}\n          >\n            <IoIosSearch color={Colors.SECONDARY_COLOR} size={24} />\n            <input\n              className={styles.search_input}\n              placeholder={t(\"enter-item-trade-name\")}\n              value={searchName}\n              onChange={(e) => setSearchName(e.target.value)}\n              onKeyDown={keyDownHandler}\n            />\n            <Button\n              text=\"search\"\n              action={() => {\n                getItems(1);\n              }}\n              bgColor={Colors.SECONDARY_COLOR}\n            />\n          </div>\n\n          <div\n            style={{\n              maxHeight: \"300px\",\n              overflow: \"auto\",\n            }}\n          >\n            {data?.length > 0 &&\n              data.map((d) => (\n                <Row key={d._id} data={d} addAction={addAction} />\n              ))}\n\n            {data.length === 0 && searchName.length === 0 && (\n              <NoContent msg={t(\"search-for-item\")} />\n            )}\n\n            {data.length === 0 && searchName.length !== 0 && (\n              <NoContent msg={t(\"search-empty\")} />\n            )}\n          </div>\n\n          {data.length < count && (\n            <div className={generalStyles.padding_v_6}>\n              <Button\n                text=\"more\"\n                action={() => {\n                  getItems(page);\n                }}\n                bgColor={Colors.SECONDARY_COLOR}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n}\n\nconst Row = ({ data, addAction }) => {\n  let timer = useRef();\n\n  const dispatch = useDispatch();\n  const isOnline = useSelector(selectOnlineStatus);\n\n  const [loading, setLoading] = useState(false);\n\n  const addToFavorites = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n    setLoading(true);\n    addAction(data._id);\n\n    timer = setTimeout(() => {\n      setLoading(false);\n    }, 15000);\n  };\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div className={styles.item_row}>\n      <p className={styles.item_name}>{data.name}</p>\n      <p className={[styles.small].join(\" \")}>{data.caliber}</p>\n      <p className={[styles.small].join(\" \")}>{data.packing}</p>\n      {loading ? (\n        <Icon\n          icon={() => (\n            <VscLoading className={generalStyles.loading} size={24} />\n          )}\n          onclick={() => {}}\n          foreColor={Colors.SECONDARY_COLOR}\n        />\n      ) : (\n        <Icon\n          icon={() => <GrAddCircle />}\n          foreColor={Colors.SUCCEEDED_COLOR}\n          onclick={addToFavorites}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ChooseItemModal;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport CardInfo from \"../card-info/card-info.component\";\nimport Button from \"../button/button.component\";\nimport Toast from \"../toast/toast.component\";\nimport SettingRow from \"../setting-row/setting-row.component\";\nimport SettingSectionHeader from \"../setting-section-header/setting-section-header.component\";\nimport Loader from \"../loader/loader.component\";\n\n// redux stuff\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSettings,\n  updateSettings,\n} from \"../../redux/settings/settingsSlice\";\nimport {\n  addItemToSectionThree,\n  resetAddItemToSectionThreeStatus,\n  resetRemoveItemFromSectionThreeStatus,\n  selectItemsSectionThree,\n  removeItemFromSectionThree,\n} from \"../../redux/advertisements/itemsSectionThreeSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { BASEURL, Colors } from \"../../utils/constants\";\nimport ChooseItemModal from \"../choose-item-modal/choose-item-modal.component\";\n\nfunction ItemsSectionThreeSettings() {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  const {\n    itemsSectionThree,\n    itemsSectionThreeStatus,\n    addItemToSectionThreeStatus,\n    removeItemFromSectionThreeStatus,\n    addItemToSectionThreeError,\n    removeItemFromSectionThreeError,\n  } = useSelector(selectItemsSectionThree);\n\n  const {\n    settings: {\n      itemsSectionThree: { show, title, description, order, titleRight },\n    },\n  } = useSelector(selectSettings);\n\n  const [showChooseModal, setShowChooseModal] = useState(false);\n\n  const removeFromSectionThree = (id) => {\n    dispatch(removeItemFromSectionThree({ id: id, token }));\n  };\n\n  return (\n    <>\n      <SettingSectionHeader\n        show={show}\n        title={title}\n        description={description}\n        order={order}\n        titleRight={titleRight}\n        header=\"القسم الثالث / أدوية /\"\n        checkboxLabel=\"show-section-three-items-in-home-page\"\n        updateAction={updateSettings}\n        field=\"itemsSectionThree\"\n      />\n\n      <CardInfo headerTitle={t(\"section-three-items\")}>\n        {itemsSectionThreeStatus === \"loading\" ? (\n          <Loader />\n        ) : (\n          <>\n            <div>\n              {itemsSectionThree.map((item) => (\n                <SettingRow\n                  data={item}\n                  key={item._id}\n                  // tooltip=\"remove-company-from-favorites-advertisement\"\n                  action={removeFromSectionThree}\n                  type=\"item\"\n                />\n              ))}\n\n              <div className={generalStyles.padding_v_6}>\n                <Button\n                  text=\"add-label\"\n                  action={() => {\n                    setShowChooseModal(true);\n                  }}\n                  bgColor={Colors.SUCCEEDED_COLOR}\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </CardInfo>\n\n      {showChooseModal && (\n        <ChooseItemModal\n          close={() => setShowChooseModal(false)}\n          chooseAction={addItemToSectionThree}\n          url={`${BASEURL}/items?limit=9&isActive=true&inSectionThree=false`}\n        />\n      )}\n\n      {addItemToSectionThreeStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"item-added\")}\n          actionAfterTimeout={() =>\n            dispatch(resetAddItemToSectionThreeStatus())\n          }\n        />\n      )}\n\n      {addItemToSectionThreeStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addItemToSectionThreeError)}\n          actionAfterTimeout={() =>\n            dispatch(resetAddItemToSectionThreeStatus())\n          }\n        />\n      )}\n\n      {removeItemFromSectionThreeStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"item-removed\")}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveItemFromSectionThreeStatus())\n          }\n        />\n      )}\n\n      {removeItemFromSectionThreeStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(removeItemFromSectionThreeError)}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveItemFromSectionThreeStatus())\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default ItemsSectionThreeSettings;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport CardInfo from \"../card-info/card-info.component\";\nimport Button from \"../button/button.component\";\nimport Toast from \"../toast/toast.component\";\nimport SettingRow from \"../setting-row/setting-row.component\";\nimport SettingSectionHeader from \"../setting-section-header/setting-section-header.component\";\nimport Loader from \"../loader/loader.component\";\n\n// redux stuff\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSettings,\n  updateSettings,\n} from \"../../redux/settings/settingsSlice\";\nimport {\n  addItemToSectionOne,\n  resetAddItemToSectionOneStatus,\n  resetRemoveItemFromSectionOneStatus,\n  selectItemsSectionOne,\n  removeItemFromSectionOne,\n} from \"../../redux/advertisements/itemsSectionOneSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { BASEURL, Colors } from \"../../utils/constants\";\nimport ChooseItemModal from \"../choose-item-modal/choose-item-modal.component\";\n\nfunction ItemsSectionOneSettings() {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  const {\n    itemsSectionOne,\n    itemsSectionOneStatus,\n    addItemToSectionOneStatus,\n    removeItemFromSectionOneStatus,\n    addItemToSectionOneError,\n    removeItemFromSectionOneError,\n  } = useSelector(selectItemsSectionOne);\n\n  const {\n    settings: {\n      itemsSectionOne: { show, title, description, order, titleRight },\n    },\n  } = useSelector(selectSettings);\n\n  const [showChooseModal, setShowChooseModal] = useState(false);\n\n  const removeFromSectionOne = (id) => {\n    dispatch(removeItemFromSectionOne({ id: id, token }));\n  };\n\n  return (\n    <>\n      <SettingSectionHeader\n        show={show}\n        title={title}\n        description={description}\n        order={order}\n        titleRight={titleRight}\n        header=\"القسم الاول / أدوية /\"\n        checkboxLabel=\"show-section-one-items-in-home-page\"\n        updateAction={updateSettings}\n        field=\"itemsSectionOne\"\n      />\n\n      <CardInfo headerTitle={t(\"section-one-items\")}>\n        {itemsSectionOneStatus === \"loading\" ? (\n          <Loader />\n        ) : (\n          <>\n            <div>\n              {itemsSectionOne.map((item) => (\n                <SettingRow\n                  data={item}\n                  key={item._id}\n                  // tooltip=\"remove-company-from-favorites-advertisement\"\n                  action={removeFromSectionOne}\n                  type=\"item\"\n                />\n              ))}\n\n              <div className={generalStyles.padding_v_6}>\n                <Button\n                  text=\"add-label\"\n                  action={() => {\n                    setShowChooseModal(true);\n                  }}\n                  bgColor={Colors.SUCCEEDED_COLOR}\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </CardInfo>\n\n      {showChooseModal && (\n        <ChooseItemModal\n          close={() => setShowChooseModal(false)}\n          chooseAction={addItemToSectionOne}\n          url={`${BASEURL}/items?limit=9&isActive=true&inSectionOne=false`}\n        />\n      )}\n\n      {addItemToSectionOneStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"item-added\")}\n          actionAfterTimeout={() => dispatch(resetAddItemToSectionOneStatus())}\n        />\n      )}\n\n      {addItemToSectionOneStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addItemToSectionOneError)}\n          actionAfterTimeout={() => dispatch(resetAddItemToSectionOneStatus())}\n        />\n      )}\n\n      {removeItemFromSectionOneStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"item-removed\")}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveItemFromSectionOneStatus())\n          }\n        />\n      )}\n\n      {removeItemFromSectionOneStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(removeItemFromSectionOneError)}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveItemFromSectionOneStatus())\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default ItemsSectionOneSettings;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport CardInfo from \"../card-info/card-info.component\";\nimport Button from \"../button/button.component\";\nimport Toast from \"../toast/toast.component\";\nimport SettingRow from \"../setting-row/setting-row.component\";\nimport SettingSectionHeader from \"../setting-section-header/setting-section-header.component\";\nimport Loader from \"../loader/loader.component\";\n\n// redux stuff\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSettings,\n  updateSettings,\n} from \"../../redux/settings/settingsSlice\";\nimport {\n  addItemToSectionTwo,\n  resetAddItemToSectionTwoStatus,\n  resetRemoveItemFromSectionTwoStatus,\n  selectItemsSectionTwo,\n  removeItemFromSectionTwo,\n} from \"../../redux/advertisements/itemsSectionTwoSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { BASEURL, Colors } from \"../../utils/constants\";\nimport ChooseItemModal from \"../choose-item-modal/choose-item-modal.component\";\n\nfunction ItemsSectionTwoSettings() {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  const {\n    itemsSectionTwo,\n    itemsSectionTwoStatus,\n    addItemToSectionTwoStatus,\n    removeItemFromSectionTwoStatus,\n    addItemToSectionTwoError,\n    removeItemFromSectionTwoError,\n  } = useSelector(selectItemsSectionTwo);\n\n  const {\n    settings: {\n      itemsSectionTwo: { show, title, description, order, titleRight },\n    },\n  } = useSelector(selectSettings);\n\n  const [showChooseModal, setShowChooseModal] = useState(false);\n\n  const removeFromSectionTwo = (id) => {\n    dispatch(removeItemFromSectionTwo({ id: id, token }));\n  };\n\n  return (\n    <>\n      <SettingSectionHeader\n        show={show}\n        title={title}\n        description={description}\n        order={order}\n        titleRight={titleRight}\n        header=\"القسم الثاني / أدوية /\"\n        checkboxLabel=\"show-section-two-items-in-home-page\"\n        updateAction={updateSettings}\n        field=\"itemsSectionTwo\"\n      />\n\n      <CardInfo headerTitle={t(\"section-two-items\")}>\n        {itemsSectionTwoStatus === \"loading\" ? (\n          <Loader />\n        ) : (\n          <>\n            <div>\n              {itemsSectionTwo.map((item) => (\n                <SettingRow\n                  data={item}\n                  key={item._id}\n                  // tooltip=\"remove-company-from-favorites-advertisement\"\n                  action={removeFromSectionTwo}\n                  type=\"item\"\n                />\n              ))}\n\n              <div className={generalStyles.padding_v_6}>\n                <Button\n                  text=\"add-label\"\n                  action={() => {\n                    setShowChooseModal(true);\n                  }}\n                  bgColor={Colors.SUCCEEDED_COLOR}\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </CardInfo>\n\n      {showChooseModal && (\n        <ChooseItemModal\n          close={() => setShowChooseModal(false)}\n          chooseAction={addItemToSectionTwo}\n          url={`${BASEURL}/items?limit=9&isActive=true&inSectionTwo=false`}\n        />\n      )}\n\n      {addItemToSectionTwoStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"item-added\")}\n          actionAfterTimeout={() => dispatch(resetAddItemToSectionTwoStatus())}\n        />\n      )}\n\n      {addItemToSectionTwoStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addItemToSectionTwoError)}\n          actionAfterTimeout={() => dispatch(resetAddItemToSectionTwoStatus())}\n        />\n      )}\n\n      {removeItemFromSectionTwoStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"item-removed\")}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveItemFromSectionTwoStatus())\n          }\n        />\n      )}\n\n      {removeItemFromSectionTwoStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(removeItemFromSectionTwoError)}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveItemFromSectionTwoStatus())\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default ItemsSectionTwoSettings;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport ChooseWarehouseModal from \"../choose-company-modal/choose-company-modal.component\";\nimport CardInfo from \"../card-info/card-info.component\";\nimport Button from \"../button/button.component\";\nimport Toast from \"../toast/toast.component\";\nimport SettingRow from \"../setting-row/setting-row.component\";\nimport SettingSectionHeader from \"../setting-section-header/setting-section-header.component\";\nimport Loader from \"../loader/loader.component\";\n\n// redux stuff\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectSettings,\n  updateSettings,\n} from \"../../redux/settings/settingsSlice\";\nimport {\n  addWarehouseToSectionOne,\n  resetAddWarehouseToSectionOneStatus,\n  resetRemoveWarehouseFromSectionOneStatus,\n  selectWarehousesSectionOne,\n  removeWarehouseFromSectionOne,\n} from \"../../redux/advertisements/warehousesSectionOneSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { BASEURL, Colors } from \"../../utils/constants\";\n\nfunction WarehousesSectionOneSettings() {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const dispatch = useDispatch();\n\n  // selectors\n  const {\n    warehousesSectionOne,\n    warehousesSectionOneStatus,\n    addWarehouseToSectionOneStatus,\n    removeWarehouseFromSectionOneStatus,\n    addWarehouseToSectionOneError,\n    removeWarehouseFromSectionOneError,\n  } = useSelector(selectWarehousesSectionOne);\n  const {\n    settings: {\n      warehousesSectionOne: { show, title, description, order, titleRight },\n    },\n  } = useSelector(selectSettings);\n\n  // own states\n  const [showChooseModal, setShowChooseModal] = useState(false);\n\n  // handlers\n  const removeFromSectionOneHandler = (id) => {\n    dispatch(removeWarehouseFromSectionOne({ id: id, token }));\n  };\n\n  return (\n    <>\n      <SettingSectionHeader\n        show={show}\n        title={title}\n        description={description}\n        order={order}\n        titleRight={titleRight}\n        header={t(\"section-one-warehouses\")}\n        checkboxLabel=\"show-section-one-warehouses-in-home-page\"\n        updateAction={updateSettings}\n        field=\"warehousesSectionOne\"\n      />\n\n      <CardInfo headerTitle={t(\"section-one-warehouses\")}>\n        {warehousesSectionOneStatus === \"loading\" ? (\n          <Loader />\n        ) : (\n          <>\n            <div>\n              {warehousesSectionOne.map((warehouse) => (\n                <SettingRow\n                  data={warehouse}\n                  key={warehouse._id}\n                  action={removeFromSectionOneHandler}\n                />\n              ))}\n\n              <div className={generalStyles.padding_v_6}>\n                <Button\n                  text=\"add-label\"\n                  action={() => {\n                    setShowChooseModal(true);\n                  }}\n                  bgColor={Colors.SUCCEEDED_COLOR}\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </CardInfo>\n\n      {showChooseModal && (\n        <ChooseWarehouseModal\n          close={() => setShowChooseModal(false)}\n          chooseAction={addWarehouseToSectionOne}\n          url={`${BASEURL}/users?limit=9&isActive=true&type=warehouse&inSectionOne=false`}\n        />\n      )}\n\n      {addWarehouseToSectionOneStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"company-added\")}\n          actionAfterTimeout={() =>\n            dispatch(resetAddWarehouseToSectionOneStatus())\n          }\n        />\n      )}\n\n      {addWarehouseToSectionOneStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addWarehouseToSectionOneError)}\n          actionAfterTimeout={() =>\n            dispatch(resetAddWarehouseToSectionOneStatus())\n          }\n        />\n      )}\n\n      {removeWarehouseFromSectionOneStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"company-removed\")}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveWarehouseFromSectionOneStatus())\n          }\n        />\n      )}\n\n      {removeWarehouseFromSectionOneStatus === \"failed\" && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(removeWarehouseFromSectionOneError)}\n          actionAfterTimeout={() =>\n            dispatch(resetRemoveWarehouseFromSectionOneStatus())\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default WarehousesSectionOneSettings;\n","import React from \"react\";\n\nimport generalStyles from \"../../style.module.scss\";\n\nfunction SettingCheckbox({ value, action, label }) {\n  return (\n    <div\n      className={[\n        generalStyles.flex_center_container,\n        generalStyles.fc_secondary,\n      ].join(\" \")}\n      style={{\n        justifyContent: \"start\",\n      }}\n    >\n      <input type=\"checkbox\" value={value} checked={value} onChange={action} />\n      <label style={{ padding: \"0 10px\" }}>{label}</label>\n    </div>\n  );\n}\n\nexport default SettingCheckbox;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { getCompaniesSectionOne } from \"../../redux/advertisements/companiesSectionOneSlice\";\nimport { getCompaniesSectionTwo } from \"../../redux/advertisements/companiesSectionTwoSlice\";\nimport { getItemsSectionOne } from \"../../redux/advertisements/itemsSectionOneSlice\";\nimport { getItemsSectionTwo } from \"../../redux/advertisements/itemsSectionTwoSlice\";\nimport { getItemsSectionThree } from \"../../redux/advertisements/itemsSectionThreeSlice\";\nimport { getWarehousesSectionOne } from \"../../redux/advertisements/warehousesSectionOneSlice\";\nimport {\n  selectSettings,\n  updateSettings,\n} from \"../../redux/settings/settingsSlice\";\n\n// components\nimport Header from \"../../components/header/header.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\nimport CompaniesSectionOneSettings from \"../../components/companies-section-one-settings/companies-section-one-settings.component\";\nimport CompaniesSectionTwoSettings from \"../../components/companies-section-two-settings/companies-section-two-settings.component\";\nimport ItemsSectionThreeSettings from \"../../components/items-section-three-settings/items-section-three-settings.component\";\nimport ItemsSectionOneSettings from \"../../components/items-section-one-settings/items-section-one-settings.component\";\nimport ItemsSectionTwoSettings from \"../../components/items-section-two-settings/items-section-two-settings.component\";\nimport WarehousesSectionOneSettings from \"../../components/warehouses-section-one-settings/warehouses-section-one-settings.component\";\nimport SettingCheckbox from \"../../components/setting-checkbox/setting-checkbox.component\";\nimport { default as ActionLoader } from \"../../components/action-loader/action-loader.component\";\n\n// icons\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\nfunction SettingsPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { status } = useSelector(selectSettings);\n  const { user, token } = useSelector(selectUserData);\n  const {\n    settings: { showWarehouseItem, showAdvertisements, saveOrders },\n  } = useSelector(selectSettings);\n\n  const changeShowWarehouseItemSettingHandler = () =>\n    dispatch(\n      updateSettings({\n        token,\n        obj: {\n          showWarehouseItem: !showWarehouseItem,\n        },\n      })\n    );\n\n  const changeShowAdvertisementSettingHandler = () =>\n    dispatch(\n      updateSettings({\n        token,\n        obj: {\n          showAdvertisements: !showAdvertisements,\n        },\n      })\n    );\n\n  const changeSaveOrdersSettingHandler = () =>\n    dispatch(\n      updateSettings({\n        token,\n        obj: {\n          saveOrders: !saveOrders,\n        },\n      })\n    );\n\n  const refreshHandler = () => {\n    dispatch(getCompaniesSectionOne({ token }));\n    dispatch(getCompaniesSectionTwo({ token }));\n    dispatch(getItemsSectionOne({ token }));\n    dispatch(getItemsSectionTwo({ token }));\n    dispatch(getItemsSectionThree({ token }));\n    dispatch(getWarehousesSectionOne({ token }));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    onSelectedChange();\n  }, []);\n\n  return user && user.type === UserTypeConstants.ADMIN ? (\n    <>\n      <div className={generalStyles.container}>\n        <Header>\n          <h2>{t(\"nav-settings\")}</h2>\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"16px\",\n              left: \"42px\",\n            }}\n          >\n            <Icon\n              selected={false}\n              foreColor={Colors.SECONDARY_COLOR}\n              tooltip={t(\"refresh-tooltip\")}\n              onclick={refreshHandler}\n              icon={() => <RiRefreshLine />}\n            />\n          </div>\n        </Header>\n\n        <CompaniesSectionOneSettings />\n        <CompaniesSectionTwoSettings />\n        <WarehousesSectionOneSettings />\n        <ItemsSectionOneSettings />\n        <ItemsSectionTwoSettings />\n        <ItemsSectionThreeSettings />\n        <div>\n          <h3 style={{ color: Colors.FAILED_COLOR }}>\n            {t(\"general-settings\")}\n          </h3>\n        </div>\n        <SettingCheckbox\n          label={t(\"show-warehouse-items-permission\")}\n          value={showWarehouseItem}\n          action={changeShowWarehouseItemSettingHandler}\n        />\n        <SettingCheckbox\n          label={t(\"show-advertisement-on-home-page\")}\n          value={showAdvertisements}\n          action={changeShowAdvertisementSettingHandler}\n        />\n        <SettingCheckbox\n          label={t(\"save-orders-in-database-permission\")}\n          value={saveOrders}\n          action={changeSaveOrdersSettingHandler}\n        />\n      </div>\n      {status === \"loading\" && <ActionLoader />}\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default SettingsPage;\n"],"names":["headerTitle","children","type","useState","expanded","setExpanded","className","styles","join","onClick","color","t","useTranslation","style","Colors","height","width","Row","data","addAction","timer","useRef","dispatch","useDispatch","isOnline","useSelector","selectOnlineStatus","loading","setLoading","useEffect","clearTimeout","name","icon","generalStyles","size","onclick","foreColor","_id","setTimeout","changeOnlineMsg","close","chooseAction","url","token","selectToken","searchName","setSearchName","setData","page","setPage","count","setCount","getCompanies","p","nameCondition","trim","length","axios","headers","Authorization","response","users","id","then","unwrapResult","filter","d","header","cancelLabel","closeModal","small","placeholder","value","onChange","e","target","onKeyDown","event","code","stopPropagation","text","action","bgColor","maxHeight","overflow","map","msg","tooltip","rowStyles","flex","textAlign","caliber","packing","show","title","description","order","checkboxLabel","updateAction","field","edit","setEdit","showState","setShowState","titleState","setTitleState","titleError","setTitleError","descriptionState","setDescriptionState","orderState","setOrderState","orderError","setOrderError","justifyContent","paddingInlineEnd","error","obj","onKeyPress","onKeyPressForNumberInput","Number","parseInt","toEnglishNumber","isNaN","checked","disabled","selectCompaniesSectionOne","companiesSectionOne","companiesSectionOneStatus","addCompanyToSectionOneStatus","removeCompanyFromSectionOneStatus","addCompanyToSectionOneError","removeCompanyFromSectionOneError","selectSettings","settings","titleRight","showChooseModal","setShowChooseModal","removeFromSectionOne","removeCompanyFromSectionOne","updateSettings","company","addCompanyToSectionOne","BASEURL","toastText","actionAfterTimeout","resetAddCompanyToSectionOneStatus","resetRemoveCompanyFromSectionOneStatus","selectCompaniesSectionTwo","companiesSectionTwo","companiesSectionTwoStatus","addCompanyToSectionTwoStatus","removeCompanyFromSectionTwoStatus","addCompanyToSectionTwoError","removeCompanyFromSectionTwoError","removeFromSectionTwo","removeCompanyFromSectionTwo","addCompanyToSectionTwo","resetAddCompanyToSectionTwoStatus","resetRemoveCompanyFromSectionTwoStatus","getItems","items","selectItemsSectionThree","itemsSectionThree","itemsSectionThreeStatus","addItemToSectionThreeStatus","removeItemFromSectionThreeStatus","addItemToSectionThreeError","removeItemFromSectionThreeError","removeFromSectionThree","removeItemFromSectionThree","item","addItemToSectionThree","resetAddItemToSectionThreeStatus","resetRemoveItemFromSectionThreeStatus","selectItemsSectionOne","itemsSectionOne","itemsSectionOneStatus","addItemToSectionOneStatus","removeItemFromSectionOneStatus","addItemToSectionOneError","removeItemFromSectionOneError","removeItemFromSectionOne","addItemToSectionOne","resetAddItemToSectionOneStatus","resetRemoveItemFromSectionOneStatus","selectItemsSectionTwo","itemsSectionTwo","itemsSectionTwoStatus","addItemToSectionTwoStatus","removeItemFromSectionTwoStatus","addItemToSectionTwoError","removeItemFromSectionTwoError","removeItemFromSectionTwo","addItemToSectionTwo","resetAddItemToSectionTwoStatus","resetRemoveItemFromSectionTwoStatus","selectWarehousesSectionOne","warehousesSectionOne","warehousesSectionOneStatus","addWarehouseToSectionOneStatus","removeWarehouseFromSectionOneStatus","addWarehouseToSectionOneError","removeWarehouseFromSectionOneError","removeFromSectionOneHandler","removeWarehouseFromSectionOne","warehouse","addWarehouseToSectionOne","resetAddWarehouseToSectionOneStatus","resetRemoveWarehouseFromSectionOneStatus","label","padding","onSelectedChange","status","selectUserData","user","showWarehouseItem","showAdvertisements","saveOrders","window","scrollTo","UserTypeConstants","position","top","left","selected","getCompaniesSectionOne","getCompaniesSectionTwo","getItemsSectionOne","getItemsSectionTwo","getItemsSectionThree","getWarehousesSectionOne","to"],"sourceRoot":""}