{"version":3,"file":"static/js/334.9a07d8be.chunk.js","mappings":"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","sources":["components/side-nav-admin/side-nav-admin.component.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HiUsers } from \"react-icons/hi\";\nimport { GiMedicines } from \"react-icons/gi\";\nimport { RiAdvertisementFill } from \"react-icons/ri\";\nimport { MdNotificationsActive, MdOutlineSettings } from \"react-icons/md\";\nimport { BsFillEnvelopeFill, BsFillBarChartLineFill } from \"react-icons/bs\";\nimport { CgProfile } from \"react-icons/cg\";\n\n// react redux\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCompany,\n  setRole,\n  setWarehouse,\n} from \"../../redux/items/itemsSlices\";\nimport { selectOrders, setRefresh } from \"../../redux/orders/ordersSlice\";\n\n// styles\nimport styles from \"../side-nav.module.scss\";\n\n// constants\nimport { SideNavLinks, UserTypeConstants } from \"../../utils/constants.js\";\n\nfunction SideNavAdmin({ selectedOption, onSelectedChange, collapsed }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const {\n    settings: { saveOrders },\n  } = useSelector(selectSettings);\n  const { unreadCount } = useSelector(selectOrders);\n\n  return (\n    <>\n      <div\n        style={{\n          height: \"5px\",\n        }}\n      ></div>\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.PARTNERS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.PARTNERS);\n        }}\n        to=\"/admin/partners\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <HiUsers size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>\n                {t(SideNavLinks.PARTNERS)}\n              </label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(SideNavLinks.PARTNERS)}</div>\n          )}\n        </div>\n      </Link>\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.ITEMS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.ITEMS);\n          dispatch(setCompany(null));\n          dispatch(setWarehouse(null));\n          dispatch(setRole(UserTypeConstants.ADMIN));\n        }}\n        to={{\n          pathname: \"/items\",\n        }}\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <GiMedicines size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-items\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-items\")}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.ADVERTISEMENTS\n            ? `${styles.selected}`\n            : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.ADVERTISEMENTS);\n        }}\n        to=\"/admin/advertisements\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-advertise\")}</label>\n            )}\n            <RiAdvertisementFill size={20} />\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-advertise\")}</div>\n          )}\n        </div>\n      </Link>\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.NOTIFICATIONS\n            ? `${styles.selected}`\n            : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.NOTIFICATIONS);\n        }}\n        to=\"/admin/notifications\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <MdNotificationsActive size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-notifications\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-notifications\")}</div>\n          )}\n        </div>\n      </Link>\n\n      {saveOrders && (\n        <Link\n          className={[\n            styles.link,\n            selectedOption === SideNavLinks.ORDERS ? `${styles.selected}` : \"\",\n          ].join(\" \")}\n          onClick={() => {\n            onSelectedChange(SideNavLinks.ORDERS);\n            dispatch(setRefresh(true));\n          }}\n          to=\"/orders\"\n        >\n          <div className={styles.nav}>\n            <div className={styles.nav_icon}>\n              <BsFillEnvelopeFill size={20} />\n              {collapsed && (\n                <label className={styles.tooltip}>{t(\"nav-orders\")}</label>\n              )}\n            </div>\n            {!collapsed && (\n              <div className={styles.nav_label}>{t(\"nav-orders\")} </div>\n            )}\n          </div>\n          {/* {unreadCount > 0 && (\n            <span className={styles.badge}>{unreadCount}</span>\n          )} */}\n        </Link>\n      )}\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.SETTINGS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.SETTINGS);\n        }}\n        to=\"/admin/settings\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <MdOutlineSettings size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-settings\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-settings\")}</div>\n          )}\n        </div>\n      </Link>\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.STATISTICS\n            ? `${styles.selected}`\n            : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.STATISTICS);\n        }}\n        to=\"/admin/statistics\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <BsFillBarChartLineFill size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-statistics\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-statistics\")}</div>\n          )}\n        </div>\n      </Link>\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.PROFILE ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.PROFILE);\n        }}\n        to=\"/profile\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <CgProfile size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-profile\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-profile\")}</div>\n          )}\n        </div>\n      </Link>\n    </>\n  );\n}\n\nexport default SideNavAdmin;\n"],"names":["selectedOption","onSelectedChange","collapsed","t","useTranslation","dispatch","useDispatch","saveOrders","useSelector","selectSettings","settings","selectOrders","unreadCount","style","height","className","styles","SideNavLinks","join","onClick","to","size","setCompany","setWarehouse","setRole","UserTypeConstants","pathname","setRefresh"],"sourceRoot":""}