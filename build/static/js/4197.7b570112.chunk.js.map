{"version":3,"file":"static/js/4197.7b570112.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","webpack://pharmacy-frontend/./src/components/table-header/table-header.module.scss?29ac","components/table-header/table-header.component.jsx","webpack://pharmacy-frontend/./src/components/input-file/input-file.module.scss?eba8","components/input-file/input-file.component.jsx","components/item-excel-row/item-excel-row.component.jsx","components/excel-table-header/excel-table-header.component.jsx","webpack://pharmacy-frontend/./src/components/excel-file-criteria/excel-file-criteria.module.scss?51a0","components/excel-file-criteria/excel-file-criteria.component.jsx","webpack://pharmacy-frontend/./src/components/item-excel-card/item-excel-card.module.scss?1420","components/item-excel-card/item-excel-card.component.jsx","webpack://pharmacy-frontend/./src/pages/item-excel-page/item-excel-page.module.scss?d7d4","pages/item-excel-page/item-excel-page.component.jsx","webpack://pharmacy-frontend/./src/components/table.module.scss?2909"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\",\"back\":\"header_back__wgjRV\"};","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../action-icon/action-icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ children }) {\n  const history = useHistory();\n\n  return (\n    <div className={styles.header}>\n      {children}\n      <div className={styles.back}>\n        <Icon\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.WHITE_COLOR}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"table-header_small_font__DpZRH\",\"header\":\"table-header_header__Vm2um\"};","import React from \"react\";\n\nimport styles from \"./table-header.module.scss\";\n\nfunction TableHeader({ children }) {\n  return <div className={styles.header}>{children}</div>;\n}\n\nexport default TableHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"input-file_small_font__95tzM\",\"actions\":\"input-file_actions__5QgxV\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { SiMicrosoftexcel } from \"react-icons/si\";\n\n// styles\nimport { Colors } from \"../../utils/constants\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport styles from \"./input-file.module.scss\";\n\nfunction InputFile({ fileChangedHandler, small, label }) {\n  const { t } = useTranslation();\n  const inputFileRef = React.useRef(null);\n\n  const handleClick = (event) => {\n    inputFileRef.current.click();\n  };\n\n  const handleFileChange = (event) => {\n    const uploadedFile = event.target.files[0];\n    fileChangedHandler(uploadedFile);\n  };\n\n  return (\n    <>\n      {small ? (\n        <Icon\n          selected={false}\n          foreColor={Colors.SUCCEEDED_COLOR}\n          tooltip={t(\"items-from-excel\")}\n          onclick={handleClick}\n          icon={() => <SiMicrosoftexcel size={24} />}\n          withBackground={true}\n        />\n      ) : (\n        <div\n          className={styles.actions}\n          style={{\n            marginBlockEnd: \"10px\",\n          }}\n        >\n          <label\n            style={{\n              color: Colors.SECONDARY_COLOR,\n            }}\n          >\n            {t(label)}\n          </label>\n          <Icon\n            selected={false}\n            foreColor={Colors.SUCCEEDED_COLOR}\n            tooltip={t(label)}\n            onclick={handleClick}\n            icon={() => <SiMicrosoftexcel size={24} />}\n            withBackground={true}\n          />\n        </div>\n      )}\n\n      <input\n        accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n        ref={inputFileRef}\n        type=\"file\"\n        onChange={handleFileChange}\n        style={{ display: \"none\" }}\n      />\n    </>\n  );\n}\n\nexport default InputFile;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// icons\nimport { AiFillDelete } from \"react-icons/ai\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport tableStyles from \"../table.module.scss\";\nimport rowStyles from \"../row.module.scss\";\nimport { onKeyPressForNumberInput } from \"../../utils/constants\";\n\nfunction ItemExcelRow({\n  item,\n  index,\n  onchange,\n  onDelete,\n  onSelectedChanged,\n  withUpdate,\n}) {\n  const { t } = useTranslation();\n\n  const error =\n    item.name === \"\" ||\n    item.price * 1 === 0 ||\n    item.customer_price * 1 === 0 ||\n    (withUpdate === true && item._id === null);\n\n  return (\n    <div\n      className={[rowStyles.container, error ? rowStyles.error : \"\"].join(\" \")}\n    >\n      <div\n        className={[\n          tableStyles.label_xsmall,\n          generalStyles.flex_center_container,\n        ].join(\" \")}\n      >\n        <input\n          type=\"checkbox\"\n          value={item.selected}\n          checked={item.selected}\n          // disabled={error}\n          onChange={() => onSelectedChanged(index)}\n        />\n      </div>\n      <div className={tableStyles.label_medium}>\n        <input\n          className={rowStyles.input}\n          id=\"name\"\n          type=\"text\"\n          value={item.name}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={tableStyles.label_medium}>\n        <input\n          className={rowStyles.input}\n          id=\"formula\"\n          type=\"text\"\n          value={item.formula}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n      <div className={tableStyles.label_small}>\n        <input\n          className={rowStyles.input}\n          id=\"caliber\"\n          type=\"text\"\n          value={item.caliber}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={tableStyles.label_small}>\n        <input\n          className={rowStyles.input}\n          id=\"packing\"\n          type=\"text\"\n          value={item.packing}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={tableStyles.label_medium}>\n        <input\n          className={rowStyles.input}\n          id=\"price\"\n          onKeyPress={onKeyPressForNumberInput}\n          value={item.price}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={tableStyles.label_medium}>\n        <input\n          className={rowStyles.input}\n          id=\"customer_price\"\n          onKeyPress={onKeyPressForNumberInput}\n          value={item.customer_price}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={tableStyles.label_medium}>\n        <input\n          className={rowStyles.input}\n          id=\"barcode\"\n          type=\"text\"\n          value={item.barcode}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={tableStyles.label_large}>\n        <input\n          className={rowStyles.input}\n          id=\"indication\"\n          style={{ overflow: \"none\", fontSize: \"0.7rem\" }}\n          value={item.indication}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={tableStyles.label_large}>\n        <input\n          className={rowStyles.input}\n          id=\"composition\"\n          style={{ overflow: \"none\", fontSize: \"0.7rem\" }}\n          value={item.composition}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <label className={tableStyles.label_xsmall}>\n        <div\n          className={[\n            generalStyles.icon,\n            generalStyles.fc_red,\n            generalStyles.margin_h_auto,\n          ].join(\" \")}\n          onClick={() => onDelete()}\n        >\n          <AiFillDelete size={16} />\n          <p className={generalStyles.tooltip}>{t(\"delete-row\")}</p>\n        </div>\n      </label>\n    </div>\n  );\n}\n\nexport default ItemExcelRow;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react icons\nimport { AiFillDelete } from \"react-icons/ai\";\nimport {\n  MdOutlineCheckBoxOutlineBlank,\n  MdOutlineCheckBox,\n  MdOutlineIndeterminateCheckBox,\n} from \"react-icons/md\";\n\nimport TableHeader from \"../table-header/table-header.component\";\n\nimport tableStyles from \"../table.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\nimport { Colors } from \"../../utils/constants\";\n\nfunction ExcelTableHeader({\n  deleteAllItem,\n  selectValue,\n  itemsSelectionChange,\n}) {\n  const { t } = useTranslation();\n  return (\n    <TableHeader>\n      <label className={tableStyles.label_xsmall}>\n        <div onClick={itemsSelectionChange}>\n          {selectValue === \"all\" && (\n            <MdOutlineCheckBox size={24} color={Colors.WHITE_COLOR} />\n          )}\n          {selectValue === \"none\" && (\n            <MdOutlineCheckBoxOutlineBlank size={24} />\n          )}\n          {selectValue === \"some\" && (\n            <MdOutlineIndeterminateCheckBox size={24} />\n          )}\n        </div>\n      </label>\n      <label className={tableStyles.label_medium}>{t(\"item-trade-name\")}</label>\n      <label className={tableStyles.label_medium}>{t(\"item-formula\")}</label>\n      <label className={tableStyles.label_small}>{t(\"item-caliber\")}</label>\n      <label className={tableStyles.label_small}>{t(\"item-packing\")}</label>\n      <label className={tableStyles.label_medium}>{t(\"item-price\")}</label>\n      <label className={tableStyles.label_medium}>\n        {t(\"item-customer-price\")}\n      </label>\n      <label className={tableStyles.label_medium}>{t(\"item-barcode\")}</label>\n      <label className={tableStyles.label_large}>{t(\"item-indication\")}</label>\n      <label className={tableStyles.label_large}>{t(\"item-composition\")}</label>\n      <label className={tableStyles.label_xsmall}>\n        <div\n          className={[\n            generalStyles.icon,\n            generalStyles.fc_red,\n            generalStyles.margin_h_auto,\n          ].join(\" \")}\n          onClick={deleteAllItem}\n        >\n          <AiFillDelete size={16} />\n          <div className={generalStyles.tooltip}>{t(\"delete-all-rows\")}</div>\n        </div>\n      </label>\n    </TableHeader>\n  );\n}\n\nexport default ExcelTableHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"excel-file-criteria_small_font__q5ibF\",\"header\":\"excel-file-criteria_header__l0IPf\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Colors } from \"../../utils/constants\";\nimport TableHeader from \"../table-header/table-header.component\";\n\nimport tableStyles from \"../table.module.scss\";\nimport styles from \"./excel-file-criteria.module.scss\";\n\nfunction ExcelFileCriteria({ action }) {\n  const { t } = useTranslation();\n  return (\n    <>\n      <p className={styles.header}>\n        {t(\"excel-file-should-contains-this-columns\")}\n      </p>\n      <TableHeader>\n        {action === \"update\" && (\n          <label className={tableStyles.label_medium}>_id</label>\n        )}\n        <label className={tableStyles.label_medium}>name</label>\n        <label className={tableStyles.label_medium}>formula</label>\n        <label className={tableStyles.label_medium}>caliber</label>\n        <label className={tableStyles.label_medium}>packing</label>\n        <label className={tableStyles.label_medium}>price</label>\n        <label className={tableStyles.label_medium}>customer_price</label>\n        <label className={tableStyles.label_medium}>barcode</label>\n        <label className={tableStyles.label_medium}>indication</label>\n        <label className={tableStyles.label_medium}>composition</label>\n      </TableHeader>\n      <p>{t(\"excel-file-warning\")}</p>\n      <p\n        style={{\n          color: Colors.SUCCEEDED_COLOR,\n          fontSize: \"1.2rem\",\n        }}\n      >\n        {t(\"required-criteria\")}\n      </p>\n      <ul\n        style={{\n          marginInlineStart: \"30px\",\n        }}\n      >\n        {action === \"update\" && <li>{t(\"required-id-criteria\")}</li>}\n        <li>{t(\"required-name-criteria\")}</li>\n        <li>{t(\"required-price-criteria\")}</li>\n        <li>{t(\"required-customer-price-criteria\")}</li>\n      </ul>\n    </>\n  );\n}\n\nexport default ExcelFileCriteria;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"item-excel-card_small_font__Z-Yo2\",\"card_container\":\"item-excel-card_card_container__Yr2by\",\"error\":\"item-excel-card_error__1HvZe\",\"actions\":\"item-excel-card_actions__do4xO\",\"row\":\"item-excel-card_row__LaB8y\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// icons\nimport { AiFillDelete } from \"react-icons/ai\";\n\n// styles\nimport styles from \"./item-excel-card.module.scss\";\n\n// constants\nimport { Colors, onKeyPressForNumberInput } from \"../../utils/constants\";\nimport Icon from \"../action-icon/action-icon.component\";\n\nfunction ItemExcelRow({\n  item,\n  index,\n  onchange,\n  onDelete,\n  onSelectedChanged,\n  withUpdate,\n}) {\n  const { t } = useTranslation();\n\n  const error =\n    item.name === \"\" ||\n    item.price * 1 === 0 ||\n    item.customer_price * 1 === 0 ||\n    (withUpdate === true && item._id === null);\n\n  return (\n    <div\n      className={[styles.card_container, error ? styles.error : \"\"].join(\" \")}\n    >\n      <div className={styles.actions}>\n        <input\n          type=\"checkbox\"\n          value={item.selected}\n          checked={item.selected}\n          onChange={() => onSelectedChanged(index)}\n        />\n        <Icon\n          selected={false}\n          foreColor={Colors.FAILED_COLOR}\n          tooltip={t(\"delete-row\")}\n          onclick={onDelete}\n          icon={() => <AiFillDelete size={16} />}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label>{t(\"item-name\")}:</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          value={item.name}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label>{t(\"item-name-ar\")}:</label>\n        <input\n          id=\"nameAr\"\n          type=\"text\"\n          value={item.nameAr}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label>{t(\"item-formula\")}:</label>\n        <input\n          id=\"formula\"\n          type=\"text\"\n          value={item.formula}\n          onChange={(e) => onchange(e, index)}\n        />\n        <label>{t(\"item-caliber\")}:</label>\n        <input\n          id=\"caliber\"\n          type=\"text\"\n          value={item.caliber}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label>{t(\"item-price\")}:</label>\n        <input\n          id=\"price\"\n          onKeyPress={onKeyPressForNumberInput}\n          value={item.price}\n          onChange={(e) => onchange(e, index)}\n        />\n        <label>{t(\"item-customer-price\")}:</label>\n        <input\n          id=\"customer_price\"\n          onKeyPress={onKeyPressForNumberInput}\n          value={item.customer_price}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label>{t(\"item-barcode\")}:</label>\n        <input\n          id=\"barcode\"\n          type=\"text\"\n          value={item.barcode}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label>{t(\"item-indication\")}:</label>\n        <textarea\n          id=\"indication\"\n          value={item.indication}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label>{t(\"item-composition\")}:</label>\n        <textarea\n          id=\"composition\"\n          value={item.composition}\n          onChange={(e) => onchange(e, index)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ItemExcelRow;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"item-excel-page_small_font__X-ZKC\",\"loading\":\"item-excel-page_loading__lrQ0E\",\"excel_icon\":\"item-excel-page_excel_icon__214TH\",\"icon\":\"item-excel-page_icon__ygFus\",\"actions\":\"item-excel-page_actions__0hGGY\",\"basic_details_container\":\"item-excel-page_basic_details_container__Qs+hZ\",\"row\":\"item-excel-page_row__GuyAC\",\"label\":\"item-excel-page_label__0X+D2\",\"name\":\"item-excel-page_name__HUPoG\",\"separator\":\"item-excel-page_separator__o1Wco\",\"checkbox_div\":\"item-excel-page_checkbox_div__BgZPt\"};","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport * as XLSX from \"xlsx\";\n\n// components\nimport InputFile from \"../../components/input-file/input-file.component\";\nimport ItemExcelRow from \"../../components/item-excel-row/item-excel-row.component\";\nimport Modal from \"../../components/modal/modal.component\";\nimport Toast from \"../../components/toast/toast.component\";\nimport ExcelTableHeader from \"../../components/excel-table-header/excel-table-header.component\";\nimport Header from \"../../components/header/header.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport ExcelFileCriteria from \"../../components/excel-file-criteria/excel-file-criteria.component\";\nimport ItemExcelCard from \"../../components/item-excel-card/item-excel-card.component\";\n\n// icons\nimport {\n  MdEditNote,\n  MdOutlineCheckBox,\n  MdOutlineCheckBoxOutlineBlank,\n  MdOutlineIndeterminateCheckBox,\n} from \"react-icons/md\";\nimport { RiPlayListAddFill } from \"react-icons/ri\";\nimport { AiFillDelete } from \"react-icons/ai\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectToken, selectUser } from \"../../redux/auth/authSlice\";\nimport {\n  addItems,\n  resetAddStatus,\n  resetStatus,\n  selectItems,\n} from \"../../redux/items/itemsSlices\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// styles\nimport styles from \"./item-excel-page.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors, toEnglishNumber } from \"../../utils/constants\";\n\nfunction ItemExcelPage() {\n  const user = useSelector(selectUser);\n\n  const location = useLocation();\n  const { companyId = 0 } = location.state ? location.state : {};\n\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  // selectors\n  const token = useSelector(selectToken);\n  const { addError, addStatus } = useSelector(selectItems);\n  const isOnline = useSelector(selectOnlineStatus);\n\n  // own state\n  const [withUpdate, setWithUpdate] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const [failedMsg, setFailedMsg] = useState(\"\");\n  const [itemsSelectValue, setItemsSelectValue] = useState(\"all\");\n  const [correctItemsCount, setCorrectItemsCount] = useState(0);\n  const [wrongItemsCount, setWrongItemsCount] = useState(0);\n  const [selectedItemsCount, setSelectedItemsCount] = useState(0);\n\n  const calculateCounts = () => {\n    let correctCount = 0;\n    let wrongCount = 0;\n    let selectedCount = 0;\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].selected) {\n        selectedCount += 1;\n      }\n\n      if (\n        !items[i].name ||\n        !items[i].price ||\n        items[i].price * 1 === 0 ||\n        !items[i].customer_price ||\n        items[i].customer_price * 1 === 0 ||\n        (withUpdate && !items[i]._id)\n      ) {\n        wrongCount += 1;\n      } else {\n        correctCount += 1;\n      }\n    }\n\n    setCorrectItemsCount(correctCount);\n    setWrongItemsCount(wrongCount);\n    setSelectedItemsCount(selectedCount);\n  };\n\n  const fileChanged = (file) => {\n    // if file is null\n    if (!file) return;\n\n    setLoading(true);\n\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    reader.onload = (e) => {\n      const bstr = e.target.result;\n\n      const wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n\n      const wsname = wb.SheetNames[0];\n\n      const ws = wb.Sheets[wsname];\n\n      const data = XLSX.utils.sheet_to_json(ws);\n\n      const completeData = data.map((d) => {\n        let obj = {\n          ...d,\n          _id: d._id ? d._id : null,\n          selected: true,\n          company: companyId,\n          isActive: true,\n        };\n\n        if (!d.name) {\n          obj = {\n            ...obj,\n            name: \"\",\n            selected: false,\n          };\n        }\n\n        if (!d.nameAr) {\n          obj = {\n            ...obj,\n            nameAr: \"\",\n          };\n        }\n\n        if (!d.price) {\n          obj = {\n            ...obj,\n            price: 0,\n            selected: false,\n          };\n        }\n\n        if (!d.customer_price) {\n          obj = {\n            ...obj,\n            customer_price: 0,\n            selected: false,\n          };\n        }\n\n        if (!d.caliber) {\n          obj = {\n            ...obj,\n            caliber: \"\",\n          };\n        }\n\n        if (!d.packing) {\n          obj = {\n            ...obj,\n            packing: \"\",\n          };\n        }\n\n        if (!d.composition) {\n          obj = {\n            ...obj,\n            composition: \"\",\n          };\n        }\n\n        if (!d.barcode) {\n          obj = {\n            ...obj,\n            barcode: \"\",\n          };\n        }\n\n        if (!d.indication) {\n          obj = {\n            ...obj,\n            indication: \"\",\n          };\n        }\n\n        return obj;\n      });\n\n      setItems(completeData);\n      setFileName(file.name.split(\".\")[0]);\n    };\n\n    if (rABS) reader.readAsBinaryString(file);\n    else reader.readAsArrayBuffer(file);\n\n    setLoading(false);\n    calculateCounts();\n  };\n\n  const addOrUpdateHandler = () => {\n    setShowConfirmModal(false);\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    let rightItem = [];\n    let wrongItems = [];\n    let unSelectedItems = [];\n\n    for (let item of items) {\n      if (item.selected) {\n        if (\n          !item.name ||\n          !item.price ||\n          !item.customer_price ||\n          (withUpdate && !item._id)\n        ) {\n          wrongItems.push(item);\n        } else {\n          rightItem.push(item);\n        }\n      } else {\n        unSelectedItems.push(item);\n      }\n    }\n\n    if (rightItem.length > 0) {\n      dispatch(\n        addItems({\n          obj: rightItem,\n          token,\n          withUpdate: withUpdate ? \"addUpdate\" : \"add\",\n        })\n      )\n        .then(unwrapResult)\n        .then(() => {\n          setSuccessMsg(`${t(\"inserted-items\")}: ${rightItem.length}`);\n          setFailedMsg(`${t(\"wrong-items\")}: ${wrongItems.length}`);\n          setShowModal(true);\n          setItems([...wrongItems, ...unSelectedItems]);\n          checkItemsSelectionStatus([...wrongItems, ...unSelectedItems]);\n          dispatch(resetStatus());\n        })\n        .catch(() => {});\n    } else {\n    }\n  };\n\n  const handleInputChange = (e, index) => {\n    const updatedItems = items.map((item, i) => {\n      if (index === i) {\n        // if there is an error set the selection of the item to false\n        let newSelection = item.selected;\n        if (item.selected) {\n          newSelection =\n            item.name === \"\" ||\n            item.price * 1 === 0 ||\n            item.customer_price * 1 === 0;\n        }\n\n        return {\n          ...item,\n          [e.target.id]:\n            e.target.id === \"price\" || e.target.id === \"customer_price\"\n              ? toEnglishNumber(e.target.value)\n              : e.target.value,\n          selected: newSelection,\n        };\n      } else {\n        return {\n          ...item,\n        };\n      }\n    });\n\n    setItems(updatedItems);\n\n    checkItemsSelectionStatus(updatedItems);\n\n    calculateCounts();\n  };\n\n  const selectedChangeHandler = (index) => {\n    const updatedItems = items.map((item, i) => {\n      if (index === i) {\n        return {\n          ...item,\n          selected: !item.selected,\n        };\n      } else {\n        return {\n          ...item,\n        };\n      }\n    });\n\n    setItems(updatedItems);\n    checkItemsSelectionStatus(updatedItems);\n    calculateCounts();\n  };\n\n  const itemsSelectionChangeHandler = () => {\n    if (itemsSelectValue === \"all\") {\n      setItemsSelectValue(\"none\");\n      const updatedItems = items.map((item) => {\n        return {\n          ...item,\n          selected: false,\n        };\n      });\n\n      setItems(updatedItems);\n    }\n\n    if (itemsSelectValue === \"none\" || itemsSelectValue === \"some\") {\n      setItemsSelectValue(\"all\");\n\n      const updatedItems = items.map((item) => {\n        return {\n          ...item,\n          selected: true,\n        };\n      });\n\n      setItems(updatedItems);\n\n      checkItemsSelectionStatus(updatedItems);\n    }\n\n    calculateCounts();\n  };\n\n  const handleDeleteItem = (index) => {\n    const updatedItems = items.filter((item, i) => index !== i);\n    setItems(updatedItems);\n    calculateCounts();\n  };\n\n  const checkItemsSelectionStatus = (updatedItems) => {\n    let itemsSelectedCount = 0;\n\n    updatedItems.forEach((item) => {\n      if (item.selected === true) {\n        itemsSelectedCount++;\n      }\n    });\n\n    if (itemsSelectedCount === updatedItems.length) setItemsSelectValue(\"all\");\n    else if (itemsSelectedCount === 0) setItemsSelectValue(\"none\");\n    else setItemsSelectValue(\"some\");\n\n    calculateCounts();\n  };\n\n  useEffect(() => {\n    calculateCounts();\n  }, [items]);\n\n  return user && companyId !== 0 ? (\n    <>\n      <Header>\n        <h2>\n          {items.length === 0\n            ? t(\"add-or-update-items\")\n            : withUpdate\n            ? t(\"update-items\")\n            : t(\"add-items\")}{\" \"}\n        </h2>\n      </Header>\n      <div className={generalStyles.container_with_header}>\n        <div className={styles.actions}>\n          {items.length > 0 ? (\n            <>\n              <div className={styles.basic_details_container}>\n                <div className={styles.row}>\n                  <label className={styles.label}>{t(\"file-name\")}: </label>\n                  <label className={styles.name}>{fileName}</label>\n                </div>\n\n                <div className={styles.row}>\n                  <label className={styles.label}>{t(\"items-count\")}:</label>\n                  <label className={styles.name}>{items.length}</label>\n                </div>\n\n                <div className={styles.row}>\n                  <label className={styles.label}>\n                    {t(\"correct-items-count\")}:\n                  </label>\n                  <label className={styles.name}>{correctItemsCount}</label>\n                </div>\n\n                <div className={styles.row}>\n                  <label className={styles.label}>\n                    {t(\"wrong-items-count\")}:\n                  </label>\n                  <label className={styles.name}>{wrongItemsCount}</label>\n                </div>\n\n                <div className={styles.row}>\n                  <label className={styles.label}>\n                    {t(\"selected-items-count\")}:\n                  </label>\n                  <label className={styles.name}>{selectedItemsCount}</label>\n                </div>\n\n                <div className={styles.actions}>\n                  <div\n                    className={styles.checkbox_div}\n                    onClick={itemsSelectionChangeHandler}\n                  >\n                    {itemsSelectValue === \"all\" && (\n                      <MdOutlineCheckBox size={24} color={Colors.MAIN_COLOR} />\n                    )}\n                    {itemsSelectValue === \"none\" && (\n                      <MdOutlineCheckBoxOutlineBlank size={24} />\n                    )}\n                    {itemsSelectValue === \"some\" && (\n                      <MdOutlineIndeterminateCheckBox size={24} />\n                    )}\n                  </div>\n                  {withUpdate ? (\n                    <Icon\n                      selected={false}\n                      foreColor={Colors.MAIN_COLOR}\n                      tooltip={t(\"update-items\")}\n                      onclick={() => {\n                        setShowConfirmModal(true);\n                      }}\n                      icon={() => <MdEditNote />}\n                      withBackground={true}\n                    />\n                  ) : (\n                    <Icon\n                      selected={false}\n                      foreColor={Colors.MAIN_COLOR}\n                      tooltip={t(\"add-items\")}\n                      onclick={() => {\n                        setShowConfirmModal(true);\n                      }}\n                      icon={() => <RiPlayListAddFill />}\n                      withBackground={true}\n                    />\n                  )}\n\n                  <InputFile small={true} fileChangedHandler={fileChanged} />\n                  <Icon\n                    selected={false}\n                    foreColor={Colors.FAILED_COLOR}\n                    tooltip={t(\"delete-all-rows\")}\n                    onclick={() => setItems([])}\n                    icon={() => <AiFillDelete />}\n                    withBackground={true}\n                  />\n                </div>\n              </div>\n            </>\n          ) : null}\n        </div>\n\n        {loading && <Loader allowCancel={false} />}\n\n        {items.length === 0 && (\n          <>\n            <InputFile\n              fileChangedHandler={(file) => {\n                setWithUpdate(false);\n                fileChanged(file);\n              }}\n              label=\"choose-file-to-add-items\"\n              action={false}\n            />\n\n            <ExcelFileCriteria action=\"add\" />\n\n            <div className={styles.separator}></div>\n\n            <InputFile\n              fileChangedHandler={(file) => {\n                setWithUpdate(true);\n                fileChanged(file);\n              }}\n              label=\"choose-file-to-update-items\"\n              action={true}\n            />\n            <ExcelFileCriteria action=\"update\" />\n          </>\n        )}\n\n        {/* {items.length > 0 ? (\n          <ExcelTableHeader\n            deleteAllItem={() => setItems([])}\n            selectValue={itemsSelectValue}\n            itemsSelectionChange={itemsSelectionChangeHandler}\n          />\n        ) : null} */}\n\n        {items.length > 0 &&\n          items.map((item, index) => (\n            <div key={index}>\n              <ItemExcelCard\n                onDelete={() => handleDeleteItem(index)}\n                onchange={handleInputChange}\n                onSelectedChanged={selectedChangeHandler}\n                key={index}\n                item={item}\n                index={index}\n                withUpdate={withUpdate}\n              />\n            </div>\n          ))}\n\n        {showModal && (\n          <Modal\n            header=\"add-items\"\n            cancelLabel=\"close-label\"\n            closeModal={() => setShowModal(false)}\n            small={true}\n          >\n            <p>{successMsg}</p>\n            <p>{failedMsg}</p>\n          </Modal>\n        )}\n\n        {showConfirmModal && (\n          <Modal\n            header=\"add-items\"\n            cancelLabel=\"cancel-label\"\n            okLabel=\"ok-label\"\n            okModal={() => addOrUpdateHandler()}\n            closeModal={() => setShowConfirmModal(false)}\n            small={true}\n          >\n            {withUpdate ? (\n              <p>{t(\"insert-update-items-msg\")}</p>\n            ) : (\n              <p>{t(\"insert-items-msg\")}</p>\n            )}\n          </Modal>\n        )}\n\n        {addStatus === \"loading\" && <Loader allowCancel={false} />}\n\n        {addError && (\n          <Toast\n            bgColor={Colors.FAILED_COLOR}\n            foreColor=\"#fff\"\n            toastText={t(addError)}\n            actionAfterTimeout={() => {\n              dispatch(resetAddStatus());\n            }}\n          />\n        )}\n      </div>\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default ItemExcelPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"table_small_font__bV+Nb\",\"label_small\":\"table_label_small__8-3Up\",\"label_xsmall\":\"table_label_xsmall__F3kmN\",\"label_medium\":\"table_label_medium__gVQ8c\",\"label_large\":\"table_label_large__Yk8HG\",\"center\":\"table_center__+B6kl\",\"underline\":\"table_underline__PZHMx\",\"hide_on_small\":\"table_hide_on_small__uIAcl\",\"hide_on_medium\":\"table_hide_on_medium__HgYD8\"};"],"names":["children","history","useHistory","className","styles","onclick","goBack","icon","foreColor","Colors","fileChangedHandler","small","label","t","useTranslation","inputFileRef","React","handleClick","event","current","click","selected","tooltip","size","withBackground","style","marginBlockEnd","color","accept","ref","type","onChange","uploadedFile","target","files","display","action","tableStyles","fontSize","marginInlineStart","item","index","onchange","onDelete","onSelectedChanged","withUpdate","error","name","price","customer_price","_id","join","value","checked","id","e","nameAr","formula","caliber","onKeyPress","onKeyPressForNumberInput","barcode","indication","composition","user","useSelector","selectUser","location","useLocation","state","companyId","dispatch","useDispatch","token","selectToken","selectItems","addError","addStatus","isOnline","selectOnlineStatus","useState","setWithUpdate","showModal","setShowModal","showConfirmModal","setShowConfirmModal","fileName","setFileName","items","setItems","loading","setLoading","successMsg","setSuccessMsg","failedMsg","setFailedMsg","itemsSelectValue","setItemsSelectValue","correctItemsCount","setCorrectItemsCount","wrongItemsCount","setWrongItemsCount","selectedItemsCount","setSelectedItemsCount","calculateCounts","correctCount","wrongCount","selectedCount","i","length","fileChanged","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","completeData","map","d","obj","company","isActive","packing","split","readAsArrayBuffer","handleInputChange","updatedItems","newSelection","toEnglishNumber","checkItemsSelectionStatus","selectedChangeHandler","itemsSelectedCount","forEach","useEffect","generalStyles","onClick","allowCancel","filter","handleDeleteItem","header","cancelLabel","closeModal","okLabel","okModal","rightItem","wrongItems","unSelectedItems","push","addItems","then","unwrapResult","resetStatus","catch","changeOnlineMsg","addOrUpdateHandler","bgColor","toastText","actionAfterTimeout","resetAddStatus","to"],"sourceRoot":""}