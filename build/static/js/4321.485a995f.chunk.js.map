{"version":3,"file":"static/js/4321.485a995f.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/button-with-icon/button-with-icon.module.scss?5371","components/button-with-icon/button-with-icon.component.jsx","components/no-content/no-content.component.jsx","webpack://pharmacy-frontend/./src/components/partner-card/partner-card.module.scss?dc0e","components/partner-card/partner-card.component.jsx","components/search-container/search-container.component.jsx","webpack://pharmacy-frontend/./src/components/search-input/search-input.module.scss?50a3","components/search-input/search-input.component.jsx","components/warehouses-header/warehouses-header.component.jsx","pages/warehouses-page/warehouses-page.component.jsx","webpack://pharmacy-frontend/./src/components/search-container/search-container.module.scss?b7db"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"button-with-icon_small_font__s-Vix\",\"button\":\"button-with-icon_button__Yrwl2\"};","// button component\n\n// Props\n// action: handler to execute when click the button\n// text: label of the button\n// bgColor: button's background color\n// tooltip: text to show when hover over the button\n// loading: boolean to indicates if the loading icon show or not\n// icon\n\nimport React, { useState } from \"react\";\nimport { Colors } from \"../../utils/constants\";\n\n// styles\nimport styles from \"./button-with-icon.module.scss\";\n\n// constants\n\nfunction ButtonWithIcon({ action, text, bgColor, icon, smallText }) {\n  const [hover, setHover] = useState(false);\n\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n\n  return (\n    <div\n      className={styles.button}\n      onClick={action}\n      style={{\n        border: `1px solid ${bgColor}`,\n        backgroundColor: hover ? bgColor : Colors.WHITE_COLOR,\n        color: hover ? Colors.WHITE_COLOR : bgColor,\n      }}\n      onMouseEnter={toggleHover}\n      onMouseLeave={toggleHover}\n    >\n      <p style={{ padding: \"10px\" }}>{text}</p>\n      {icon && icon()}\n    </div>\n  );\n}\n\nexport default ButtonWithIcon;\n","import React from \"react\";\n\nimport generalStyles from \"../../style.module.scss\";\nimport NoContentImage from \"../../no-content.jpeg\";\nimport { Colors } from \"../../utils/constants\";\n\nfunction NoContent({ msg }) {\n  return (\n    <div className={[generalStyles.no_content_div].join(\" \")}>\n      <img\n        src={NoContentImage}\n        alt=\"thumb\"\n        style={{\n          width: \"150px\",\n          height: \"150px\",\n        }}\n      />\n\n      <p\n        style={{\n          color: Colors.MAIN_COLOR,\n        }}\n      >\n        {msg}\n      </p>\n    </div>\n  );\n}\n\nexport default NoContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"partner-card_small_font__B6atq\",\"partner_container\":\"partner-card_partner_container__VB59l\",\"full_width\":\"partner-card_full_width__CUiS6\",\"partner_logo\":\"partner-card_partner_logo__zh12g\",\"partner_name\":\"partner-card_partner_name__jXB4j\",\"from_top\":\"partner-card_from_top__OssbS\",\"name\":\"partner-card_name__xgWNa\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Logo from \"../../logo.png\";\n\n// components\nimport Button from \"../button/button.component\";\nimport ButtonWithIcon from \"../button-with-icon/button-with-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { FaHandshake, FaHandshakeSlash } from \"react-icons/fa\";\n\n// redux-stuff\nimport { useSelector } from \"react-redux\";\nimport {\n  selectFavoritesPartners,\n  selectFavoritesError,\n} from \"../../redux/favorites/favoritesSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\n\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./partner-card.module.scss\";\n\n// constants and utils\nimport {\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\nfunction PartnerCard({\n  partner,\n  fullWidth,\n  addPartnerToFavoriteHandler,\n  addCompanyToOurCompaniesHandler,\n  removePartnerFromFavoriteHandler,\n  removeCompanyFromOurCompaniesHandler,\n  partnerRowClickHandler,\n}) {\n  const { t } = useTranslation();\n\n  // selectors\n  const {\n    settings: { showWarehouseItem },\n  } = useSelector(selectSettings);\n  const favorites = useSelector(selectFavoritesPartners);\n  const favoritesError = useSelector(selectFavoritesError);\n  const { user } = useSelector(selectUserData);\n\n  // determine if the partner can see the medicines in specific warehouse\n  const allowShowingWarehouseMedicines =\n    user.type === UserTypeConstants.ADMIN ||\n    partner.type === UserTypeConstants.COMPANY ||\n    (partner.type === UserTypeConstants.WAREHOUSE &&\n      showWarehouseItem &&\n      partner.allowShowingMedicines);\n\n  return (\n    <div\n      className={[\n        styles.partner_container,\n        fullWidth ? styles.full_width : \"\",\n      ].join(\" \")}\n    >\n      <p className={styles.partner_name}>{partner.name}</p>\n\n      {partner.logo_url?.length > 0 ? (\n        <img\n          src={`${SERVER_URL}/profiles/${partner.logo_url}`}\n          className={styles.partner_logo}\n          alt=\"thumb\"\n        />\n      ) : (\n        <img src={Logo} className={styles.partner_logo} alt=\"thumb\" />\n      )}\n\n      <div className={styles.from_top}>\n        {favoritesError === \"\" ? (\n          <div\n            className={[generalStyles.icon, generalStyles.fc_yellow].join(\" \")}\n          >\n            {favorites &&\n            favorites.map((favorite) => favorite._id).includes(partner._id) ? (\n              <AiFillStar\n                size={24}\n                onClick={removePartnerFromFavoriteHandler}\n              />\n            ) : (\n              <AiOutlineStar size={24} onClick={addPartnerToFavoriteHandler} />\n            )}\n          </div>\n        ) : null}\n\n        {user.type === UserTypeConstants.WAREHOUSE &&\n        partner.type === UserTypeConstants.COMPANY ? (\n          <div>\n            {user.ourCompanies.includes(partner._id) ? (\n              <ButtonWithIcon\n                text={t(\"remove-company-from-warehouse-tooltip\")}\n                action={removeCompanyFromOurCompaniesHandler}\n                bgColor={Colors.FAILED_COLOR}\n                icon={() => <FaHandshakeSlash size={24} />}\n              />\n            ) : (\n              <ButtonWithIcon\n                text={t(\"add-company-to-warehouse-tooltip\")}\n                action={addCompanyToOurCompaniesHandler}\n                bgColor={Colors.SUCCEEDED_COLOR}\n                icon={() => <FaHandshake size={24} />}\n              />\n            )}\n          </div>\n        ) : (\n          <></>\n        )}\n\n        {(partner.type === UserTypeConstants.COMPANY ||\n          (partner.type === UserTypeConstants.WAREHOUSE &&\n            user.type !== UserTypeConstants.WAREHOUSE)) && (\n          <div>\n            <Button\n              action={() =>\n                partnerRowClickHandler(allowShowingWarehouseMedicines)\n              }\n              text={t(\"medicines\")}\n              bgColor={Colors.FAILED_COLOR}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PartnerCard;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-icons\nimport { FaFilter } from \"react-icons/fa\";\n\n// styles\nimport styles from \"./search-container.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\nimport Icon from \"../action-icon/action-icon.component\";\n\nfunction SearchContainer({ children, searchAction }) {\n  const { t } = useTranslation();\n\n  let childrenArray = React.Children.toArray(children);\n  const [moreSearchOptions, setMoreSearchOptions] = useState(false);\n\n  return (\n    <div\n      className={[\n        styles.search_container,\n        styles.expanded,\n        moreSearchOptions ? styles.expanded_with_options : \"\",\n      ].join(\" \")}\n    >\n      <div className={styles.expanded_div}>\n        {true && (\n          <>\n            <div style={{ flex: 1 }}>\n              {childrenArray[0]}\n              {moreSearchOptions && childrenArray.length > 1\n                ? childrenArray.map((child, index) => {\n                    if (index > 0) return child;\n                    return null;\n                  })\n                : null}\n\n              {moreSearchOptions && (\n                <button\n                  onClick={() => {\n                    searchAction();\n                    setMoreSearchOptions(false);\n                  }}\n                  style={{\n                    marginBlockStart: \"4px\",\n                    marginInline: \"auto\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    width: \"50%\",\n                  }}\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_main,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              )}\n            </div>\n\n            {childrenArray.length > 1 && (\n              <div\n                style={{\n                  marginInline: \"4px\",\n                  marginLeft: \"4px\",\n                  marginRight: \"4px\",\n                }}\n              >\n                <Icon\n                  onclick={() => setMoreSearchOptions(!moreSearchOptions)}\n                  icon={() => <FaFilter />}\n                />\n              </div>\n            )}\n\n            {childrenArray.length === 1 && (\n              <div\n                className={[generalStyles.icon, generalStyles.margin_h_4].join(\n                  \" \"\n                )}\n                onClick={() => {\n                  searchAction();\n                  setMoreSearchOptions(false);\n                }}\n              >\n                <button\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_secondary,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-input_small_font__t8rxR\",\"input_div\":\"search-input_input_div__4KoDe\",\"icon_close\":\"search-input_icon_close__TC1nF\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nimport styles from \"./search-input.module.scss\";\n\nfunction SearchInput({\n  type,\n  label,\n  id,\n  value,\n  onchange,\n  placeholder,\n  onEnterPress,\n  resetField,\n  onkeyup,\n}) {\n  const { t } = useTranslation();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (onEnterPress) {\n        onEnterPress();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.input_div}>\n      {label && <label htmlFor={id}>{t(label)}</label>}\n\n      <input\n        placeholder={placeholder ? t(`${placeholder}`) : \"\"}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onchange}\n        onKeyPress={handleKeyPress}\n        onKeyUp={onkeyup && onkeyup}\n      />\n      {resetField && value && (\n        <AiFillCloseCircle\n          onClick={() => resetField(id)}\n          className={styles.icon_close}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeDisplayType,\n  changeSearchCity,\n  changeSearchName,\n  resetWarehousePageState,\n  selectWarehousesPageState,\n} from \"../../redux/warehouse/warehousesSlice\";\n\n// components\nimport SearchContainer from \"../search-container/search-container.component\";\nimport SearchInput from \"../search-input/search-input.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport CitiesDropDown from \"../cities-dropdown/cities-dropdown.component\";\n\n// react icons\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore } from \"react-icons/ai\";\nimport { FaListUl } from \"react-icons/fa\";\nimport { VscClearAll } from \"react-icons/vsc\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants and utils\nimport { CitiesName, Colors, UserTypeConstants } from \"../../utils/constants\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\n\nfunction WarehousesHeader({ search, refreshHandler, count, keyUpHandler }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const { searchName, searchCity, displayType } = useSelector(\n    selectWarehousesPageState\n  );\n\n  // when you change the selected city\n  const citiesNameChangeHandler = (val) => {\n    dispatch(changeSearchCity(val));\n  };\n\n  // select card as display type\n  const selectCardDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"card\"));\n  };\n\n  // select list as display type\n  const selectListDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"list\"));\n  };\n\n  return (\n    <>\n      <SearchContainer searchAction={search}>\n        <SearchInput\n          label=\"user-name\"\n          id=\"search-name\"\n          type=\"text\"\n          value={searchName}\n          onchange={(e) => {\n            dispatch(changeSearchName(e.target.value));\n          }}\n          placeholder=\"search-by-warehouse-name\"\n          onEnterPress={search}\n          resetField={() => dispatch(changeSearchName(\"\"))}\n          onkeyup={keyUpHandler}\n        />\n\n        {user.type === UserTypeConstants.ADMIN && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              backgroundColor: Colors.WHITE_COLOR,\n              borderRadius: \"6px\",\n            }}\n          >\n            <CitiesDropDown\n              onSelectionChange={citiesNameChangeHandler}\n              defaultValue={{\n                value: searchCity,\n                label: t(searchCity.toLowerCase()),\n              }}\n              caption=\"user-city\"\n            />\n          </div>\n        )}\n      </SearchContainer>\n\n      {/* action's buttons */}\n      <div\n        className={[generalStyles.actions, generalStyles.margin_v_4].join(\" \")}\n      >\n        {/* refresh */}\n        <Icon\n          foreColor={Colors.MAIN_COLOR}\n          tooltip={t(\"refresh-tooltip\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n          withBackground={true}\n        />\n\n        {/* clear search filter */}\n        {(searchName.length > 0 || searchCity !== CitiesName.ALL) && (\n          <Icon\n            selected={false}\n            foreColor={Colors.MAIN_COLOR}\n            tooltip={t(\"clear-filter-tooltip\")}\n            onclick={() => {\n              dispatch(resetWarehousePageState());\n              refreshHandler();\n            }}\n            icon={() => <VscClearAll />}\n            withBackground={true}\n          />\n        )}\n\n        {/* display card option */}\n        <Icon\n          foreColor={\n            displayType === \"card\" ? Colors.SUCCEEDED_COLOR : Colors.MAIN_COLOR\n          }\n          tooltip={t(\"show-item-as-card-tooltip\")}\n          onclick={selectCardDisplayTypeHandler}\n          icon={() => <AiFillAppstore />}\n          withBackground={true}\n        />\n\n        {/* display list option */}\n        <Icon\n          foreColor={\n            displayType === \"list\" ? Colors.SUCCEEDED_COLOR : Colors.MAIN_COLOR\n          }\n          tooltip={t(\"show-item-as-row-tooltip\")}\n          onclick={selectListDisplayTypeHandler}\n          icon={() => <FaListUl />}\n          withBackground={true}\n        />\n\n        <Icon\n          withBackground={true}\n          tooltip={t(\"go-back\")}\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.MAIN_COLOR}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default WarehousesHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router\";\nimport ReactLoading from \"react-loading\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport PartnerRow from \"../../components/partner-row/partner-row.component\";\nimport PartnerCard from \"../../components/partner-card/partner-card.component\";\nimport Toast from \"../../components/toast/toast.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport WarehousesHeader from \"../../components/warehouses-header/warehouses-header.component\";\nimport ButtonWithIcon from \"../../components/button-with-icon/button-with-icon.component\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getWarehouses,\n  resetWarehouse,\n  selectWarehouses,\n  selectWarehousesPageState,\n  cancelOperation,\n  changeSearchCity,\n  resetWarehousesArray,\n} from \"../../redux/warehouse/warehousesSlice\";\nimport {\n  getFavorites,\n  resetFavorites,\n  selectFavorites,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// constants and utils\nimport {\n  CitiesName,\n  Colors,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// icons\nimport { CgMoreVertical } from \"react-icons/cg\";\n\n// handlers\nimport {\n  addPartnerToFavoriteHandler,\n  partnerRowClickHandler,\n  removePartnerFromFavoriteHandler,\n} from \"../../utils/handlers\";\n\nlet timer;\n\nfunction WarehousePage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { token, user } = useSelector(selectUserData);\n  const { warehouses, count, status } = useSelector(selectWarehouses);\n  const { searchName, searchCity } = useSelector(selectWarehousesPageState);\n  const { displayType } = useSelector(selectWarehousesPageState);\n\n  // select favorites from favoriteSlice\n  const { error: favoriteError } = useSelector(selectFavorites);\n\n  const [favoritesError, setFavoritesError] = useState(favoriteError);\n\n  // handle search\n  const handleSearch = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST ||\n      user.type === UserTypeConstants.WAREHOUSE\n    ) {\n      dispatch(changeSearchCity(user.city));\n    }\n\n    dispatch(\n      getWarehouses({\n        token,\n      })\n    );\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetWarehousesArray());\n    handleSearch();\n  };\n\n  const refreshHandler = () => {\n    dispatch(resetFavorites());\n    dispatch(getFavorites({ token }));\n    dispatch(resetWarehouse());\n    handleSearch();\n  };\n\n  const keyUpHandler = (event) => {\n    if (event.keyCode === 13) return;\n    cancelOperation();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      handleEnterPress();\n    }, 200);\n  };\n\n  useEffect(() => {\n    if (warehouses.length === 0) handleSearch(1);\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user &&\n    (user.type === UserTypeConstants.ADMIN ||\n      user.type === UserTypeConstants.PHARMACY) ? (\n    <div className={generalStyles.container}>\n      <WarehousesHeader\n        count={count}\n        search={handleEnterPress}\n        refreshHandler={refreshHandler}\n        keyUpHandler={keyUpHandler}\n      />\n\n      {count > 0 && (\n        <div className={generalStyles.count}>\n          <span className={generalStyles.label}>{t(\"warehouses-count\")}</span>\n          <span className={generalStyles.count}>{count}</span>\n        </div>\n      )}\n\n      {/* display as list */}\n      {displayType === \"list\" &&\n        warehouses.map((warehouse) => (\n          <PartnerRow\n            key={warehouse._id}\n            partner={warehouse}\n            addPartnerToFavoriteHandler={() =>\n              addPartnerToFavoriteHandler(\n                warehouse,\n                isOnline,\n                dispatch,\n                token,\n                user\n              )\n            }\n            removePartnerFromFavoriteHandler={() => {\n              removePartnerFromFavoriteHandler(\n                warehouse,\n                isOnline,\n                dispatch,\n                token\n              );\n            }}\n            partnerRowClickHandler={(allowShowingWarehouseMedicines) =>\n              partnerRowClickHandler(\n                warehouse,\n                allowShowingWarehouseMedicines,\n                user,\n                dispatch,\n                token,\n                history\n              )\n            }\n          />\n        ))}\n\n      {/* display as card */}\n      {displayType === \"card\" && (\n        <div\n          className={[\n            generalStyles.flex_container,\n            generalStyles.margin_top_10,\n          ].join(\" \")}\n        >\n          {warehouses.map((warehouse) => (\n            <PartnerCard\n              key={warehouse._id}\n              partner={warehouse}\n              addPartnerToFavoriteHandler={() =>\n                addPartnerToFavoriteHandler(\n                  warehouse,\n                  isOnline,\n                  dispatch,\n                  token,\n                  user\n                )\n              }\n              removePartnerFromFavoriteHandler={() => {\n                removePartnerFromFavoriteHandler(\n                  warehouse,\n                  isOnline,\n                  dispatch,\n                  token\n                );\n              }}\n              partnerRowClickHandler={(allowShowingWarehouseMedicines) =>\n                partnerRowClickHandler(\n                  warehouse,\n                  allowShowingWarehouseMedicines,\n                  user,\n                  dispatch,\n                  token,\n                  history\n                )\n              }\n            />\n          ))}\n        </div>\n      )}\n\n      {count > 0 && status !== \"loading\" && (\n        <div className={generalStyles.count}>\n          {warehouses.length} / {count}\n        </div>\n      )}\n\n      {warehouses.length === 0 &&\n        status !== \"loading\" &&\n        searchName.length === 0 &&\n        searchCity === CitiesName.ALL && <NoContent msg={t(\"no-warehouses\")} />}\n\n      {warehouses.length === 0 &&\n        status !== \"loading\" &&\n        (searchName.length !== 0 || searchCity !== CitiesName.ALL) && (\n          <NoContent msg={t(\"no-result-found\")} />\n        )}\n\n      {status === \"loading\" && (\n        <div className={generalStyles.flex_container}>\n          <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n        </div>\n      )}\n\n      {warehouses.length < count && (\n        <div className={generalStyles.flex_container}>\n          <ButtonWithIcon\n            text={t(\"more\")}\n            action={handleMoreResult}\n            bgColor={Colors.SECONDARY_COLOR}\n            icon={() => <CgMoreVertical />}\n          />\n        </div>\n      )}\n\n      {warehouses.length === count && status !== \"loading\" && count !== 0 && (\n        <p\n          className={[generalStyles.center, generalStyles.fc_secondary].join(\n            \" \"\n          )}\n        >\n          {t(\"no-more\")}\n        </p>\n      )}\n\n      {favoritesError && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          actionAfterTimeout={() => {\n            setFavoritesError(\"\");\n          }}\n        >\n          {t(favoriteError)}\n        </Toast>\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n}\n\nexport default WarehousePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-container_small_font__Ha0Xq\",\"search_container\":\"search-container_search_container__6isGM\",\"expanded\":\"search-container_expanded__79n+k\",\"expanded_div\":\"search-container_expanded_div__Hmmm1\",\"checkbox_div\":\"search-container_checkbox_div__RPj5T\"};"],"names":["action","text","bgColor","icon","smallText","useState","hover","setHover","toggleHover","className","styles","onClick","style","border","backgroundColor","Colors","color","onMouseEnter","onMouseLeave","padding","msg","generalStyles","join","src","NoContentImage","alt","width","height","partner","fullWidth","addPartnerToFavoriteHandler","addCompanyToOurCompaniesHandler","removePartnerFromFavoriteHandler","removeCompanyFromOurCompaniesHandler","partnerRowClickHandler","t","useTranslation","showWarehouseItem","useSelector","selectSettings","settings","favorites","selectFavoritesPartners","favoritesError","selectFavoritesError","user","selectUserData","allowShowingWarehouseMedicines","type","UserTypeConstants","allowShowingMedicines","name","logo_url","length","SERVER_URL","Logo","map","favorite","_id","includes","size","ourCompanies","children","searchAction","childrenArray","React","moreSearchOptions","setMoreSearchOptions","flex","child","index","marginBlockStart","marginInline","marginLeft","marginRight","onclick","label","id","value","onchange","placeholder","onEnterPress","resetField","onkeyup","htmlFor","onChange","onKeyPress","event","key","onKeyUp","timer","search","refreshHandler","keyUpHandler","count","history","useHistory","dispatch","useDispatch","selectUser","selectWarehousesPageState","searchName","searchCity","displayType","e","changeSearchName","target","display","justifyContent","borderRadius","onSelectionChange","val","changeSearchCity","defaultValue","toLowerCase","caption","foreColor","tooltip","withBackground","CitiesName","selected","resetWarehousePageState","changeDisplayType","goBack","onSelectedChange","isOnline","selectOnlineStatus","token","selectWarehouses","warehouses","status","favoriteError","selectFavorites","error","setFavoritesError","handleSearch","city","getWarehouses","handleEnterPress","resetWarehousesArray","useEffect","window","scrollTo","cancelOperation","to","resetFavorites","getFavorites","resetWarehouse","keyCode","clearTimeout","setTimeout","warehouse","changeOnlineMsg","actionAfterTimeout"],"sourceRoot":""}