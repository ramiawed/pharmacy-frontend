{"version":3,"file":"static/js/9837.871dd1fe.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","webpack://pharmacy-frontend/./src/components/main-content-container/main-content-container.module.scss?3a38","components/main-content-container/main-content-container.component.jsx","components/baskets-page-header/baskets-page-header.component.jsx","pages/baskets-page/baskets-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../icon/icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ refreshHandler, title, count }) {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <div className={styles.header}>\n      <p>\n        {t(title)}\n        {count ? <span>{count}</span> : \"\"}\n      </p>\n      {refreshHandler && (\n        <Icon\n          selected={false}\n          foreColor={Colors.WHITE_COLOR}\n          tooltip={t(\"refresh\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n        />\n      )}\n      <Icon\n        onclick={() => {\n          history.goBack();\n        }}\n        icon={() => <IoMdArrowRoundBack />}\n        foreColor={Colors.WHITE_COLOR}\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"main_content_container\":\"main-content-container_main_content_container__Aihvg\"};","import React from \"react\";\n\nimport styles from \"./main-content-container.module.scss\";\n\nconst MainContentContainer = ({ children }) => {\n  return <div className={styles.main_content_container}>{children}</div>;\n};\n\nexport default MainContentContainer;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getBaskets,\n  resetBasketsArray,\n} from \"../../redux/baskets/basketsSlice\";\n\n// icons\nimport { MdAddCircle } from \"react-icons/md\";\n\n// components\nimport ActionBar from \"../action-bar/action-bar.component\";\nimport Header from \"../header/header.component\";\nimport Icon from \"../icon/icon.component\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\nfunction BasketPageHeader({ isNew, setIsNew }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { user, token } = useSelector(selectUserData);\n\n  const refreshHandler = () => {\n    dispatch(resetBasketsArray());\n    dispatch(getBaskets({ token }));\n  };\n\n  return (\n    <>\n      <Header title=\"nav baskets\" refreshHandler={refreshHandler} />\n\n      <ActionBar>\n        {!isNew && (\n          <>\n            {user.type !== UserTypeConstants.PHARMACY && (\n              <Icon\n                selected={false}\n                foreColor={Colors.MAIN_COLOR}\n                tooltip={t(\"new\")}\n                onclick={() => {\n                  setIsNew(true);\n                }}\n                icon={() => <MdAddCircle size={24} />}\n                withBackground={true}\n              />\n            )}\n          </>\n        )}\n      </ActionBar>\n    </>\n  );\n}\n\nexport default BasketPageHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router-dom\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  cancelOperation,\n  getBaskets,\n  selectBaskets,\n} from \"../../redux/baskets/basketsSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport MainContentContainer from \"../../components/main-content-container/main-content-container.component\";\nimport BasketPageHeader from \"../../components/baskets-page-header/baskets-page-header.component\";\nimport CenterContainer from \"../../components/center-container/center-container.component\";\nimport CylonLoader from \"../../components/cylon-loader/cylon-loader.component\";\nimport ButtonWithIcon from \"../../components/button-with-icon/button-with-icon.component\";\nimport NoMoreResult from \"../../components/no-more-result/no-more-result.component\";\nimport ResultsCount from \"../../components/results-count/results-count.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Basket from \"../../components/basket/basket.component\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\n// icons\nimport { CgMoreVertical } from \"react-icons/cg\";\n\nconst BasketsPage = ({ onSelectedChange }) => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const { status, baskets, count } = useSelector(selectBaskets);\n\n  const [isNew, setIsNew] = useState(false);\n\n  const handleSearch = () => {\n    dispatch(getBaskets({ token }));\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch();\n  };\n\n  useEffect(() => {\n    if (baskets.length === 0) handleSearch();\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user.type === UserTypeConstants.ADMIN ||\n    user.type === UserTypeConstants.PHARMACY ||\n    user.type === UserTypeConstants.WAREHOUSE ? (\n    <>\n      <BasketPageHeader isNew={isNew} setIsNew={setIsNew} />\n\n      <MainContentContainer>\n        {count > 0 && !isNew && (\n          <ResultsCount label={t(\"baskets count\")} count={count} />\n        )}\n        <div>\n          {isNew ? (\n            <Basket setIsNew={setIsNew} editable={true} />\n          ) : (\n            baskets.map((basket) => (\n              <Basket\n                basket={basket}\n                key={basket._id}\n                editable={user.type !== UserTypeConstants.PHARMACY}\n              />\n            ))\n          )}\n        </div>\n      </MainContentContainer>\n\n      {count === 0 && status !== \"loading\" && !isNew && (\n        <NoContent msg={t(\"no basket to order\")} />\n      )}\n\n      {status === \"loading\" && <CylonLoader />}\n\n      {baskets.length < count && (\n        <CenterContainer>\n          <ButtonWithIcon\n            text={t(\"more\")}\n            action={handleMoreResult}\n            bgColor={Colors.LIGHT_COLOR}\n            icon={() => <CgMoreVertical />}\n          />\n        </CenterContainer>\n      )}\n\n      {baskets.length === count &&\n        status !== \"loading\" &&\n        count !== 0 &&\n        !isNew && <NoMoreResult msg={t(\"no more\")} />}\n    </>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default BasketsPage;\n"],"names":["refreshHandler","title","count","history","useHistory","t","useTranslation","className","styles","selected","foreColor","Colors","tooltip","onclick","icon","goBack","children","isNew","setIsNew","dispatch","useDispatch","useSelector","selectUserData","user","token","resetBasketsArray","getBaskets","type","UserTypeConstants","size","withBackground","onSelectedChange","isOnline","selectOnlineStatus","selectBaskets","status","baskets","useState","handleSearch","useEffect","length","window","scrollTo","cancelOperation","label","editable","map","basket","_id","msg","text","action","changeOnlineMsg","bgColor","to"],"sourceRoot":""}