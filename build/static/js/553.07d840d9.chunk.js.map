{"version":3,"file":"static/js/553.07d840d9.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/medicine-row/medicine-row.module.scss?6c37","components/medicine-row/medicine-row.component.jsx","components/search-container/search-container.component.jsx","webpack://pharmacy-frontend/./src/components/search-input/search-input.module.scss?50a3","components/search-input/search-input.component.jsx","webpack://pharmacy-frontend/./src/components/medicines-search-string/medicines-search-string.module.scss?3bd3","components/medicines-search-string/medicines-search-string.component.jsx","webpack://pharmacy-frontend/./src/components/medicine-card/medicine-card.module.scss?db2c","components/medicine-card/medicine-card.component.jsx","webpack://pharmacy-frontend/./src/pages/medicines-page/medicines-page.module.scss?8f14","pages/medicines-page/medicines-page.component.jsx","webpack://pharmacy-frontend/./src/components/search-container/search-container.module.scss?b7db"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"medicine-row_small_font__+8ZUj\",\"item_row\":\"medicine-row_item_row__fiqmL\",\"first_row\":\"medicine-row_first_row__zInzm\",\"nameDiv\":\"medicine-row_nameDiv__yCJbp\",\"nameAr\":\"medicine-row_nameAr__PH3PI\",\"item_name\":\"medicine-row_item_name__TskTd\",\"icon\":\"medicine-row_icon__0jmIa\",\"second_row\":\"medicine-row_second_row__xXAjz\",\"item_company\":\"medicine-row_item_company__fgt3Z\",\"item_price\":\"medicine-row_item_price__3+zHe\",\"item_customer_price\":\"medicine-row_item_customer_price__Ez3J+\",\"separator\":\"medicine-row_separator__7e7N1\",\"details_row\":\"medicine-row_details_row__Xo7IX\",\"label\":\"medicine-row_label__qFkQg\",\"value\":\"medicine-row_value__AY-+G\",\"offer_div\":\"medicine-row_offer_div__xsflQ\",\"loading\":\"medicine-row_loading__y9F-W\",\"loading-move\":\"medicine-row_loading-move__QXYWk\",\"ribbon_2\":\"medicine-row_ribbon_2__Jed9U\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// react-redux stuff\nimport { addStatistics } from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport Toast from \"../toast/toast.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle, MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { BsFillBookmarkPlusFill, BsFillBookmarkDashFill } from \"react-icons/bs\";\n\n// styles\nimport styles from \"./medicine-row.module.scss\";\n\n// constants and utils\nimport {\n  checkItemExistsInWarehouse,\n  checkOffer,\n  Colors,\n  UserTypeConstants,\n} from \"../../utils/constants\";\nimport {\n  addSavedItem,\n  removeSavedItem,\n  selectSavedItems,\n} from \"../../redux/savedItems/savedItemsSlice\";\n\nfunction MedicineRow({ item }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const favoritesItems = useSelector(selectFavoritesItems);\n  const { savedItems } = useSelector(selectSavedItems);\n\n  // own state\n  const [showModal, setShowModal] = useState(false);\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeSaveItemLoading, setChangeSaveItemLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n  const [addItemToCart, setAddItemToCart] = useState(\"\");\n  const [expanded, setExpanded] = useState(false);\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(addFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetItem: item._id,\n              action: \"item-added-to-favorite\",\n            },\n            token,\n          })\n        );\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(removeFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  // method to handle add item to user's savedItem\n  const addItemToSavedItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeSaveItemLoading(true);\n\n    dispatch(addSavedItem({ obj: { savedItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeSaveItemLoading(false);\n      })\n      .catch(() => {\n        setChangeSaveItemLoading(false);\n      });\n  };\n\n  const removeItemFromSavedItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeSaveItemLoading(true);\n\n    dispatch(removeSavedItem({ obj: { savedItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeSaveItemLoading(false);\n      })\n      .catch(() => {\n        setChangeSaveItemLoading(false);\n      });\n  };\n\n  const rowClickHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        addStatistics({\n          obj: {\n            sourceUser: user._id,\n            targetItem: item._id,\n            action: \"choose-item\",\n          },\n          token,\n        })\n      );\n    }\n    history.push(\"/item\", {\n      from: user.type,\n      type: \"info\",\n      allowAction: false,\n      itemId: item._id,\n      companyId: item.company._id,\n      warehouseId: user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n    });\n  };\n\n  // render method\n  return (\n    <>\n      <div className={styles.item_row} onClick={rowClickHandler}>\n        {checkOffer(item, user) && <div className={styles.offer_div}></div>}\n        <div className={styles.first_row}>\n          <label className={[styles.item_name].join(\" \")}>\n            <label\n              className={styles.icon}\n              onClick={(e) => {\n                setExpanded(!expanded);\n                e.stopPropagation();\n              }}\n            >\n              {expanded ? <MdExpandLess /> : <MdExpandMore />}\n            </label>\n            <div className={styles.nameDiv}>\n              <label>{item.name}</label>\n              <label className={styles.nameAr}>{item.nameAr}</label>\n            </div>\n          </label>\n\n          {changeAddToWarehouseLoading ? (\n            <Icon\n              text={t(\"\")}\n              onclick={() => {}}\n              foreColor={Colors.SECONDARY_COLOR}\n              icon={() => <VscLoading className={styles.loading} />}\n            />\n          ) : (\n            user.type === UserTypeConstants.WAREHOUSE &&\n            (item.warehouses.map((w) => w.warehouse._id).includes(user._id) ? (\n              <Icon\n                text={t(\"remove-from-warehouse-tooltip\")}\n                onclick={removeItemFromWarehouseHandler}\n                foreColor={Colors.FAILED_COLOR}\n                icon={() => <RiDeleteBin5Fill size={24} />}\n              />\n            ) : (\n              <Icon\n                text={t(\"add-to-warehouse-tooltip\")}\n                onclick={addItemToWarehouseHandler}\n                foreColor={Colors.SUCCEEDED_COLOR}\n                icon={() => <MdAddCircle size={24} />}\n              />\n            ))\n          )}\n\n          {user.type === UserTypeConstants.PHARMACY ? (\n            checkItemExistsInWarehouse(item, user) ? (\n              <Icon\n                text={t(\"add-to-cart\")}\n                onclick={() => setShowModal(true)}\n                foreColor={Colors.SUCCEEDED_COLOR}\n                icon={() => <GiShoppingCart size={24} />}\n              />\n            ) : changeSaveItemLoading ? (\n              <Icon\n                text={t(\"\")}\n                onclick={() => {}}\n                foreColor={Colors.YELLOW_COLOR}\n                icon={() => <VscLoading className={styles.loading} />}\n              />\n            ) : savedItems.map((si) => si._id).includes(item._id) ? (\n              <Icon\n                tooltip={t(\"remove-item-from-saved-items-tooltip\")}\n                onclick={removeItemFromSavedItemsHandler}\n                foreColor={Colors.FAILED_COLOR}\n                icon={() => <BsFillBookmarkDashFill size={24} />}\n              />\n            ) : (\n              <Icon\n                tooltip={t(\"add-item-to-saved-items-tooltip\")}\n                onclick={addItemToSavedItemsHandler}\n                foreColor={Colors.SUCCEEDED_COLOR}\n                icon={() => <BsFillBookmarkPlusFill size={24} />}\n              />\n            )\n          ) : (\n            <></>\n          )}\n\n          {changeFavoriteLoading ? (\n            <Icon\n              text={t(\"\")}\n              onclick={() => {}}\n              foreColor={Colors.YELLOW_COLOR}\n              icon={() => <VscLoading className={styles.loading} />}\n            />\n          ) : favoritesItems\n              .map((favorite) => favorite._id)\n              .includes(item._id) ? (\n            <Icon\n              text={t(\"remove-from-favorite-tooltip\")}\n              onclick={removeItemFromFavoritesItemsHandler}\n              foreColor={Colors.YELLOW_COLOR}\n              icon={() => <AiFillStar size={24} />}\n            />\n          ) : (\n            <Icon\n              text={t(\"add-to-favorite-tooltip\")}\n              onclick={addItemToFavoriteItemsHandler}\n              foreColor={Colors.YELLOW_COLOR}\n              icon={() => <AiOutlineStar size={24} />}\n            />\n          )}\n        </div>\n\n        <div className={styles.second_row}>\n          <label className={styles.item_company}>{item.company.name}</label>\n          {user.type !== UserTypeConstants.GUEST && (\n            <label className={styles.item_price}>{item.price}</label>\n          )}\n          <label className={styles.item_customer_price}>\n            {item.customer_price}\n          </label>\n        </div>\n\n        {expanded && (\n          <>\n            <div className={styles.separator}></div>\n            <div className={styles.details_row}>\n              <label className={styles.label}>{t(\"item-packing\")}:</label>\n              <label className={styles.value}>{item.packing}</label>\n            </div>\n            <div className={styles.details_row}>\n              <label className={styles.label}>{t(\"item-caliber\")}:</label>\n              <label className={styles.value}>{item.caliber}</label>\n            </div>\n            <div className={styles.details_row}>\n              <label className={styles.label}>{t(\"item-composition\")}:</label>\n              <label className={styles.value}>{item.composition}</label>\n            </div>\n          </>\n        )}\n      </div>\n\n      {showModal && (\n        <AddToCartModal\n          item={item}\n          close={() => setShowModal(false)}\n          setAddItemToCartMsg={setAddItemToCart}\n          fromSavedItems={true}\n        />\n      )}\n\n      {addItemToCart.length > 0 && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addItemToCart)}\n          actionAfterTimeout={() => setAddItemToCart(\"\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default MedicineRow;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-icons\nimport { FaFilter } from \"react-icons/fa\";\n\n// styles\nimport styles from \"./search-container.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\nimport Icon from \"../action-icon/action-icon.component\";\n\nfunction SearchContainer({ children, searchAction }) {\n  const { t } = useTranslation();\n\n  let childrenArray = React.Children.toArray(children);\n  const [moreSearchOptions, setMoreSearchOptions] = useState(false);\n\n  return (\n    <div\n      className={[\n        styles.search_container,\n        styles.expanded,\n        moreSearchOptions ? styles.expanded_with_options : \"\",\n      ].join(\" \")}\n    >\n      <div className={styles.expanded_div}>\n        {true && (\n          <>\n            <div style={{ flex: 1 }}>\n              {childrenArray[0]}\n              {moreSearchOptions && childrenArray.length > 1\n                ? childrenArray.map((child, index) => {\n                    if (index > 0) return child;\n                    return null;\n                  })\n                : null}\n\n              {moreSearchOptions && (\n                <button\n                  onClick={() => {\n                    searchAction();\n                    setMoreSearchOptions(false);\n                  }}\n                  style={{\n                    marginBlockStart: \"4px\",\n                    marginInline: \"auto\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    width: \"50%\",\n                  }}\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_main,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              )}\n            </div>\n\n            {childrenArray.length > 1 && (\n              <div\n                style={{\n                  marginInline: \"4px\",\n                  marginLeft: \"4px\",\n                  marginRight: \"4px\",\n                }}\n              >\n                <Icon\n                  onclick={() => setMoreSearchOptions(!moreSearchOptions)}\n                  icon={() => <FaFilter />}\n                />\n              </div>\n            )}\n\n            {childrenArray.length === 1 && (\n              <div\n                className={[generalStyles.icon, generalStyles.margin_h_4].join(\n                  \" \"\n                )}\n                onClick={() => {\n                  searchAction();\n                  setMoreSearchOptions(false);\n                }}\n              >\n                <button\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_secondary,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-input_small_font__t8rxR\",\"input_div\":\"search-input_input_div__4KoDe\",\"icon_close\":\"search-input_icon_close__TC1nF\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nimport styles from \"./search-input.module.scss\";\n\nfunction SearchInput({\n  type,\n  label,\n  id,\n  value,\n  onchange,\n  placeholder,\n  onEnterPress,\n  resetField,\n  onkeyup,\n}) {\n  const { t } = useTranslation();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (onEnterPress) {\n        onEnterPress();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.input_div}>\n      {label && <label htmlFor={id}>{t(label)}</label>}\n\n      <input\n        placeholder={placeholder ? t(`${placeholder}`) : \"\"}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onchange}\n        onKeyPress={handleKeyPress}\n        onKeyUp={onkeyup && onkeyup}\n      />\n      {resetField && value && (\n        <AiFillCloseCircle\n          onClick={() => resetField(id)}\n          className={styles.icon_close}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default SearchInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"medicines-search-string_small_font__rBJm8\",\"div_search_str\":\"medicines-search-string_div_search_str__VtrHq\",\"label\":\"medicines-search-string_label__-AfzZ\",\"value\":\"medicines-search-string_value__TyoDg\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nimport styles from \"./medicines-search-string.module.scss\";\n\nfunction MedicinesSearchString({ pageState, user }) {\n  const { t } = useTranslation();\n  return (\n    <div className={styles.div_search_str}>\n      {pageState.searchName && (\n        <>\n          <label className={styles.label}>{t(\"item-name\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchName}</label>\n        </>\n      )}\n\n      {pageState.searchCompanyName && (\n        <>\n          <label className={styles.label}>{t(\"item-company\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchCompanyName}</label>\n        </>\n      )}\n\n      {pageState.searchWarehouseName && (\n        <>\n          <label className={styles.label}>{t(\"item-warehouse\")}:</label>{\" \"}\n          <label className={styles.value}>\n            {pageState.searchWarehouseName}\n          </label>\n        </>\n      )}\n\n      {pageState.searchInWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchInWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-out-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-out-warehouse\")}</label>\n        )}\n    </div>\n  );\n}\n\nexport default MedicinesSearchString;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"medicine-card_small_font__azgsm\",\"partner_container\":\"medicine-card_partner_container__yb2zQ\",\"icons_div\":\"medicine-card_icons_div__dj+FN\",\"offer_icon\":\"medicine-card_offer_icon__lDsfJ\",\"logo_div\":\"medicine-card_logo_div__7a5ID\",\"logo\":\"medicine-card_logo__pqunT\",\"company_name\":\"medicine-card_company_name__DCc1K\",\"content\":\"medicine-card_content__k4Bsz\",\"showed_content\":\"medicine-card_showed_content__Eme5w\",\"main_details\":\"medicine-card_main_details__+dyxr\",\"name\":\"medicine-card_name__xKz0J\",\"secondRow\":\"medicine-card_secondRow__YTM3x\",\"nameAr\":\"medicine-card_nameAr__vTika\",\"price\":\"medicine-card_price__igMZ1\",\"customer_price\":\"medicine-card_customer_price__cIsWM\",\"info\":\"medicine-card_info__XYxwi\",\"label\":\"medicine-card_label__5HNDN\",\"value\":\"medicine-card_value__0jzw9\",\"ribbon_2\":\"medicine-card_ribbon_2__HnyT2\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Logo from \"../../logo.png\";\n\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { BsFillBookmarkPlusFill, BsFillBookmarkDashFill } from \"react-icons/bs\";\n\n// redux-stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addStatistics } from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./medicine-card.module.scss\";\n\n// constants and utils\nimport {\n  checkItemExistsInWarehouse,\n  checkOffer,\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\nimport {\n  addSavedItem,\n  removeSavedItem,\n  selectSavedItems,\n} from \"../../redux/savedItems/savedItemsSlice\";\nimport { BiListMinus, BiListPlus } from \"react-icons/bi\";\n\nfunction MedicineCard({ companyItem }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const favorites = useSelector(selectFavoritesItems);\n  const { savedItems } = useSelector(selectSavedItems);\n\n  const [showModal, setShowModal] = useState(false);\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeSaveItemLoading, setChangeSaveItemLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      addFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetItem: companyItem._id,\n              action: \"item-added-to-favorite\",\n            },\n          })\n        );\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      removeFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    e.stopPropagation();\n  };\n\n  // method to handle add item to user's savedItem\n  const addItemToSavedItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeSaveItemLoading(true);\n\n    dispatch(addSavedItem({ obj: { savedItemId: companyItem._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeSaveItemLoading(false);\n      })\n      .catch(() => {\n        setChangeSaveItemLoading(false);\n      });\n  };\n\n  const removeItemFromSavedItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeSaveItemLoading(true);\n\n    dispatch(removeSavedItem({ obj: { savedItemId: companyItem._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeSaveItemLoading(false);\n      })\n      .catch(() => {\n        setChangeSaveItemLoading(false);\n      });\n  };\n\n  const dispatchStatisticsHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        addStatistics({\n          obj: {\n            sourceUser: user._id,\n            targetItem: companyItem._id,\n            action: \"choose-item\",\n          },\n          token,\n        })\n      );\n    }\n  };\n\n  return (\n    <div\n      className={[styles.partner_container].join(\" \")}\n      onClick={() => {\n        dispatchStatisticsHandler();\n\n        history.push(\"item\", {\n          from: user.type,\n          type: \"info\",\n          allowAction: false,\n          itemId: companyItem._id,\n          companyId: companyItem.company._id,\n          warehouseId:\n            user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n        });\n      }}\n    >\n      {checkOffer(companyItem, user) && (\n        <div className={[styles.ribbon_2].join(\" \")}>\n          <span>{t(\"offer\")}</span>\n        </div>\n      )}\n      <div className={styles.company_name}>{companyItem.company.name}</div>\n      <div\n        style={{\n          flex: 1,\n        }}\n      >\n        <div className={styles.icons_div}>\n          {changeAddToWarehouseLoading ? (\n            <Icon\n              icon={() => (\n                <VscLoading className={generalStyles.loading} size={24} />\n              )}\n              onclick={() => {}}\n              foreColor={Colors.SECONDARY_COLOR}\n            />\n          ) : (\n            user.type === UserTypeConstants.WAREHOUSE &&\n            (companyItem.warehouses\n              .map((w) => w.warehouse._id)\n              .includes(user._id) ? (\n              <Icon\n                icon={() => <RiDeleteBin5Fill size={24} />}\n                onclick={removeItemFromWarehouseHandler}\n                tooltip={t(\"remove-from-warehouse-tooltip\")}\n                foreColor={Colors.FAILED_COLOR}\n              />\n            ) : (\n              <Icon\n                icon={() => <MdAddCircle size={24} />}\n                onclick={addItemToWarehouseHandler}\n                tooltip={t(\"add-to-warehouse-tooltip\")}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            ))\n          )}\n\n          {user.type === UserTypeConstants.PHARMACY ? (\n            checkItemExistsInWarehouse(companyItem, user) ? (\n              <Icon\n                icon={() => <GiShoppingCart size={24} />}\n                onclick={() => setShowModal(true)}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            ) : changeSaveItemLoading ? (\n              <Icon\n                text={t(\"\")}\n                onclick={() => {}}\n                foreColor={Colors.YELLOW_COLOR}\n                icon={() => <VscLoading className={styles.loading} />}\n              />\n            ) : savedItems.map((si) => si._id).includes(companyItem._id) ? (\n              <Icon\n                tooltip={t(\"remove-item-from-saved-items-tooltip\")}\n                onclick={removeItemFromSavedItemsHandler}\n                foreColor={Colors.FAILED_COLOR}\n                icon={() => <BsFillBookmarkDashFill size={24} />}\n              />\n            ) : (\n              <Icon\n                tooltip={t(\"add-item-to-saved-items-tooltip\")}\n                onclick={addItemToSavedItemsHandler}\n                foreColor={Colors.SUCCEEDED_COLOR}\n                icon={() => <BsFillBookmarkPlusFill size={24} />}\n              />\n            )\n          ) : (\n            <></>\n          )}\n\n          {changeFavoriteLoading ? (\n            <Icon\n              icon={() => (\n                <VscLoading className={generalStyles.loading} size={24} />\n              )}\n              onclick={() => {}}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : favorites\n              .map((favorite) => favorite._id)\n              .includes(companyItem._id) ? (\n            <Icon\n              icon={() => <AiFillStar size={24} />}\n              onclick={removeItemFromFavoritesItems}\n              tooltip={t(\"remove-from-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : (\n            <Icon\n              icon={() => <AiOutlineStar size={24} />}\n              onclick={addItemToFavoriteItems}\n              tooltip={t(\"add-to-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          )}\n        </div>\n\n        <div className={styles.logo_div}>\n          {companyItem.logo_url && companyItem.logo_url !== \"\" ? (\n            <img\n              src={`${SERVER_URL}/items/${companyItem.logo_url}`}\n              className={styles.logo}\n              alt=\"thumb\"\n            />\n          ) : (\n            <img src={Logo} className={styles.logo} alt=\"thumb\" />\n          )}\n        </div>\n\n        <div className={styles.content}>\n          <div className={[styles.showed_content].join(\" \")}>\n            <div className={styles.main_details}>\n              <label className={styles.name}>{companyItem.name}</label>\n              <div className={styles.secondRow}>\n                <label className={styles.nameAr}>{companyItem.nameAr}</label>\n\n                {user.type !== UserTypeConstants.GUEST && (\n                  <div className={styles.price}>\n                    <label>{companyItem.price}</label>\n                  </div>\n                )}\n                <div className={styles.price}>\n                  <label className={styles.customer_price}>\n                    {companyItem.customer_price}\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-formula\")}:</label>\n              <label className={styles.value}>{companyItem.formula}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-packing\")}:</label>\n              <label className={styles.value}>{companyItem.packing}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-caliber\")}:</label>\n              <label className={styles.value}>{companyItem.caliber}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-composition\")}:</label>\n              <label className={styles.value}>{companyItem.composition}</label>\n            </div>\n          </div>\n\n          <div className={styles.behind_content}></div>\n        </div>\n      </div>\n\n      {showModal && (\n        <AddToCartModal item={companyItem} close={() => setShowModal(false)} />\n      )}\n    </div>\n  );\n}\n\nexport default MedicineCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"medicines-page_small_font__MhHK2\",\"selectDiv\":\"medicines-page_selectDiv__cqz1e\"};","import React, { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router\";\nimport ReactLoading from \"react-loading\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\n// components\nimport SearchContainer from \"../../components/search-container/search-container.component\";\nimport SearchInput from \"../../components/search-input/search-input.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\nimport MedicinesSearchString from \"../../components/medicines-search-string/medicines-search-string.component\";\nimport MedicineRow from \"../../components/medicine-row/medicine-row.component\";\nimport ButtonWithIcon from \"../../components/button-with-icon/button-with-icon.component\";\nimport MedicineCard from \"../../components/medicine-card/medicine-card.component\";\nimport SelectCustom from \"../../components/select/select.component\";\n\n// react-icons\nimport { FaSearch, FaListUl } from \"react-icons/fa\";\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore } from \"react-icons/ai\";\nimport { VscClearAll } from \"react-icons/vsc\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { CgMoreVertical } from \"react-icons/cg\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getMedicines,\n  selectMedicines,\n  cancelOperation,\n  setSearchName,\n  setSearchCompanyName,\n  setSearchWarehouseName,\n  setSearchInWarehouse,\n  setSearchOutWarehouse,\n  setCity,\n  setDisplayType,\n  resetMedicinesArray,\n  resetMedicinesPageState,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport searchContainerStyles from \"../../components/search-container/search-container.module.scss\";\nimport styles from \"./medicines-page.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\nlet timer = null;\n\nfunction MedicinesPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const companiesOptions = [\n    { value: \"\", label: t(\"all-companies\") },\n    ...location.state.myCompanies.map((c) => {\n      return { value: c._id, label: c.name };\n    }),\n  ];\n\n  // selectors\n  const { token, user } = useSelector(selectUserData);\n  const { medicines, count, status, pageState } = useSelector(selectMedicines);\n\n  const selectedCompany = companiesOptions.find(\n    (c) => c.label === pageState.searchCompanyName\n  );\n\n  const changeCompanySelectionHandler = (val) => {\n    if (val === \"\") {\n      dispatch(setSearchCompanyName(\"\"));\n      handleEnterPress();\n    } else {\n      const selectedCompany = companiesOptions.find((c) => c.value === val);\n      dispatch(setSearchCompanyName(selectedCompany.label));\n      handleEnterPress();\n    }\n  };\n\n  // handle search\n  const handleSearch = () => {\n    if (user.type === UserTypeConstants.PHARMACY) {\n      dispatch(setCity(user.city));\n    } else {\n      dispatch(setCity(\"\"));\n    }\n\n    dispatch(getMedicines({ token }));\n  };\n\n  const handleMoreResult = () => {\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetMedicinesArray());\n    handleSearch();\n  };\n\n  const keyUpHandler = (e) => {\n    cancelOperation();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      dispatch(resetMedicinesArray());\n\n      handleSearch();\n    }, 200);\n  };\n\n  useEffect(() => {\n    if (medicines.length === 0) {\n      handleSearch();\n      window.scrollTo(0, 0);\n    }\n\n    onSelectedChange();\n  }, []);\n\n  return user ? (\n    <>\n      <SearchContainer searchAction={handleEnterPress}>\n        {/* search by medicine name, barcode */}\n        <SearchInput\n          label=\"user-name\"\n          id=\"search-name\"\n          type=\"text\"\n          value={pageState.searchName}\n          onchange={(e) => {\n            dispatch(setSearchName(e.target.value));\n          }}\n          icon={<FaSearch />}\n          placeholder=\"search-by-name-composition-barcode\"\n          onEnterPress={handleEnterPress}\n          resetField={() => {\n            dispatch(setSearchName(\"\"));\n          }}\n          onkeyup={keyUpHandler}\n        />\n\n        {/* search by company name */}\n        {pageState.searchCompanyId === null &&\n          pageState.searchWarehouseId === null && (\n            <SearchInput\n              label=\"item-company\"\n              id=\"item-company\"\n              type=\"text\"\n              value={pageState.searchCompanyName}\n              onchange={(e) => {\n                dispatch(setSearchCompanyName(e.target.value));\n              }}\n              icon={<FaSearch />}\n              placeholder=\"search-by-company-name\"\n              onEnterPress={handleEnterPress}\n              resetField={() => {\n                dispatch(setSearchCompanyName(\"\"));\n              }}\n              onkeyup={keyUpHandler}\n            />\n          )}\n\n        {/* search by warehouse's companies */}\n        {pageState.searchWarehouseId !== null && (\n          <div className={styles.selectDiv}>\n            <label>{t(\"companies\")}</label>\n            <SelectCustom\n              bgColor={Colors.SECONDARY_COLOR}\n              foreColor=\"#fff\"\n              options={companiesOptions}\n              onchange={changeCompanySelectionHandler}\n              defaultOption={\n                selectedCompany\n                  ? selectedCompany\n                  : {\n                      value: \"\",\n                      label: t(\"all-companies\"),\n                    }\n              }\n            />\n          </div>\n        )}\n\n        {pageState.searchWarehouseId === null &&\n          user.type !== UserTypeConstants.GUEST && (\n            <SearchInput\n              label=\"item-warehouse\"\n              id=\"item-warehouse\"\n              type=\"text\"\n              value={pageState.searchWarehouseName}\n              onchange={(e) => {\n                dispatch(setSearchWarehouseName(e.target.value));\n              }}\n              icon={<FaSearch />}\n              placeholder=\"search-by-warehouse-name\"\n              onEnterPress={handleEnterPress}\n              resetField={() => {\n                dispatch(setSearchWarehouseName(\"\"));\n              }}\n              onkeyup={keyUpHandler}\n            />\n          )}\n\n        {user.type !== UserTypeConstants.GUEST && (\n          <div className={searchContainerStyles.checkbox_div}>\n            <input\n              type=\"checkbox\"\n              value={pageState.searchInWarehouse}\n              checked={pageState.searchInWarehouse}\n              onChange={() => {\n                dispatch(setSearchInWarehouse(!pageState.searchInWarehouse));\n                dispatch(setSearchOutWarehouse(false));\n                keyUpHandler();\n              }}\n            />\n            {user.type === UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"warehouse-in-warehouse\")}</label>\n            )}\n            {user.type !== UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"pharmacy-in-warehouse\")}</label>\n            )}\n          </div>\n        )}\n\n        {user.type !== UserTypeConstants.GUEST && (\n          <div className={searchContainerStyles.checkbox_div}>\n            <input\n              type=\"checkbox\"\n              value={pageState.searchOutWarehouse}\n              checked={pageState.searchOutWarehouse}\n              onChange={() => {\n                dispatch(setSearchOutWarehouse(!pageState.searchOutWarehouse));\n                dispatch(setSearchInWarehouse(false));\n                keyUpHandler();\n              }}\n            />\n            {user.type === UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"warehouse-out-warehouse\")}</label>\n            )}\n            {user.type !== UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"pharmacy-out-warehouse\")}</label>\n            )}\n          </div>\n        )}\n      </SearchContainer>\n      <div\n        className={generalStyles.container}\n        style={{\n          marginBlockStart: \"50px\",\n          paddingInlineStart: \"50px\",\n        }}\n      >\n        <MedicinesSearchString pageState={pageState} user={user} />\n\n        <div className={generalStyles.actions}>\n          <Icon\n            withBackground={true}\n            icon={() => <RiRefreshLine />}\n            foreColor={Colors.MAIN_COLOR}\n            tooltip={t(\"refresh-tooltip\")}\n            onclick={handleEnterPress}\n          />\n          {(pageState.searchName.length > 0 ||\n            pageState.searchCompanyName.length > 0 ||\n            pageState.searchWarehouseName.length > 0 ||\n            pageState.searchInWarehouse ||\n            pageState.searchOutWarehouse) && (\n            <Icon\n              withBackground={true}\n              selected={false}\n              foreColor={Colors.MAIN_COLOR}\n              tooltip={t(\"clear-filter-tooltip\")}\n              onclick={() => {\n                dispatch(resetMedicinesPageState());\n                handleEnterPress();\n              }}\n              icon={() => <VscClearAll />}\n            />\n          )}\n\n          <Icon\n            withBackground={true}\n            icon={() => <AiFillAppstore />}\n            foreColor={\n              pageState.displayType === \"card\"\n                ? Colors.SUCCEEDED_COLOR\n                : Colors.MAIN_COLOR\n            }\n            tooltip={t(\"show-item-as-card-tooltip\")}\n            onclick={() => dispatch(setDisplayType(\"card\"))}\n          />\n\n          <Icon\n            withBackground={true}\n            icon={() => <FaListUl />}\n            foreColor={\n              pageState.displayType === \"list\"\n                ? Colors.SUCCEEDED_COLOR\n                : Colors.MAIN_COLOR\n            }\n            tooltip={t(\"show-item-as-row-tooltip\")}\n            onclick={() => dispatch(setDisplayType(\"list\"))}\n          />\n\n          <Icon\n            withBackground={true}\n            tooltip={t(\"go-back\")}\n            onclick={() => {\n              history.goBack();\n            }}\n            icon={() => <IoMdArrowRoundBack />}\n            foreColor={Colors.MAIN_COLOR}\n          />\n        </div>\n\n        {count > 0 && (\n          <div className={generalStyles.count}>\n            <span className={generalStyles.label}>{t(\"items-count\")}</span>\n            <span className={generalStyles.count}>{count}</span>\n          </div>\n        )}\n\n        {pageState.displayType === \"list\" &&\n          medicines.map((medicine) => (\n            <MedicineRow key={medicine._id} item={medicine} />\n          ))}\n\n        {pageState.displayType === \"card\" && (\n          <div\n            className={[\n              generalStyles.flex_container,\n              generalStyles.margin_top_10,\n            ].join(\" \")}\n          >\n            {medicines.map((medicine) => (\n              <MedicineCard key={medicine._id} companyItem={medicine} />\n            ))}\n          </div>\n        )}\n\n        {count > 0 && status !== \"loading\" && (\n          <div className={generalStyles.count}>\n            {medicines.length} / {count}\n          </div>\n        )}\n\n        {medicines.length === 0 &&\n          status !== \"loading\" &&\n          pageState.searchName.length === 0 &&\n          pageState.searchCompanyName.length === 0 &&\n          pageState.searchWarehouseName.length === 0 &&\n          !pageState.searchInWarehouse &&\n          !pageState.searchOutWarehouse && <NoContent msg={t(\"no-items\")} />}\n\n        {medicines.length === 0 &&\n          status !== \"loading\" &&\n          (pageState.searchName.length !== 0 ||\n            pageState.searchCompanyName.length !== 0 ||\n            pageState.searchWarehouseName.length !== 0 ||\n            pageState.searchInWarehouse ||\n            pageState.searchOutWarehouse) && (\n            <NoContent msg={t(\"no-result-found\")} />\n          )}\n\n        {status === \"loading\" && (\n          <div className={generalStyles.flex_container}>\n            <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n          </div>\n        )}\n\n        {medicines.length < count && status !== \"loading\" && (\n          <div className={generalStyles.flex_container}>\n            <ButtonWithIcon\n              text={t(\"more\")}\n              action={handleMoreResult}\n              bgColor={Colors.SECONDARY_COLOR}\n              icon={() => <CgMoreVertical />}\n            />\n          </div>\n        )}\n\n        {medicines.length === count && status !== \"loading\" && count !== 0 && (\n          <p\n            className={[generalStyles.center, generalStyles.fc_secondary].join(\n              \" \"\n            )}\n          >\n            {t(\"no-more\")}\n          </p>\n        )}\n      </div>\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default MedicinesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"search-container_small_font__Ha0Xq\",\"search_container\":\"search-container_search_container__6isGM\",\"expanded\":\"search-container_expanded__79n+k\",\"expanded_div\":\"search-container_expanded_div__Hmmm1\",\"checkbox_div\":\"search-container_checkbox_div__RPj5T\"};"],"names":["item","t","useTranslation","history","useHistory","dispatch","useDispatch","isOnline","useSelector","selectOnlineStatus","selectUserData","user","token","favoritesItems","selectFavoritesItems","savedItems","selectSavedItems","useState","showModal","setShowModal","changeFavoriteLoading","setChangeFavoriteLoading","changeSaveItemLoading","setChangeSaveItemLoading","changeAddToWarehouseLoading","setChangeAddToWarehouseLoading","addItemToCart","setAddItemToCart","expanded","setExpanded","className","styles","onClick","type","UserTypeConstants","addStatistics","obj","sourceUser","_id","targetItem","action","push","from","allowAction","itemId","companyId","company","warehouseId","checkOffer","join","e","stopPropagation","name","nameAr","text","onclick","foreColor","Colors","icon","warehouses","map","w","warehouse","includes","removeItemFromWarehouse","city","then","unwrapResult","catch","changeOnlineMsg","size","addItemToWarehouse","checkItemExistsInWarehouse","si","tooltip","removeSavedItem","savedItemId","addSavedItem","favorite","removeFavoriteItem","favoriteItemId","addFavoriteItem","price","customer_price","packing","caliber","composition","close","setAddItemToCartMsg","fromSavedItems","length","bgColor","toastText","actionAfterTimeout","children","searchAction","childrenArray","React","moreSearchOptions","setMoreSearchOptions","style","flex","child","index","marginBlockStart","marginInline","marginLeft","marginRight","width","generalStyles","label","id","value","onchange","placeholder","onEnterPress","resetField","onkeyup","htmlFor","onChange","onKeyPress","event","key","onKeyUp","pageState","searchName","searchCompanyName","searchWarehouseName","searchInWarehouse","searchOutWarehouse","companyItem","favorites","logo_url","src","SERVER_URL","alt","Logo","formula","timer","onSelectedChange","location","useLocation","companiesOptions","state","myCompanies","c","selectMedicines","medicines","count","status","selectedCompany","find","handleSearch","setCity","getMedicines","handleEnterPress","resetMedicinesArray","keyUpHandler","cancelOperation","clearTimeout","setTimeout","useEffect","window","scrollTo","setSearchName","target","searchCompanyId","searchWarehouseId","setSearchCompanyName","options","val","defaultOption","setSearchWarehouseName","searchContainerStyles","checked","setSearchInWarehouse","setSearchOutWarehouse","paddingInlineStart","withBackground","selected","resetMedicinesPageState","displayType","setDisplayType","goBack","medicine","msg","color","to"],"sourceRoot":""}