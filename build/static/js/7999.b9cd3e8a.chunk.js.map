{"version":3,"file":"static/js/7999.b9cd3e8a.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","webpack://pharmacy-frontend/./src/components/main-content-container/main-content-container.module.scss?3a38","components/main-content-container/main-content-container.component.jsx","webpack://pharmacy-frontend/./src/modals/select-partner-modal/select-partner-modal.module.scss?7b49","modals/select-partner-modal/select-partner-modal.component.jsx","components/advertisement-page-header/advertisement-page-header.component.jsx","webpack://pharmacy-frontend/./src/components/advertisement-card/advertisment-card.module.scss?7c07","components/advertisement-card/advertisement-card.component.jsx","webpack://pharmacy-frontend/./src/modals/select-medicine-modal/select-medicine-modal.module.scss?0948","modals/select-medicine-modal/select-medicine-modal.component.jsx","webpack://pharmacy-frontend/./src/components/new-advertisement/new-advertisement.module.scss?95b4","components/new-advertisement/new-advertisement.component.jsx","pages/advertisements-page/advertisements-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../icon/icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ refreshHandler, title, count }) {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <div className={styles.header}>\n      <p>\n        {t(title)}\n        {count ? <span>{count}</span> : \"\"}\n      </p>\n      {refreshHandler && (\n        <Icon\n          selected={false}\n          foreColor={Colors.WHITE_COLOR}\n          tooltip={t(\"refresh\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n        />\n      )}\n      <Icon\n        onclick={() => {\n          history.goBack();\n        }}\n        icon={() => <IoMdArrowRoundBack />}\n        foreColor={Colors.WHITE_COLOR}\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"main_content_container\":\"main-content-container_main_content_container__Aihvg\"};","import React from \"react\";\n\nimport styles from \"./main-content-container.module.scss\";\n\nconst MainContentContainer = ({ children }) => {\n  return <div className={styles.main_content_container}>{children}</div>;\n};\n\nexport default MainContentContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"select-partner-modal_small_font__dmMS8\",\"search_container\":\"select-partner-modal_search_container__vOBPi\",\"search_input\":\"select-partner-modal_search_input__aSI3L\",\"company_row\":\"select-partner-modal_company_row__Z4ogO\",\"more_btn\":\"select-partner-modal_more_btn__BhuwE\"};","import React, { useEffect, useState, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Icon from \"../../components/icon/icon.component\";\nimport Modal from \"../modal/modal.component\";\n\n// icons\nimport { IoIosSearch } from \"react-icons/io\";\nimport { MdAddCircle } from \"react-icons/md\";\n\n// styles\nimport styles from \"./select-partner-modal.module.scss\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\nfunction SelectPartnerModal({\n  close,\n  chooseAction,\n  header,\n  placeholder,\n  data,\n}) {\n  const { t } = useTranslation();\n  // const token = useSelector(selectToken);\n  const searchInputRef = useRef();\n\n  // own state\n  const [searchName, setSearchName] = useState(\"\");\n  let filteredData = data.filter((d) => {\n    if (searchName.trim().length > 0) {\n      return d.name.includes(searchName.trim());\n    }\n    return true;\n  });\n\n  const select = (data) => {\n    chooseAction(data);\n    close();\n  };\n\n  useEffect(() => {\n    // getData(1);\n    searchInputRef.current.focus();\n  }, []);\n\n  return (\n    <Modal\n      header={t(header)}\n      cancelLabel=\"cancel\"\n      closeModal={close}\n      small={true}\n    >\n      <>\n        <div\n          className={[styles.search_container, \"flex_center_container\"].join(\n            \" \"\n          )}\n        >\n          <IoIosSearch color={Colors.LIGHT_COLOR} size={24} />\n          <input\n            className={styles.search_input}\n            placeholder={t(placeholder)}\n            value={searchName}\n            onChange={(e) => setSearchName(e.target.value)}\n            ref={searchInputRef}\n          />\n        </div>\n\n        <div\n          style={{\n            maxHeight: \"300px\",\n            overflow: \"auto\",\n          }}\n        >\n          {filteredData?.length > 0 &&\n            filteredData.map((d) => (\n              <Row key={d._id} data={d} select={select} />\n            ))}\n\n          {filteredData.length === 0 && searchName.length === 0 && (\n            <NoContent msg={t(\"no result found\")} />\n          )}\n\n          {filteredData.length === 0 && searchName.length !== 0 && (\n            <NoContent msg={t(\"no result found\")} />\n          )}\n        </div>\n      </>\n    </Modal>\n  );\n}\n\nconst Row = ({ data, select }) => {\n  const selectPartner = () => {\n    select(data);\n  };\n\n  return (\n    <div className={styles.company_row}>\n      <p className={styles.company_name}>{data.name}</p>\n\n      <Icon\n        icon={() => <MdAddCircle size={24} />}\n        foreColor={Colors.SUCCEEDED_COLOR}\n        onclick={selectPartner}\n        // withBackground={true}\n        selected={false}\n      />\n    </div>\n  );\n};\n\nexport default SelectPartnerModal;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllAdvertisements } from \"../../redux/advertisements/advertisementsSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\n// icons\nimport { MdAddCircle } from \"react-icons/md\";\n\n// components\nimport ActionBar from \"../action-bar/action-bar.component\";\nimport Header from \"../header/header.component\";\nimport Icon from \"../icon/icon.component\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\nfunction AdvertisementPageHeader({ setIsNew }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const token = useSelector(selectToken);\n\n  const refreshHandler = () => {\n    dispatch(getAllAdvertisements({ token }));\n  };\n\n  return (\n    <>\n      <Header title=\"advertisements\" refreshHandler={refreshHandler} />\n\n      <ActionBar>\n        <Icon\n          selected={false}\n          foreColor={Colors.MAIN_COLOR}\n          tooltip={t(\"new\")}\n          onclick={() => {\n            setIsNew(true);\n          }}\n          icon={() => <MdAddCircle size={24} />}\n          withBackground={true}\n        />\n      </ActionBar>\n    </>\n  );\n}\n\nexport default AdvertisementPageHeader;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"advertisment-card_small_font__zCg7Y\",\"container\":\"advertisment-card_container__JzoDM\",\"content\":\"advertisment-card_content__jySCu\",\"links_container\":\"advertisment-card_links_container__KzBk9\",\"value\":\"advertisment-card_value__Niy0C\",\"img\":\"advertisment-card_img__MmwNf\",\"image\":\"advertisment-card_image__6ftR5\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// icons\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\n\n// redux-stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteAdvertisement } from \"../../redux/advertisements/advertisementsSlice\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\nimport { Colors, SERVER_URL } from \"../../utils/constants\";\n\n// components\nimport Modal from \"../../modals/modal/modal.component\";\nimport Icon from \"../icon/icon.component\";\n\n// styles\nimport styles from \"./advertisment-card.module.scss\";\n\nfunction AdvertisementCard({ advertisement }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const token = useSelector(selectToken);\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const deleteAdvertisementHandler = () => {\n    setShowConfirmModal(false);\n    dispatch(deleteAdvertisement({ id: advertisement._id, token }));\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.content}>\n          <div className={styles.img}>\n            <img\n              src={`${SERVER_URL}/advertisements/${advertisement.logo_url}`}\n              className={styles.image}\n              alt=\"Thumb\"\n            />\n          </div>\n          <div className={styles.links_container}>\n            {advertisement.company && (\n              <p className={styles.value}>{advertisement.company?.name}</p>\n            )}\n\n            {advertisement.warehouse && (\n              <p className={styles.value}>{advertisement.warehouse?.name}</p>\n            )}\n\n            {advertisement.medicine && (\n              <p className={styles.value}>{advertisement.medicine?.name}</p>\n            )}\n\n            {!advertisement.company &&\n              !advertisement.warehouse &&\n              !advertisement.medicine && (\n                <p className={styles.value}>\n                  {t(\"no link to this advertisement\")}\n                </p>\n              )}\n\n            <Icon\n              icon={() => (\n                <RiDeleteBin5Fill color={Colors.FAILED_COLOR} size={24} />\n              )}\n              withBackground={true}\n              onclick={() => {\n                setShowConfirmModal(true);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {showConfirmModal && (\n        <Modal\n          header=\"delete advertisement\"\n          cancelLabel=\"close\"\n          okLabel=\"ok\"\n          closeModal={() => {\n            setShowConfirmModal(false);\n          }}\n          small={true}\n          okModal={deleteAdvertisementHandler}\n          color={Colors.FAILED_COLOR}\n        >\n          <p>{t(\"delete advertisement confirm msg\")}</p>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default AdvertisementCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"select-medicine-modal_small_font__NBxit\",\"search_container\":\"select-medicine-modal_search_container__Vnd6i\",\"search_input\":\"select-medicine-modal_search_input__rwAmq\",\"more_btn\":\"select-medicine-modal_more_btn__s+SmY\",\"item_row\":\"select-medicine-modal_item_row__wFJzR\"};","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\n\n// redux stuff\nimport { useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\n// components\nimport MedicineRow from \"../../components/medicine-row/medicine-row.component\";\nimport CylonLoader from \"../../components/cylon-loader/cylon-loader.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Icon from \"../../components/icon/icon.component\";\nimport Modal from \"../modal/modal.component\";\n\n// icons\nimport { IoIosSearch } from \"react-icons/io\";\nimport { MdAddCircle } from \"react-icons/md\";\n\n// styles\nimport styles from \"./select-medicine-modal.module.scss\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\nlet CancelToken = null;\nlet source = null;\n\nfunction SelectMedicineModal({ close, chooseAction, url }) {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n  const searchInputRef = useRef();\n\n  const [searchName, setSearchName] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(0);\n\n  const keyDownHandler = (event) => {\n    if (event.code === \"Enter\") {\n      getItems(1);\n    }\n\n    if (event.code !== \"Escape\") event.stopPropagation();\n  };\n\n  const keyUpHandler = () => {\n    if (source !== null) {\n      source.cancel(\"cancel\");\n    }\n    getItems(1);\n  };\n\n  const getItems = useCallback(\n    async (p) => {\n      try {\n        setLoading(true);\n        let nameCondition = \"\";\n\n        if (searchName.trim().length > 0) {\n          nameCondition = `&itemName=${searchName.trim()}`;\n        }\n\n        CancelToken = axios.CancelToken;\n        source = CancelToken.source();\n        const response = await axios.get(`${url}&page=${p}${nameCondition}`, {\n          cancelToken: source.token,\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        CancelToken = null;\n        source = null;\n\n        if (p === 1) {\n          setData(response.data.data.items);\n        } else {\n          setData([...data, ...response.data.data.items]);\n        }\n        setCount(response.data.count);\n        setLoading(false);\n        setPage(p + 1);\n      } catch (err) {}\n    },\n    [data, searchName, token, url]\n  );\n\n  const select = (data) => {\n    chooseAction(data);\n    close();\n  };\n\n  useEffect(() => {\n    getItems(1);\n\n    searchInputRef.current.focus();\n  }, []);\n\n  return (\n    <Modal\n      header=\"choose item\"\n      cancelLabel=\"cancel\"\n      closeModal={close}\n      small={true}\n    >\n      <>\n        <div\n          className={[styles.search_container, \"flex_center_container\"].join(\n            \" \"\n          )}\n        >\n          <IoIosSearch color={Colors.LIGHT_COLOR} size={24} />\n          <input\n            className={styles.search_input}\n            placeholder={t(\"search by name composition barcode\")}\n            value={searchName}\n            onChange={(e) => setSearchName(e.target.value)}\n            onKeyDown={keyDownHandler}\n            onKeyUp={keyUpHandler}\n            ref={searchInputRef}\n          />\n        </div>\n\n        <div\n          style={{\n            maxHeight: \"300px\",\n            overflow: \"auto\",\n          }}\n        >\n          {data?.length > 0 &&\n            data.map((d, index) => (\n              <Row key={d._id} data={d} select={select} index={index} />\n            ))}\n\n          {data.length === 0 && searchName.length === 0 && (\n            <NoContent msg={t(\"search-for-item\")} />\n          )}\n\n          {data.length === 0 && searchName.length !== 0 && (\n            <NoContent msg={t(\"search-empty\")} />\n          )}\n        </div>\n\n        {data.length < count && (\n          <button className={styles.more_btn} onClick={() => getItems(page)}>\n            {t(\"more\")}\n          </button>\n        )}\n\n        {loading && <CylonLoader />}\n      </>\n    </Modal>\n  );\n}\n\nconst Row = ({ data, select, index }) => {\n  const selectMedicine = () => {\n    select(data);\n  };\n\n  return (\n    <div className={styles.item_row}>\n      <MedicineRow item={data} index={index} />\n\n      <Icon\n        icon={() => <MdAddCircle size={24} />}\n        foreColor={Colors.SUCCEEDED_COLOR}\n        onclick={selectMedicine}\n        withBackground={true}\n        selected={false}\n      />\n    </div>\n  );\n};\n\nexport default SelectMedicineModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"new-advertisement_small_font__5PGyu\",\"new_advertisement_div\":\"new-advertisement_new_advertisement_div__2EKiP\",\"content\":\"new-advertisement_content__-qzdA\",\"links_container\":\"new-advertisement_links_container__1Oxgf\",\"img\":\"new-advertisement_img__9D4pP\",\"image\":\"new-advertisement_image__uUaUy\",\"links\":\"new-advertisement_links__2xT1r\",\"row\":\"new-advertisement_row__O0lWG\"};","import React, { useState, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addAdvertisement } from \"../../redux/advertisements/advertisementsSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { selectCompanies } from \"../../redux/company/companySlice\";\nimport { selectWarehouses } from \"../../redux/warehouse/warehousesSlice\";\n\n// components\nimport SelectMedicineModal from \"../../modals/select-medicine-modal/select-medicine-modal.component\";\nimport SelectPartnerModal from \"../../modals/select-partner-modal/select-partner-modal.component\";\nimport Modal from \"../../modals/modal/modal.component\";\nimport Toast from \"../toast/toast.component\";\nimport Icon from \"../icon/icon.component\";\n\n// icons\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { BiImage } from \"react-icons/bi\";\n\n// styles\nimport styles from \"./new-advertisement.module.scss\";\n\n// constants\nimport { BASEURL, Colors } from \"../../utils/constants\";\n\nfunction NewAdvertisement({ closeHandler, header }) {\n  const { t } = useTranslation();\n  const inputFileRef = useRef(null);\n  const dispatch = useDispatch();\n\n  //  selectors\n  const { token } = useSelector(selectUserData);\n\n  const { companies } = useSelector(selectCompanies);\n  const { warehouses } = useSelector(selectWarehouses);\n\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [selectedWarehouse, setSelectedWarehouse] = useState(null);\n  const [selectedMedicine, setSelectedMedicine] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showSelectCompanyModal, setShowSelectCompanyModal] = useState(false);\n  const [showSelectWarehouseModal, setShowSelectWarehouseModal] =\n    useState(false);\n  const [showSelectMedicineModal, setShowSelectMedicineModal] = useState(false);\n  const [imageErrorMsg, setImageErrorMsg] = useState(\"\");\n\n  const handleAddImageClick = () => {\n    inputFileRef.current.click();\n  };\n\n  const fileChangedHandler = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      setSelectedImage(e.target.files[0]);\n    }\n  };\n\n  const selectCompanyHandler = (data) => {\n    setSelectedCompany(data);\n    setSelectedWarehouse(null);\n    setSelectedMedicine(null);\n  };\n\n  const selectWarehouseHandler = (data) => {\n    setSelectedWarehouse(data);\n    setSelectedCompany(null);\n    setSelectedMedicine(null);\n  };\n\n  const selectMedicineHandler = (data) => {\n    setSelectedMedicine(data);\n    setSelectedWarehouse(null);\n    setSelectedCompany(null);\n  };\n\n  const addAdvertisementHandler = () => {\n    if (!selectedImage) {\n      setImageErrorMsg(\"choose image msg\");\n      return;\n    }\n\n    if (selectedImage) {\n      const formData = new FormData();\n      formData.append(\"file\", selectedImage);\n      formData.append(\"company\", selectedCompany ? selectedCompany._id : null);\n      formData.append(\n        \"warehouse\",\n        selectedWarehouse ? selectedWarehouse._id : null\n      );\n      formData.append(\n        \"medicine\",\n        selectedMedicine ? selectedMedicine._id : null\n      );\n\n      dispatch(addAdvertisement({ data: formData, token }))\n        .then(unwrapResult)\n        .then(() => closeHandler(false));\n    }\n  };\n\n  return (\n    <Modal\n      header={header}\n      cancelLabel=\"cancel\"\n      closeModal={() => closeHandler(false)}\n      okLabel=\"ok\"\n      okModal={addAdvertisementHandler}\n    >\n      <div className={styles.new_advertisement_div}>\n        <div className={styles.content}>\n          <div className={styles.links}>\n            {/* company */}\n            <ChoosePartnerOrItem\n              selectedObj={selectedCompany}\n              label={t(\"company\")}\n              deleteObj={setSelectedCompany}\n              showSelectedModal={setShowSelectCompanyModal}\n            />\n            {/* warehouse */}\n            <ChoosePartnerOrItem\n              selectedObj={selectedWarehouse}\n              label={t(\"warehouse\")}\n              deleteObj={setSelectedWarehouse}\n              showSelectedModal={setShowSelectWarehouseModal}\n            />\n            {/* item */}\n            <ChoosePartnerOrItem\n              selectedObj={selectedMedicine}\n              label={t(\"item\")}\n              deleteObj={setSelectedMedicine}\n              showSelectedModal={setShowSelectMedicineModal}\n            />\n\n            <div className={styles.row}>\n              <label>{t(\"image\")}:</label>\n              {selectedImage === null ? (\n                <>\n                  <Icon\n                    selected={false}\n                    foreColor={Colors.SUCCEEDED_COLOR}\n                    onclick={handleAddImageClick}\n                    icon={() => <MdAddCircle size={24} />}\n                  />\n                  <div\n                    style={{\n                      display: \"none\",\n                    }}\n                  >\n                    <form encType=\"multipart/form-data\">\n                      <div>\n                        <input\n                          multiple={false}\n                          accept=\"image/*\"\n                          ref={inputFileRef}\n                          type=\"file\"\n                          onChange={fileChangedHandler}\n                          // style={{ display: \"none\" }}\n                        />\n                      </div>\n                    </form>\n                  </div>\n                </>\n              ) : (\n                <Icon\n                  icon={() => <RiDeleteBin5Fill size={24} />}\n                  selected={false}\n                  foreColor={Colors.FAILED_COLOR}\n                  onclick={() => setSelectedImage(null)}\n                />\n              )}\n            </div>\n          </div>\n          <div className={styles.img}>\n            {selectedImage ? (\n              <img\n                src={URL.createObjectURL(selectedImage)}\n                className={styles.image}\n                alt=\"Thumb\"\n              />\n            ) : (\n              <div>\n                <BiImage\n                  size={128}\n                  color={Colors.LIGHT_COLOR}\n                  onClick={handleAddImageClick}\n                  style={{\n                    cursor: \"pointer\",\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {imageErrorMsg && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(imageErrorMsg)}\n          actionAfterTimeout={() => {\n            setImageErrorMsg(\"\");\n          }}\n        />\n      )}\n      {showSelectCompanyModal && (\n        <SelectPartnerModal\n          header=\"choose company\"\n          close={() => setShowSelectCompanyModal(false)}\n          chooseAction={(data) => selectCompanyHandler(data)}\n          data={companies}\n          placeholder=\"enter company name\"\n        />\n      )}\n      {showSelectWarehouseModal && (\n        <SelectPartnerModal\n          header=\"choose warehouse\"\n          close={() => setShowSelectWarehouseModal(false)}\n          chooseAction={(data) => selectWarehouseHandler(data)}\n          data={warehouses}\n          placeholder=\"enter warehouse name\"\n        />\n      )}\n      {showSelectMedicineModal && (\n        <SelectMedicineModal\n          close={() => setShowSelectMedicineModal(false)}\n          chooseAction={(data) => selectMedicineHandler(data)}\n          url={`${BASEURL}/items?limit=15&isActive=true`}\n        />\n      )}\n    </Modal>\n  );\n}\n\nexport default NewAdvertisement;\n\nconst ChoosePartnerOrItem = ({\n  selectedObj,\n  label,\n  showSelectedModal,\n  deleteObj,\n}) => {\n  return (\n    <div className={styles.row}>\n      <label>{label}</label>\n      {selectedObj === null ? (\n        <Icon\n          selected={false}\n          foreColor={Colors.SUCCEEDED_COLOR}\n          onclick={() => {\n            showSelectedModal(true);\n          }}\n          icon={() => <MdAddCircle size={24} />}\n        />\n      ) : (\n        <>\n          <p>{selectedObj.name}</p>\n          <Icon\n            selected={false}\n            foreColor={Colors.FAILED_COLOR}\n            onclick={() => {\n              deleteObj(null);\n            }}\n            icon={() => <RiDeleteBin5Fill size={24} />}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stufff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  cancelOperation,\n  resetError,\n  selectAdvertisements,\n} from \"../../redux/advertisements/advertisementsSlice\";\n\n// components\nimport AdvertisementPageHeader from \"../../components/advertisement-page-header/advertisement-page-header.component\";\nimport MainContentContainer from \"../../components/main-content-container/main-content-container.component\";\nimport AdvertisementCard from \"../../components/advertisement-card/advertisement-card.component\";\nimport NewAdvertisement from \"../../components/new-advertisement/new-advertisement.component\";\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Toast from \"../../components/toast/toast.component\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\nfunction AdvertisementsPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const { status, error, advertisements } = useSelector(selectAdvertisements);\n\n  // own states\n  const [isNew, setIsNew] = useState(false);\n\n  const cancelOperationHandler = () => {\n    cancelOperation();\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n  }, []);\n\n  return (\n    <>\n      <AdvertisementPageHeader isNew={isNew} setIsNew={setIsNew} />\n      <MainContentContainer>\n        {advertisements.length === 0 && !isNew && (\n          <NoContent msg={t(\"no advertisements\")} />\n        )}\n\n        {advertisements.map((adv) => (\n          <AdvertisementCard advertisement={adv} key={adv._id} />\n        ))}\n      </MainContentContainer>\n\n      {status === \"loading\" && (\n        <Loader allowCancel={true} onclick={cancelOperationHandler} />\n      )}\n\n      {error && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(error)}\n          actionAfterTimeout={() => dispatch(resetError())}\n        />\n      )}\n\n      {isNew && (\n        <NewAdvertisement\n          closeHandler={setIsNew}\n          header={\"new advertisement\"}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AdvertisementsPage;\n"],"names":["refreshHandler","title","count","history","useHistory","t","useTranslation","className","styles","selected","foreColor","Colors","tooltip","onclick","icon","goBack","children","Row","data","select","name","size","close","chooseAction","header","placeholder","searchInputRef","useRef","useState","searchName","setSearchName","filteredData","filter","d","trim","length","includes","useEffect","current","focus","cancelLabel","closeModal","small","join","color","value","onChange","e","target","ref","style","maxHeight","overflow","map","_id","msg","setIsNew","dispatch","useDispatch","token","useSelector","selectToken","getAllAdvertisements","withBackground","advertisement","showConfirmModal","setShowConfirmModal","src","SERVER_URL","logo_url","alt","company","warehouse","medicine","okLabel","okModal","deleteAdvertisement","id","CancelToken","source","index","item","url","setData","loading","setLoading","page","setPage","setCount","getItems","useCallback","p","nameCondition","axios","cancelToken","headers","Authorization","response","items","onKeyDown","event","code","stopPropagation","onKeyUp","cancel","onClick","closeHandler","inputFileRef","selectUserData","companies","selectCompanies","warehouses","selectWarehouses","selectedCompany","setSelectedCompany","selectedWarehouse","setSelectedWarehouse","selectedMedicine","setSelectedMedicine","selectedImage","setSelectedImage","showSelectCompanyModal","setShowSelectCompanyModal","showSelectWarehouseModal","setShowSelectWarehouseModal","showSelectMedicineModal","setShowSelectMedicineModal","imageErrorMsg","setImageErrorMsg","handleAddImageClick","click","formData","FormData","append","addAdvertisement","then","unwrapResult","ChoosePartnerOrItem","selectedObj","label","deleteObj","showSelectedModal","display","encType","multiple","accept","type","files","URL","createObjectURL","cursor","bgColor","toastText","actionAfterTimeout","selectCompanyHandler","selectWarehouseHandler","selectMedicineHandler","BASEURL","onSelectedChange","selectAdvertisements","status","error","advertisements","isNew","window","scrollTo","adv","allowCancel","cancelOperation","resetError"],"sourceRoot":""}