{"version":3,"file":"static/js/830.2d6f4dd5.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","components/no-content/no-content.component.jsx","webpack://pharmacy-frontend/./src/components/notification-row/notification-row.module.scss?0ea7","components/notification-row/notification-row.component.jsx","pages/user-notification-page/user-notification-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"header_header__MhatS\",\"back\":\"header_back__wgjRV\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { useHistory } from \"react-router-dom\";\nimport { Colors } from \"../../utils/constants\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ children }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <div className={styles.header}>\n      {children}\n      <div className={styles.back}>\n        <Icon\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.WHITE_COLOR}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport generalStyles from \"../../style.module.scss\";\n\nfunction NoContent({ msg }) {\n  return (\n    <div\n      className={[generalStyles.no_content_div, generalStyles.fc_white].join(\n        \" \"\n      )}\n    >\n      <p className={generalStyles.fc_white}>{msg}</p>\n    </div>\n  );\n}\n\nexport default NoContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"row_container\":\"notification-row_row_container__H9osv\",\"inner_container\":\"notification-row_inner_container__mY+Cj\",\"img\":\"notification-row_img__3B3IG\",\"image\":\"notification-row_image__ziJsf\",\"actions\":\"notification-row_actions__xTxlf\",\"delete\":\"notification-row_delete__Xs7yf\",\"unread\":\"notification-row_unread__wOU2r\",\"row\":\"notification-row_row__pwMuM\",\"body\":\"notification-row_body__FQWd+\",\"header\":\"notification-row_header__yfsGP\",\"unread_icon\":\"notification-row_unread_icon__-5kw9\"};","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNotification } from \"../../redux/notifications/notificationsSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  decreaseUnreadNotificationsCount,\n  setNotificationRead,\n} from \"../../redux/userNotifications/userNotificationsSlice\";\n\n// components\nimport Modal from \"../modal/modal.component\";\n\n// icons\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { BiImage } from \"react-icons/bi\";\nimport { FaBookmark } from \"react-icons/fa\";\n\n// styles\nimport styles from \"./notification-row.module.scss\";\n\n// constants\nimport { Colors, SERVER_URL, UserTypeConstants } from \"../../utils/constants\";\n\nfunction NotificationRow({ notification, index, setSuccessDeletingMsg }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const { token, user } = useSelector(selectUserData);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n  const showNotificationDetails = () => {\n    if (\n      user.type !== UserTypeConstants.ADMIN &&\n      !notification.users.includes(user._id)\n    ) {\n      dispatch(\n        setNotificationRead({ token, notificationId: notification._id })\n      );\n      dispatch(decreaseUnreadNotificationsCount());\n    }\n\n    history.push(`/notification/${notification._id}`);\n  };\n\n  const deleteNotificationHandler = () => {\n    setShowDeleteModal(false);\n    dispatch(deleteNotification({ id: notification._id, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setSuccessDeletingMsg(\"delete-notification-msg\");\n      });\n  };\n\n  return (\n    <div\n      className={[styles.row_container].join(\" \")}\n      style={{\n        animationDuration: (0.3 * index) / 10 + \"s\",\n      }}\n    >\n      <div className={styles.img}>\n        {notification.logo_url !== \"\" ? (\n          <img\n            className={styles.image}\n            src={`${SERVER_URL}/notifications/${notification.logo_url}`}\n            alt=\"thumb\"\n          />\n        ) : (\n          <>\n            <BiImage size={64} color={Colors.SECONDARY_COLOR} />\n          </>\n        )}\n      </div>\n\n      <div className={styles.inner_container} onClick={showNotificationDetails}>\n        <div className={styles.row}>\n          <label>{t(\"header\")}</label>\n          <p className={styles.header}>{notification.header}</p>\n        </div>\n        <div className={styles.row}>\n          <label>{t(\"body\")}</label>\n          <p className={styles.body}>{notification.body}</p>\n        </div>\n\n        {!notification.users.includes(user._id) &&\n          user.type !== UserTypeConstants.ADMIN && (\n            <div className={styles.unread_icon}>\n              <FaBookmark />\n            </div>\n          )}\n      </div>\n\n      {user.type === UserTypeConstants.ADMIN && (\n        <div\n          className={styles.delete}\n          onClick={() => {\n            setShowDeleteModal(true);\n          }}\n        >\n          <RiDeleteBin5Fill size={24} />\n        </div>\n      )}\n\n      {showDeleteModal && (\n        <Modal\n          header=\"delete-notification\"\n          cancelLabel=\"close-label\"\n          okLabel=\"ok-label\"\n          closeModal={() => {\n            setShowDeleteModal(false);\n          }}\n          small={true}\n          okModal={deleteNotificationHandler}\n          color={Colors.FAILED_COLOR}\n        >\n          <p>{t(\"delete-notification-confirm-msg\")}</p>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default NotificationRow;\n","import React, { useEffect } from \"react\";\nimport ReactLoading from \"react-loading\";\n\n// components\nimport Button from \"../../components/button/button.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport NotificationRow from \"../../components/notification-row/notification-row.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport { useTranslation } from \"react-i18next\";\nimport Header from \"../../components/header/header.component\";\nimport {\n  getAllNotifications,\n  getUnreadNotification,\n  resetNotificationsData,\n  selectUserNotifications,\n  setPage,\n  setRefresh,\n} from \"../../redux/userNotifications/userNotificationsSlice\";\n\n// icons\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\nfunction UserNotificationPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const token = useSelector(selectToken);\n  const isOnline = useSelector(selectOnlineStatus);\n  const { status, page, count, userNotifications, refresh, forceRefresh } =\n    useSelector(selectUserNotifications);\n\n  const handleSearch = (page) => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    if (page === 1) {\n      dispatch(resetNotificationsData());\n    }\n    dispatch(setPage(page));\n    dispatch(getAllNotifications({ token }));\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch(page + 1);\n  };\n\n  const refreshHandler = () => {\n    dispatch(setRefresh(true));\n    dispatch(getUnreadNotification({ token }));\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    if (refresh || forceRefresh) {\n      handleSearch(1);\n    }\n  }, [refresh, forceRefresh]);\n\n  return (\n    <>\n      <Header>\n        <h2>{t(\"nav-notifications\")}</h2>\n\n        <div className={generalStyles.refresh_icon}>\n          {/* Refresh */}\n          <Icon\n            selected={false}\n            foreColor={Colors.WHITE_COLOR}\n            tooltip={t(\"refresh-tooltip\")}\n            onclick={() => {\n              refreshHandler();\n            }}\n            icon={() => <RiRefreshLine />}\n          />\n        </div>\n      </Header>\n\n      <div className={generalStyles.container_with_header}>\n        {/* <Notifications /> */}\n\n        <div\n          style={{\n            paddingInline: \"10px\",\n          }}\n        >\n          {userNotifications.map((note, index) => (\n            <NotificationRow key={note._id} notification={note} index={index} />\n          ))}\n        </div>\n\n        {userNotifications.length === 0 && status !== \"loading\" && (\n          <NoContent msg={t(\"no-notifications\")} />\n        )}\n\n        {status === \"loading\" && (\n          <div className={generalStyles.flex_container}>\n            <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n          </div>\n        )}\n\n        {userNotifications.length < count && (\n          <Button\n            text={t(\"more\")}\n            action={handleMoreResult}\n            bgColor={Colors.SECONDARY_COLOR}\n          />\n        )}\n\n        {userNotifications.length === count &&\n          status !== \"loading\" &&\n          count !== 0 && (\n            <p\n              className={[\n                generalStyles.center,\n                generalStyles.fc_secondary,\n              ].join(\" \")}\n            >\n              {t(\"no-more\")}\n            </p>\n          )}\n      </div>\n    </>\n  );\n}\n\nexport default UserNotificationPage;\n"],"names":["children","history","useTranslation","t","useHistory","className","styles","onclick","goBack","icon","foreColor","Colors","msg","generalStyles","join","notification","index","setSuccessDeletingMsg","dispatch","useDispatch","useSelector","selectUserData","token","user","useState","showDeleteModal","setShowDeleteModal","style","animationDuration","logo_url","src","SERVER_URL","alt","size","color","onClick","type","UserTypeConstants","users","includes","_id","setNotificationRead","notificationId","decreaseUnreadNotificationsCount","push","header","body","cancelLabel","okLabel","closeModal","small","okModal","deleteNotification","id","then","unwrapResult","onSelectedChange","selectToken","isOnline","selectOnlineStatus","selectUserNotifications","status","page","count","userNotifications","refresh","forceRefresh","handleSearch","resetNotificationsData","setPage","getAllNotifications","changeOnlineMsg","useEffect","window","scrollTo","selected","tooltip","setRefresh","getUnreadNotification","paddingInline","map","note","length","text","action","bgColor"],"sourceRoot":""}