{"version":3,"file":"static/js/7955.e5dbba24.chunk.js","mappings":"qSAqIA,UAxGA,YAA4E,IAAhDA,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,iBAAkBC,EAAa,EAAbA,UACpDC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEXC,GACVF,EAAAA,EAAAA,IAAYG,EAAAA,IADdC,SAAYF,WAGd,OACE,iCACE,SAAC,KAAD,CACEG,UAAW,CACTC,EAAAA,EAAAA,KACAd,IAAmBe,EAAAA,GAAAA,MAAnB,UAA2CD,EAAAA,EAAAA,UAAoB,IAC/DE,KAAK,KACPC,QAAS,WACPhB,EAAiBc,EAAAA,GAAAA,OACjBV,GAASa,EAAAA,EAAAA,OACTb,GAASc,EAAAA,EAAAA,IAAW,OACpBd,GAASe,EAAAA,EAAAA,IAAab,IACtBF,GAASgB,EAAAA,EAAAA,IAAuB,KAChChB,GAASiB,EAAAA,EAAAA,IAAQC,EAAAA,GAAAA,YACjBlB,GAASmB,EAAAA,EAAAA,IAAqB,OAC9BnB,GAASoB,EAAAA,EAAAA,IAAmB,QAG9BC,GAAI,CACFC,SAAU,UAjBd,UAoBE,iBAAKd,UAAWC,EAAAA,EAAAA,IAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,MAAD,CAAac,KAAM,KAClB1B,IACC,kBAAOW,UAAWC,EAAAA,EAAAA,QAAlB,SAAmCX,EAAE,mBAGvCD,IACA,gBAAKW,UAAWC,EAAAA,EAAAA,UAAhB,SAAmCX,EAAE,oBAK1CO,IACC,SAAC,KAAD,CACEG,UAAW,CACTC,EAAAA,EAAAA,KACAd,IAAmBe,EAAAA,GAAAA,OAAnB,UAA4CD,EAAAA,EAAAA,UAAoB,IAChEE,KAAK,KACPC,QAAS,WACPhB,EAAiBc,EAAAA,GAAAA,QACjBV,GAASmB,EAAAA,EAAAA,IAAqB,OAC9BnB,GAASoB,EAAAA,EAAAA,IAAmB,QAG9BC,GAAG,UAXL,UAaE,iBAAKb,UAAWC,EAAAA,EAAAA,IAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,MAAD,CAAoBc,KAAM,KACzB1B,IACC,kBAAOW,UAAWC,EAAAA,EAAAA,QAAlB,SAAmCX,EAAE,oBAGvCD,IACA,iBAAKW,UAAWC,EAAAA,EAAAA,UAAhB,UAAmCX,EAAE,cAArC,aASR,SAAC,KAAD,CACEU,UAAW,CACTC,EAAAA,EAAAA,KACAd,IAAmBe,EAAAA,GAAAA,QAAnB,UAA6CD,EAAAA,EAAAA,UAAoB,IACjEE,KAAK,KACPC,QAAS,WACPhB,EAAiBc,EAAAA,GAAAA,SACjBV,GAASmB,EAAAA,EAAAA,IAAqB,OAC9BnB,GAASoB,EAAAA,EAAAA,IAAmB,QAG9BC,GAAG,WAXL,UAaE,iBAAKb,UAAWC,EAAAA,EAAAA,IAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,MAAD,CAAWc,KAAM,KAChB1B,IACC,kBAAOW,UAAWC,EAAAA,EAAAA,QAAlB,SAAmCX,EAAE,qBAGvCD,IACA,gBAAKW,UAAWC,EAAAA,EAAAA,UAAhB,SAAmCX,EAAE","sources":["components/side-nav-warehouse/side-nav-warehouse.component.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n// styles\nimport styles from \"../side-nav.module.scss\";\n\n// constants\nimport { SideNavLinks, UserTypeConstants } from \"../../utils/constants.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\nimport {\n  resetPageState,\n  setCompany,\n  setRole,\n  setSearchWarehouseName,\n  setWarehouse,\n} from \"../../redux/items/itemsSlices\";\nimport { selectOrders } from \"../../redux/orders/ordersSlice\";\nimport { BsFillEnvelopeFill } from \"react-icons/bs\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { GiMedicines } from \"react-icons/gi\";\nimport { setSelectedWarehouse } from \"../../redux/warehouse/warehousesSlice\";\nimport {\n  setSearchCompanyId,\n  setSearchWarehouseId,\n} from \"../../redux/medicines/medicinesSlices\";\n\nfunction SideNavWarehouse({ selectedOption, onSelectedChange, collapsed }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n  const {\n    settings: { saveOrders },\n  } = useSelector(selectSettings);\n\n  return (\n    <>\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.ITEMS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.ITEMS);\n          dispatch(resetPageState());\n          dispatch(setCompany(null));\n          dispatch(setWarehouse(user));\n          dispatch(setSearchWarehouseName(\"\"));\n          dispatch(setRole(UserTypeConstants.WAREHOUSE));\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n          // dispatch(setSelectedWarehouse(null));\n        }}\n        to={{\n          pathname: \"/items\",\n        }}\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <GiMedicines size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-items\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-items\")}</div>\n          )}\n        </div>\n      </Link>\n\n      {saveOrders && (\n        <Link\n          className={[\n            styles.link,\n            selectedOption === SideNavLinks.ORDERS ? `${styles.selected}` : \"\",\n          ].join(\" \")}\n          onClick={() => {\n            onSelectedChange(SideNavLinks.ORDERS);\n            dispatch(setSearchWarehouseId(null));\n            dispatch(setSearchCompanyId(null));\n            // dispatch(setSelectedWarehouse(null));\n          }}\n          to=\"/orders\"\n        >\n          <div className={styles.nav}>\n            <div className={styles.nav_icon}>\n              <BsFillEnvelopeFill size={20} />\n              {collapsed && (\n                <label className={styles.tooltip}>{t(\"nav-orders\")}</label>\n              )}\n            </div>\n            {!collapsed && (\n              <div className={styles.nav_label}>{t(\"nav-orders\")} </div>\n            )}\n          </div>\n          {/* {unreadCount > 0 && (\n            <span className={styles.badge}>{unreadCount}</span>\n          )} */}\n        </Link>\n      )}\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.PROFILE ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.PROFILE);\n          dispatch(setSearchWarehouseId(null));\n          dispatch(setSearchCompanyId(null));\n          // dispatch(setSelectedWarehouse(null));\n        }}\n        to=\"/profile\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <CgProfile size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-profile\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-profile\")}</div>\n          )}\n        </div>\n      </Link>\n    </>\n  );\n}\n\nexport default SideNavWarehouse;\n"],"names":["selectedOption","onSelectedChange","collapsed","t","useTranslation","dispatch","useDispatch","user","useSelector","selectUser","saveOrders","selectSettings","settings","className","styles","SideNavLinks","join","onClick","resetPageState","setCompany","setWarehouse","setSearchWarehouseName","setRole","UserTypeConstants","setSearchWarehouseId","setSearchCompanyId","to","pathname","size"],"sourceRoot":""}