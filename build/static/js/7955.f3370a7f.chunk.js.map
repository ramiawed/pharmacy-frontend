{"version":3,"file":"static/js/7955.f3370a7f.chunk.js","mappings":"iRAsHA,UA/FA,YAA4E,IAAhDA,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,iBAAkBC,EAAa,EAAbA,UACpDC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEXC,GACVF,EAAAA,EAAAA,IAAYG,EAAAA,IADdC,SAAYF,WAId,OAFwBF,EAAAA,EAAAA,IAAYK,EAAAA,IAA5BC,aAGN,iCACE,SAAC,KAAD,CACEC,UAAW,CACTC,EAAAA,EAAAA,KACAhB,IAAmBiB,EAAAA,GAAAA,MAAnB,UAA2CD,EAAAA,EAAAA,UAAoB,IAC/DE,KAAK,KACPC,QAAS,WACPlB,EAAiBgB,EAAAA,GAAAA,OACjBZ,GAASe,EAAAA,EAAAA,IAAW,OACpBf,GAASgB,EAAAA,EAAAA,IAAad,IACtBF,GAASiB,EAAAA,EAAAA,IAAuB,KAChCjB,GAASkB,EAAAA,EAAAA,IAAQC,EAAAA,GAAAA,aAEnBC,GAAI,CACFC,SAAU,UAbd,UAgBE,iBAAKX,UAAWC,EAAAA,EAAAA,IAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,MAAD,CAAaW,KAAM,KAClBzB,IACC,kBAAOa,UAAWC,EAAAA,EAAAA,QAAlB,SAAmCb,EAAE,mBAGvCD,IACA,gBAAKa,UAAWC,EAAAA,EAAAA,UAAhB,SAAmCb,EAAE,oBAK1CO,IACC,SAAC,KAAD,CACEK,UAAW,CACTC,EAAAA,EAAAA,KACAhB,IAAmBiB,EAAAA,GAAAA,OAAnB,UAA4CD,EAAAA,EAAAA,UAAoB,IAChEE,KAAK,KACPC,QAAS,WACPlB,EAAiBgB,EAAAA,GAAAA,SAEnBQ,GAAG,UARL,UAUE,iBAAKV,UAAWC,EAAAA,EAAAA,IAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,MAAD,CAAoBW,KAAM,KACzBzB,IACC,kBAAOa,UAAWC,EAAAA,EAAAA,QAAlB,SAAmCb,EAAE,oBAGvCD,IACA,iBAAKa,UAAWC,EAAAA,EAAAA,UAAhB,UAAmCb,EAAE,cAArC,aASR,SAAC,KAAD,CACEY,UAAW,CACTC,EAAAA,EAAAA,KACAhB,IAAmBiB,EAAAA,GAAAA,QAAnB,UAA6CD,EAAAA,EAAAA,UAAoB,IACjEE,KAAK,KACPC,QAAS,WACPlB,EAAiBgB,EAAAA,GAAAA,UAEnBQ,GAAG,WARL,UAUE,iBAAKV,UAAWC,EAAAA,EAAAA,IAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,SAAC,MAAD,CAAWW,KAAM,KAChBzB,IACC,kBAAOa,UAAWC,EAAAA,EAAAA,QAAlB,SAAmCb,EAAE,qBAGvCD,IACA,gBAAKa,UAAWC,EAAAA,EAAAA,UAAhB,SAAmCb,EAAE","sources":["components/side-nav-warehouse/side-nav-warehouse.component.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n// styles\nimport styles from \"../side-nav.module.scss\";\n\n// constants\nimport { SideNavLinks, UserTypeConstants } from \"../../utils/constants.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\nimport {\n  setCompany,\n  setRole,\n  setSearchWarehouseName,\n  setWarehouse,\n} from \"../../redux/items/itemsSlices\";\nimport { selectOrders } from \"../../redux/orders/ordersSlice\";\nimport { BsFillEnvelopeFill } from \"react-icons/bs\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { GiMedicines } from \"react-icons/gi\";\n\nfunction SideNavWarehouse({ selectedOption, onSelectedChange, collapsed }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n  const {\n    settings: { saveOrders },\n  } = useSelector(selectSettings);\n  const { unreadCount } = useSelector(selectOrders);\n\n  return (\n    <>\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.ITEMS ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.ITEMS);\n          dispatch(setCompany(null));\n          dispatch(setWarehouse(user));\n          dispatch(setSearchWarehouseName(\"\"));\n          dispatch(setRole(UserTypeConstants.WAREHOUSE));\n        }}\n        to={{\n          pathname: \"/items\",\n        }}\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <GiMedicines size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-items\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-items\")}</div>\n          )}\n        </div>\n      </Link>\n\n      {saveOrders && (\n        <Link\n          className={[\n            styles.link,\n            selectedOption === SideNavLinks.ORDERS ? `${styles.selected}` : \"\",\n          ].join(\" \")}\n          onClick={() => {\n            onSelectedChange(SideNavLinks.ORDERS);\n          }}\n          to=\"/orders\"\n        >\n          <div className={styles.nav}>\n            <div className={styles.nav_icon}>\n              <BsFillEnvelopeFill size={20} />\n              {collapsed && (\n                <label className={styles.tooltip}>{t(\"nav-orders\")}</label>\n              )}\n            </div>\n            {!collapsed && (\n              <div className={styles.nav_label}>{t(\"nav-orders\")} </div>\n            )}\n          </div>\n          {/* {unreadCount > 0 && (\n            <span className={styles.badge}>{unreadCount}</span>\n          )} */}\n        </Link>\n      )}\n\n      <Link\n        className={[\n          styles.link,\n          selectedOption === SideNavLinks.PROFILE ? `${styles.selected}` : \"\",\n        ].join(\" \")}\n        onClick={() => {\n          onSelectedChange(SideNavLinks.PROFILE);\n        }}\n        to=\"/profile\"\n      >\n        <div className={styles.nav}>\n          <div className={styles.nav_icon}>\n            <CgProfile size={20} />\n            {collapsed && (\n              <label className={styles.tooltip}>{t(\"nav-profile\")}</label>\n            )}\n          </div>\n          {!collapsed && (\n            <div className={styles.nav_label}>{t(\"nav-profile\")}</div>\n          )}\n        </div>\n      </Link>\n    </>\n  );\n}\n\nexport default SideNavWarehouse;\n"],"names":["selectedOption","onSelectedChange","collapsed","t","useTranslation","dispatch","useDispatch","user","useSelector","selectUser","saveOrders","selectSettings","settings","selectOrders","unreadCount","className","styles","SideNavLinks","join","onClick","setCompany","setWarehouse","setSearchWarehouseName","setRole","UserTypeConstants","to","pathname","size"],"sourceRoot":""}