{"version":3,"file":"static/js/483.bd19b4c8.chunk.js","mappings":"oNACA,EAAiE,uBAAjE,EAA+F,qB,UCiC/F,MAnBA,YAA+B,IAAbA,EAAY,EAAZA,SACVC,GAAUC,EAAAA,EAAAA,MAEhB,OACE,iBAAKC,UAAWC,EAAhB,UACGJ,GACD,gBAAKG,UAAWC,EAAhB,UACE,SAAC,IAAD,CACEC,QAAS,WACPJ,EAAQK,UAEVC,KAAM,kBAAM,SAAC,KAAD,KACZC,UAAWC,EAAAA,GAAAA,qB,kOC1BrB,EAAiF,uCAAjF,EAA8H,+BAA9H,EAAqK,iCAArK,EAA+M,kCAA/M,EAAwP,gCAAxP,EAA+R,gC,oBC+F/R,MAxEA,YAAiD,IAArBC,EAAoB,EAApBA,iBAClBC,GAAMC,EAAAA,EAAAA,KAAND,EACAE,GAAmBC,EAAAA,EAAAA,MAAnBD,eAGFE,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAe,mCAAG,oGACCC,IAAAA,IAAA,UAClBC,EAAAA,GADkB,0BACOV,GAC5B,CACEW,QAAS,CACPC,cAAc,UAAD,OAAYV,MALT,OAChBW,EADgB,OAUtBN,EAAgBM,EAASC,KAAKA,KAAKR,cAVb,2CAAH,qDAkBrB,OALAS,EAAAA,EAAAA,YAAU,WACRP,IACAX,MACC,CAACG,KAGF,8BACGM,GACC,iCACE,UAAC,IAAD,YACE,wBAAKR,EAAE,yBACP,gBAAKR,UAAW0B,EAAAA,EAAAA,aAAhB,UACE,SAAC,IAAD,CACEC,UAAU,EACVtB,UAAWC,EAAAA,GAAAA,YACXsB,QAASpB,EAAE,mBACXJ,KAAM,kBAAM,SAAC,MAAD,KACZF,QAASgB,UAIf,gBAAKW,KAAG,EAAC7B,UAAW0B,EAAAA,EAAAA,sBAApB,UACE,iBAAK1B,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAe6B,MAAO,CAAEC,KAAM,GAA5C,SACGf,EAAagB,UAEhB,cAAGhC,UAAWC,EAAd,SAA4Be,EAAaiB,KAAKC,MAAM,KAAK,SAG3D,2BAC6B,KAA1BlB,EAAamB,WACZ,gBACEnC,UAAWC,EACXmC,IAAG,UAAKC,EAAAA,GAAL,0BAAiCrB,EAAamB,UACjDG,IAAI,WAGR,cAAGtC,UAAWC,EAAd,SAA4Be,EAAauB,mBAMjD,SAAC,IAAD","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","webpack://pharmacy-frontend/./src/pages/notification-page/notification-page.module.scss?48c8","pages/notification-page/notification-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\",\"back\":\"header_back__wgjRV\"};","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../action-icon/action-icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ children }) {\n  const history = useHistory();\n\n  return (\n    <div className={styles.header}>\n      {children}\n      <div className={styles.back}>\n        <Icon\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.WHITE_COLOR}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"notification-page_small_font__k81M-\",\"content_div\":\"notification-page_content_div__40vu0\",\"row\":\"notification-page_row__vcuc7\",\"image\":\"notification-page_image__Pdafe\",\"header\":\"notification-page_header__Khr58\",\"date\":\"notification-page_date__tG690\",\"body\":\"notification-page_body__wxCO-\"};","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\n// components\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport Header from \"../../components/header/header.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\n\n// icons\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./notification-page.module.scss\";\n\n// constants\nimport { BASEURL, Colors, SERVER_URL } from \"../../utils/constants\";\n\nfunction NotificationPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const { notificationId } = useParams();\n\n  // selectors\n  const token = useSelector(selectToken);\n\n  const [notification, setNotification] = useState(null);\n\n  const getNotification = async () => {\n    const response = await axios.get(\n      `${BASEURL}/notifications/${notificationId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n\n    setNotification(response.data.data.notification);\n  };\n\n  useEffect(() => {\n    getNotification();\n    onSelectedChange();\n  }, [notificationId]);\n\n  return (\n    <>\n      {notification ? (\n        <>\n          <Header>\n            <h2>{t(\"notification-label\")}</h2>\n            <div className={generalStyles.refresh_icon}>\n              <Icon\n                selected={false}\n                foreColor={Colors.WHITE_COLOR}\n                tooltip={t(\"refresh-tooltip\")}\n                icon={() => <RiRefreshLine />}\n                onclick={getNotification}\n              />\n            </div>\n          </Header>\n          <div div className={generalStyles.container_with_header}>\n            <div className={styles.content_div}>\n              <div className={styles.row}>\n                <p className={styles.header} style={{ flex: 1 }}>\n                  {notification.header}\n                </p>\n                <p className={styles.date}>{notification.date.split(\"T\")[0]}</p>\n              </div>\n\n              <div>\n                {notification.logo_url !== \"\" && (\n                  <img\n                    className={styles.image}\n                    src={`${SERVER_URL}/notifications/${notification.logo_url}`}\n                    alt=\"thumb\"\n                  />\n                )}\n                <p className={styles.body}>{notification.body}</p>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n\nexport default NotificationPage;\n"],"names":["children","history","useHistory","className","styles","onclick","goBack","icon","foreColor","Colors","onSelectedChange","t","useTranslation","notificationId","useParams","token","useSelector","selectToken","useState","notification","setNotification","getNotification","axios","BASEURL","headers","Authorization","response","data","useEffect","generalStyles","selected","tooltip","div","style","flex","header","date","split","logo_url","src","SERVER_URL","alt","body"],"sourceRoot":""}