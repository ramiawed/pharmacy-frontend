{"version":3,"file":"static/js/5503.9539ed8b.chunk.js","mappings":"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","sources":["components/search-container/search-container.component.jsx","webpack://pharmacy-frontend/./src/components/search-input/search-input.module.scss?50a3","components/search-input/search-input.component.jsx","webpack://pharmacy-frontend/./src/components/item-card/item-card.module.scss?2503","components/item-card/item-card.component.jsx","webpack://pharmacy-frontend/./src/components/medicines-search-string/medicines-search-string.module.scss?3bd3","components/medicines-search-string/medicines-search-string.component.jsx","webpack://pharmacy-frontend/./src/components/item-row-new/item-row-new.module.scss?d05c","components/item-row-new/item-row-new.component.jsx","pages/medicines-page/medicines-page.component.jsx","webpack://pharmacy-frontend/./src/components/search-container/search-container.module.scss?b7db"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-icons\nimport { VscSettings } from \"react-icons/vsc\";\n\n// styles\nimport styles from \"./search-container.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\nimport Icon from \"../action-icon/action-icon.component\";\n\nfunction SearchContainer({ children, searchAction }) {\n  const { t } = useTranslation();\n\n  let childrenArray = React.Children.toArray(children);\n  const [moreSearchOptions, setMoreSearchOptions] = useState(false);\n\n  return (\n    <div\n      className={[\n        styles.search_container,\n        styles.expanded,\n        moreSearchOptions ? styles.expanded_with_options : \"\",\n      ].join(\" \")}\n    >\n      <div className={styles.expanded_div}>\n        {true && (\n          <>\n            <div style={{ flex: 1 }}>\n              {childrenArray[0]}\n              {moreSearchOptions && childrenArray.length > 1\n                ? childrenArray.map((child, index) => {\n                    if (index > 0) return child;\n                    return null;\n                  })\n                : null}\n\n              {moreSearchOptions && (\n                <button\n                  onClick={() => {\n                    searchAction();\n                    setMoreSearchOptions(false);\n                  }}\n                  style={{\n                    marginBlockStart: \"4px\",\n                    marginInline: \"auto\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    width: \"50%\",\n                  }}\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_main,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              )}\n            </div>\n\n            {childrenArray.length > 1 && (\n              <div\n                style={{\n                  marginInline: \"4px\",\n                  marginLeft: \"4px\",\n                  marginRight: \"4px\",\n                }}\n              >\n                <Icon\n                  onclick={() => setMoreSearchOptions(!moreSearchOptions)}\n                  icon={() => <VscSettings />}\n                />\n              </div>\n            )}\n\n            {childrenArray.length === 1 && (\n              <div\n                className={[generalStyles.icon, generalStyles.margin_h_4].join(\n                  \" \"\n                )}\n                onClick={() => {\n                  searchAction();\n                  setMoreSearchOptions(false);\n                }}\n              >\n                <button\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_secondary,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"input_div\":\"search-input_input_div__4KoDe\",\"icon_close\":\"search-input_icon_close__TC1nF\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nimport styles from \"./search-input.module.scss\";\n\nfunction SearchInput({\n  type,\n  label,\n  id,\n  value,\n  onchange,\n  placeholder,\n  onEnterPress,\n  resetField,\n  onkeyup,\n}) {\n  const { t } = useTranslation();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (onEnterPress) {\n        onEnterPress();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.input_div}>\n      {label && <label htmlFor={id}>{t(label)}</label>}\n\n      <input\n        placeholder={placeholder ? t(`${placeholder}`) : \"\"}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onchange}\n        onKeyPress={handleKeyPress}\n        onKeyUp={onkeyup && onkeyup}\n      />\n      {resetField && value && (\n        <AiFillCloseCircle\n          onClick={() => resetField(id)}\n          className={styles.icon_close}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default SearchInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"partner_container\":\"item-card_partner_container__S-nN0\",\"icons_div\":\"item-card_icons_div__86zY2\",\"offer_icon\":\"item-card_offer_icon__+2Nvl\",\"logo_div\":\"item-card_logo_div__JPceh\",\"logo\":\"item-card_logo__cJH9F\",\"company_name\":\"item-card_company_name__KJsSX\",\"content\":\"item-card_content__c02UJ\",\"showed_content\":\"item-card_showed_content__QeM6e\",\"main_details\":\"item-card_main_details__OZepj\",\"name_details\":\"item-card_name_details__M3BOT\",\"name\":\"item-card_name__N+CBQ\",\"composition\":\"item-card_composition__CCz0a\",\"price\":\"item-card_price__LYumk\",\"customer_price\":\"item-card_customer_price__ewJ7l\",\"info\":\"item-card_info__ZqYpE\",\"label\":\"item-card_label__MlSEw\",\"value\":\"item-card_value__kZusY\",\"ribbon_2\":\"item-card_ribbon_2__Ji5Rs\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Logo from \"../../logo.png\";\n\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// redux-stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addStatistics } from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport { selectToken, selectUser } from \"../../redux/auth/authSlice\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./item-card.module.scss\";\n\n// constants and utils\nimport {\n  checkItemExistsInWarehouse,\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\n// if logged user is\n// 1- ADMIN: highlight the row by green color if the medicine has an offer.\n// 2- COMPANY: don't highlight the row never.\n// 3- GUEST: don't highlight the row never.\n// 4- WAREHOUSE: highlight the row by green if the medicine has an offer by logging warehouse.\n// 5- PHARMACY: highlight the row by green if the medicine has an offer by any warehouse\n// in the same city with the logging user\nconst checkOffer = (item, user) => {\n  if (\n    user.type === UserTypeConstants.GUEST ||\n    user.type === UserTypeConstants.COMPANY\n  ) {\n    return false;\n  }\n\n  let result = false;\n\n  if (user.type === UserTypeConstants.ADMIN) {\n    item.warehouses.forEach((w) => {\n      if (w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  if (user.type === UserTypeConstants.WAREHOUSE) {\n    item.warehouses\n      .filter((w) => w.warehouse._id === user._id)\n      .forEach((w) => {\n        if (w.offer.offers.length > 0) {\n          result = true;\n        }\n      });\n  }\n\n  if (user.type === UserTypeConstants.PHARMACY) {\n    item.warehouses.forEach((w) => {\n      if (w.warehouse.city === user.city && w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nfunction ItemCard({ companyItem }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isOnline = useSelector(selectOnlineStatus);\n  const user = useSelector(selectUser);\n  const favorites = useSelector(selectFavoritesItems);\n  const token = useSelector(selectToken);\n  const [showModal, setShowModal] = useState(false);\n\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      addFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetItem: companyItem._id,\n              action: \"item-added-to-favorite\",\n            },\n          })\n        );\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItems = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(\n      removeFavoriteItem({ obj: { favoriteItemId: companyItem._id }, token })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: companyItem._id,\n          warehouseId: user._id,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n\n    e.stopPropagation();\n  };\n\n  const dispatchStatisticsHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        addStatistics({\n          obj: {\n            sourceUser: user._id,\n            targetItem: companyItem._id,\n            action: \"choose-item\",\n          },\n          token,\n        })\n      );\n    }\n  };\n\n  return (\n    <div\n      className={[styles.partner_container].join(\" \")}\n      onClick={() => {\n        dispatchStatisticsHandler();\n\n        history.push(\"item\", {\n          from: user.type,\n          type: \"info\",\n          allowAction: false,\n          itemId: companyItem._id,\n          companyId: companyItem.company._id,\n          warehouseId:\n            user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n        });\n      }}\n    >\n      {checkOffer(companyItem, user) && (\n        <div className={[styles.ribbon_2].join(\" \")}>\n          <span>{t(\"offer\")}</span>\n        </div>\n      )}\n      <div className={styles.company_name}>{companyItem.company.name}</div>\n      <div\n        style={{\n          flex: 1,\n        }}\n      >\n        <div className={styles.icons_div}>\n          {changeAddToWarehouseLoading ? (\n            <Icon\n              icon={() => (\n                <VscLoading className={generalStyles.loading} size={20} />\n              )}\n              onclick={() => {}}\n              foreColor={Colors.SECONDARY_COLOR}\n            />\n          ) : (\n            user.type === UserTypeConstants.WAREHOUSE &&\n            (companyItem.warehouses\n              .map((w) => w.warehouse._id)\n              .includes(user._id) ? (\n              <Icon\n                icon={() => <RiDeleteBin5Fill size={24} />}\n                onclick={removeItemFromWarehouseHandler}\n                tooltip={t(\"remove-from-warehouse-tooltip\")}\n                foreColor={Colors.FAILED_COLOR}\n              />\n            ) : (\n              <Icon\n                icon={() => <MdAddCircle size={24} />}\n                onclick={addItemToWarehouseHandler}\n                tooltip={t(\"add-to-warehouse-tooltip\")}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            ))\n          )}\n\n          {user.type === UserTypeConstants.PHARMACY &&\n            checkItemExistsInWarehouse(companyItem, user) && (\n              <Icon\n                icon={() => <GiShoppingCart size={24} />}\n                onclick={() => setShowModal(true)}\n                foreColor={Colors.SUCCEEDED_COLOR}\n              />\n            )}\n\n          {changeFavoriteLoading ? (\n            <Icon\n              icon={() => (\n                <VscLoading className={generalStyles.loading} size={24} />\n              )}\n              onclick={() => {}}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : favorites\n              .map((favorite) => favorite._id)\n              .includes(companyItem._id) ? (\n            <Icon\n              icon={() => <AiFillStar size={24} />}\n              onclick={removeItemFromFavoritesItems}\n              tooltip={t(\"remove-from-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          ) : (\n            <Icon\n              icon={() => <AiOutlineStar size={24} />}\n              onclick={addItemToFavoriteItems}\n              tooltip={t(\"add-to-favorite-tooltip\")}\n              foreColor={Colors.YELLOW_COLOR}\n            />\n          )}\n        </div>\n\n        <div className={styles.logo_div}>\n          {companyItem.logo_url && companyItem.logo_url !== \"\" ? (\n            <img\n              src={`${SERVER_URL}/items/${companyItem.logo_url}`}\n              className={styles.logo}\n              alt=\"thumb\"\n            />\n          ) : (\n            <img src={Logo} className={styles.logo} alt=\"thumb\" />\n          )}\n        </div>\n\n        <div className={styles.content}>\n          <div className={[styles.showed_content].join(\" \")}>\n            <div className={styles.main_details}>\n              <div className={styles.name_details}>\n                <label className={styles.name}>{companyItem.name}</label>\n                <label className={styles.composition}>\n                  {companyItem.composition}\n                </label>\n              </div>\n\n              {user.type !== UserTypeConstants.GUEST && (\n                <div className={styles.price}>\n                  <label>{companyItem.price}</label>\n                </div>\n              )}\n              <div className={styles.price}>\n                <label className={styles.customer_price}>\n                  {companyItem.customer_price}\n                </label>\n              </div>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-formula\")}:</label>\n              <label className={styles.value}>{companyItem.formula}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-packing\")}:</label>\n              <label className={styles.value}>{companyItem.packing}</label>\n            </div>\n\n            <div className={styles.info}>\n              <label className={styles.label}>{t(\"item-caliber\")}:</label>\n              <label className={styles.value}>{companyItem.caliber}</label>\n            </div>\n          </div>\n\n          <div className={styles.behind_content}></div>\n        </div>\n      </div>\n\n      {showModal && (\n        <AddToCartModal item={companyItem} close={() => setShowModal(false)} />\n      )}\n    </div>\n  );\n}\n\nexport default ItemCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"div_search_str\":\"medicines-search-string_div_search_str__VtrHq\",\"label\":\"medicines-search-string_label__-AfzZ\",\"value\":\"medicines-search-string_value__TyoDg\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nimport styles from \"./medicines-search-string.module.scss\";\n\nfunction MedicinesSearchString({ pageState, user }) {\n  const { t } = useTranslation();\n  return (\n    <div className={styles.div_search_str}>\n      {pageState.searchName && (\n        <>\n          <label className={styles.label}>{t(\"item-name\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchName}</label>\n        </>\n      )}\n\n      {pageState.searchCompanyName && (\n        <>\n          <label className={styles.label}>{t(\"item-company\")}:</label>{\" \"}\n          <label className={styles.value}>{pageState.searchCompanyName}</label>\n        </>\n      )}\n\n      {pageState.searchWarehouseName && (\n        <>\n          <label className={styles.label}>{t(\"item-warehouse\")}:</label>{\" \"}\n          <label className={styles.value}>\n            {pageState.searchWarehouseName}\n          </label>\n        </>\n      )}\n\n      {pageState.searchInWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchInWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-in-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type === UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"warehouse-out-warehouse\")}</label>\n        )}\n\n      {pageState.searchOutWarehouse &&\n        user.type !== UserTypeConstants.WAREHOUSE && (\n          <label className={styles.value}>{t(\"pharmacy-out-warehouse\")}</label>\n        )}\n    </div>\n  );\n}\n\nexport default MedicinesSearchString;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"item-row-new_container__BmVfP\",\"name\":\"item-row-new_name__AMJBn\",\"details\":\"item-row-new_details__h9Wqb\",\"row\":\"item-row-new_row__QBMCU\",\"label\":\"item-row-new_label__HcIo8\",\"value\":\"item-row-new_value__ALhFG\",\"last_row\":\"item-row-new_last_row__lJ7PG\",\"actions\":\"item-row-new_actions__j3L0M\",\"loading\":\"item-row-new_loading__-UImT\",\"loading-move\":\"item-row-new_loading-move__R--Ia\",\"ribbon_2\":\"item-row-new_ribbon_2__DKkWs\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport OfferImage from \"../../offer-image.jpg\";\n\n// react-redux stuff\nimport { addStatistics } from \"../../redux/statistics/statisticsSlice\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport {\n  addFavoriteItem,\n  removeFavoriteItem,\n  selectFavoritesItems,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  addItemToWarehouse,\n  removeItemFromWarehouse,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// components\nimport AddToCartModal from \"../add-to-cart-modal/add-to-cart-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport Toast from \"../toast/toast.component\";\nimport ButtonWithIcon from \"../button-with-icon/button-with-icon.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { GiShoppingCart } from \"react-icons/gi\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// styles\nimport styles from \"./item-row-new.module.scss\";\n\n// constants and utils\nimport {\n  checkItemExistsInWarehouse,\n  Colors,\n  UserTypeConstants,\n} from \"../../utils/constants\";\n\n// if logged user is\n// 1- ADMIN: highlight the row by green color if the medicine has an offer.\n// 2- COMPANY: don't highlight the row never.\n// 3- GUEST: don't highlight the row never.\n// 4- WAREHOUSE: highlight the row by green if the medicine has an offer by logging warehouse.\n// 5- PHARMACY: highlight the row by green if the medicine has an offer by any warehouse\n// in the same city with the logging user\nconst checkOffer = (item, user) => {\n  // don't show the offer if the logged user is GUEST or COMPANY\n  if (\n    user.type === UserTypeConstants.GUEST ||\n    user.type === UserTypeConstants.COMPANY\n  ) {\n    return false;\n  }\n\n  let result = false;\n\n  if (user.type === UserTypeConstants.ADMIN) {\n    item.warehouses.forEach((w) => {\n      if (w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  if (user.type === UserTypeConstants.WAREHOUSE) {\n    item.warehouses\n      .filter((w) => w.warehouse._id === user._id)\n      .forEach((w) => {\n        if (w.offer.offers.length > 0) {\n          result = true;\n        }\n      });\n  }\n\n  if (user.type === UserTypeConstants.PHARMACY) {\n    item.warehouses.forEach((w) => {\n      if (w.warehouse.city === user.city && w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nfunction ItemRowNew({ item }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const favoritesItems = useSelector(selectFavoritesItems);\n\n  // own state\n  const [showModal, setShowModal] = useState(false);\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n  const [changeAddToWarehouseLoading, setChangeAddToWarehouseLoading] =\n    useState(false);\n  const [addItemToCart, setAddItemToCart] = useState(\"\");\n\n  // method to handle add company to user's favorite\n  const addItemToFavoriteItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(addFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetItem: item._id,\n              action: \"item-added-to-favorite\",\n            },\n            token,\n          })\n        );\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle remove company from user's favorite\n  const removeItemFromFavoritesItemsHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(removeFavoriteItem({ obj: { favoriteItemId: item._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle add item to warehouse\n  const addItemToWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      addItemToWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  // method to handle remove item from warehouse\n  const removeItemFromWarehouseHandler = (e) => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeAddToWarehouseLoading(true);\n\n    dispatch(\n      removeItemFromWarehouse({\n        obj: {\n          itemId: item._id,\n          warehouseId: user._id,\n          city: user.city,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeAddToWarehouseLoading(false);\n      })\n      .catch(() => {\n        setChangeAddToWarehouseLoading(false);\n      });\n  };\n\n  const dispatchStatisticsHandler = () => {\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST\n    ) {\n      dispatch(\n        addStatistics({\n          obj: {\n            sourceUser: user._id,\n            targetItem: item._id,\n            action: \"choose-item\",\n          },\n        })\n      );\n    }\n  };\n\n  // render method\n  return (\n    <>\n      <div className={styles.container}>\n        {checkOffer(item, user) && (\n          <div className={[styles.ribbon_2].join(\" \")}>\n            <span>{t(\"offer\")}</span>\n          </div>\n        )}\n\n        <div\n          className={styles.name}\n          onClick={() => {\n            dispatchStatisticsHandler();\n\n            history.push(\"/item\", {\n              from: user.type,\n              type: \"info\",\n              allowAction: false,\n              itemId: item._id,\n              companyId: item.company._id,\n              warehouseId:\n                user.type === UserTypeConstants.WAREHOUSE ? user._id : null,\n            });\n          }}\n        >\n          {item.name}\n        </div>\n        <div className={styles.details}>\n          <div className={[styles.row].join(\" \")}>\n            <div>\n              <label className={styles.label}>{t(\"item-company\")}:</label>\n              <label className={styles.value}>{item.company.name}</label>\n            </div>\n          </div>\n          <div className={styles.row}>\n            <div>\n              <label className={styles.label}>{t(\"item-formula\")}:</label>\n              <label className={styles.value}>{item.formula}</label>\n            </div>\n            <div>\n              <label className={styles.label}>{t(\"item-caliber\")}:</label>\n              <label className={styles.value}>{item.caliber}</label>\n            </div>\n          </div>\n          <div className={styles.row}>\n            <div>\n              <label className={styles.label}>{t(\"item-packing\")}:</label>\n              <label className={styles.value}>{item.packing}</label>\n            </div>\n          </div>\n          <div className={styles.row}>\n            {user.type !== UserTypeConstants.GUEST && (\n              <div>\n                <label className={styles.label}>{t(\"item-price\")}:</label>\n                <label className={styles.value}>{item.price}</label>\n              </div>\n            )}\n            <div>\n              <label className={styles.label}>\n                {t(\"item-customer-price\")}:\n              </label>\n              <label className={styles.value}>{item.customer_price}</label>\n            </div>\n          </div>\n          <div className={[styles.row].join(\" \")}>\n            <div>\n              <label className={styles.label}>{t(\"item-composition\")}:</label>\n              <label className={styles.value}>{item.composition}</label>\n            </div>\n          </div>\n          <div className={[styles.last_row].join(\" \")}>\n            <div className={styles.actions}>\n              {changeAddToWarehouseLoading ? (\n                <ButtonWithIcon\n                  text={t(\"\")}\n                  action={() => {}}\n                  bgColor={Colors.SECONDARY_COLOR}\n                  icon={() => <VscLoading className={styles.loading} />}\n                />\n              ) : (\n                user.type === UserTypeConstants.WAREHOUSE &&\n                (item.warehouses\n                  .map((w) => w.warehouse._id)\n                  .includes(user._id) ? (\n                  <ButtonWithIcon\n                    text={t(\"remove-from-warehouse-tooltip\")}\n                    action={removeItemFromWarehouseHandler}\n                    bgColor={Colors.FAILED_COLOR}\n                    icon={() => <RiDeleteBin5Fill />}\n                  />\n                ) : (\n                  <ButtonWithIcon\n                    text={t(\"add-to-warehouse-tooltip\")}\n                    action={addItemToWarehouseHandler}\n                    bgColor={Colors.SUCCEEDED_COLOR}\n                    icon={() => <MdAddCircle />}\n                  />\n                ))\n              )}\n\n              {user.type === UserTypeConstants.PHARMACY &&\n                checkItemExistsInWarehouse(item, user) && (\n                  <ButtonWithIcon\n                    text={t(\"add-to-cart\")}\n                    action={() => setShowModal(true)}\n                    bgColor={Colors.SUCCEEDED_COLOR}\n                    icon={() => <GiShoppingCart />}\n                  />\n                )}\n\n              {changeFavoriteLoading ? (\n                <ButtonWithIcon\n                  text={t(\"\")}\n                  action={() => {}}\n                  bgColor={Colors.YELLOW_COLOR}\n                  icon={() => <VscLoading className={styles.loading} />}\n                />\n              ) : favoritesItems\n                  .map((favorite) => favorite._id)\n                  .includes(item._id) ? (\n                <ButtonWithIcon\n                  text={t(\"remove-from-favorite-tooltip\")}\n                  action={removeItemFromFavoritesItemsHandler}\n                  bgColor={Colors.YELLOW_COLOR}\n                  icon={() => <AiFillStar />}\n                />\n              ) : (\n                <ButtonWithIcon\n                  text={t(\"add-to-favorite-tooltip\")}\n                  action={addItemToFavoriteItemsHandler}\n                  bgColor={Colors.YELLOW_COLOR}\n                  icon={() => <AiOutlineStar />}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <AddToCartModal\n          item={item}\n          close={() => setShowModal(false)}\n          setAddItemToCartMsg={setAddItemToCart}\n        />\n      )}\n\n      {addItemToCart.length > 0 && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(addItemToCart)}\n          actionAfterTimeout={() => setAddItemToCart(\"\")}\n        />\n      )}\n    </>\n  );\n}\n\nexport default ItemRowNew;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router\";\nimport ReactLoading from \"react-loading\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport ItemCard from \"../../components/item-card/item-card.component\";\nimport SearchContainer from \"../../components/search-container/search-container.component\";\nimport SearchInput from \"../../components/search-input/search-input.component\";\nimport ItemRow from \"../../components/item-row/item-row.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Button from \"../../components/button/button.component\";\nimport Icon from \"../../components/action-icon/action-icon.component\";\nimport MedicinesSearchString from \"../../components/medicines-search-string/medicines-search-string.component\";\n\n// react-icons\nimport { FaSearch, FaListUl } from \"react-icons/fa\";\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore, AiFillStar } from \"react-icons/ai\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { selectFavoritesItems } from \"../../redux/favorites/favoritesSlice.js\";\nimport {\n  getMedicines,\n  selectMedicines,\n  cancelOperation,\n  setSearchName,\n  setSearchCompanyName,\n  setSearchWarehouseName,\n  setSearchInWarehouse,\n  setSearchOutWarehouse,\n  setCity,\n  setDisplayType,\n  resetMedicinesArray,\n  resetMedicinesPageState,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport searchContainerStyles from \"../../components/search-container/search-container.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\nimport { VscClearAll } from \"react-icons/vsc\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport ItemRowNew from \"../../components/item-row-new/item-row-new.component\";\nimport ButtonWithIcon from \"../../components/button-with-icon/button-with-icon.component\";\nimport { CgMoreVertical } from \"react-icons/cg\";\n\nlet timer = null;\n\nfunction MedicinesPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const { token, user } = useSelector(selectUserData);\n  const { medicines, count, status, pageState } = useSelector(selectMedicines);\n  const favoritesItems = useSelector(selectFavoritesItems);\n\n  // own state\n  const [showFavorites, setShowFavorites] = useState(false);\n\n  // handle search\n  const handleSearch = () => {\n    if (user.type === UserTypeConstants.PHARMACY) {\n      dispatch(setCity(user.city));\n    } else {\n      dispatch(setCity(\"\"));\n    }\n\n    dispatch(getMedicines({ token }));\n  };\n\n  const handleMoreResult = () => {\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetMedicinesArray());\n    handleSearch();\n  };\n\n  const keyUpHandler = () => {\n    cancelOperation();\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      dispatch(resetMedicinesArray());\n\n      handleSearch();\n    }, 200);\n  };\n\n  useEffect(() => {\n    if (medicines.length === 0) {\n      handleSearch();\n      window.scrollTo(0, 0);\n    }\n\n    onSelectedChange();\n  }, []);\n\n  return user ? (\n    <>\n      <SearchContainer searchAction={handleEnterPress}>\n        <SearchInput\n          label=\"user-name\"\n          id=\"search-name\"\n          type=\"text\"\n          value={pageState.searchName}\n          onchange={(e) => {\n            dispatch(setSearchName(e.target.value));\n          }}\n          icon={<FaSearch />}\n          placeholder=\"search-by-name-composition-barcode\"\n          onEnterPress={handleEnterPress}\n          resetField={() => {\n            dispatch(setSearchName(\"\"));\n          }}\n          onkeyup={keyUpHandler}\n        />\n        {/* // {user.type !== UserTypeConstants.GUEST && companyId === null && ( */}\n        {user.type !== UserTypeConstants.GUEST && (\n          <SearchInput\n            label=\"item-company\"\n            id=\"item-company\"\n            type=\"text\"\n            value={pageState.searchCompanyName}\n            onchange={(e) => {\n              dispatch(setSearchCompanyName(e.target.value));\n            }}\n            icon={<FaSearch />}\n            placeholder=\"search-by-company-name\"\n            onEnterPress={handleEnterPress}\n            resetField={() => {\n              dispatch(setSearchCompanyName(\"\"));\n            }}\n            onkeyup={keyUpHandler}\n          />\n        )}\n\n        {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n        {(user.type === UserTypeConstants.ADMIN ||\n          user.type === UserTypeConstants.PHARMACY) && (\n          <SearchInput\n            label=\"item-warehouse\"\n            id=\"item-warehouse\"\n            type=\"text\"\n            value={pageState.searchWarehouseName}\n            onchange={(e) => {\n              dispatch(setSearchWarehouseName(e.target.value));\n            }}\n            icon={<FaSearch />}\n            placeholder=\"search-by-warehouse-name\"\n            onEnterPress={handleEnterPress}\n            resetField={() => {\n              dispatch(setSearchWarehouseName(\"\"));\n            }}\n            onkeyup={keyUpHandler}\n          />\n        )}\n\n        {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n        {user.type !== UserTypeConstants.GUEST && (\n          <div className={searchContainerStyles.checkbox_div}>\n            <input\n              type=\"checkbox\"\n              value={pageState.searchInWarehouse}\n              checked={pageState.searchInWarehouse}\n              onChange={() => {\n                dispatch(setSearchInWarehouse(!pageState.searchInWarehouse));\n                dispatch(setSearchOutWarehouse(false));\n                keyUpHandler();\n              }}\n            />\n            {user.type === UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"warehouse-in-warehouse\")}</label>\n            )}\n            {user.type !== UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"pharmacy-in-warehouse\")}</label>\n            )}\n          </div>\n        )}\n\n        {/* {user.type !== UserTypeConstants.GUEST && warehouseId === null && ( */}\n        {user.type !== UserTypeConstants.GUEST && (\n          <div className={searchContainerStyles.checkbox_div}>\n            <input\n              type=\"checkbox\"\n              value={pageState.searchOutWarehouse}\n              checked={pageState.searchOutWarehouse}\n              onChange={() => {\n                dispatch(setSearchOutWarehouse(!pageState.searchOutWarehouse));\n                dispatch(setSearchInWarehouse(false));\n                keyUpHandler();\n              }}\n            />\n            {user.type === UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"warehouse-out-warehouse\")}</label>\n            )}\n            {user.type !== UserTypeConstants.WAREHOUSE && (\n              <label>{t(\"pharmacy-out-warehouse\")}</label>\n            )}\n          </div>\n        )}\n      </SearchContainer>\n      <div\n        className={generalStyles.container}\n        style={{\n          marginBlockStart: \"50px\",\n          paddingInlineStart: \"50px\",\n        }}\n      >\n        <MedicinesSearchString pageState={pageState} user={user} />\n\n        <div className={generalStyles.actions}>\n          <Icon\n            withBackground={true}\n            icon={() => <RiRefreshLine />}\n            foreColor={Colors.MAIN_COLOR}\n            tooltip={t(\"refresh-tooltip\")}\n            onclick={handleEnterPress}\n          />\n          {(pageState.searchName.length > 0 ||\n            pageState.searchCompanyName.length > 0 ||\n            pageState.searchWarehouseName.length > 0 ||\n            pageState.searchInWarehouse ||\n            pageState.searchOutWarehouse) && (\n            <Icon\n              withBackground={true}\n              selected={false}\n              foreColor={Colors.MAIN_COLOR}\n              tooltip={t(\"clear-filter-tooltip\")}\n              onclick={() => {\n                dispatch(resetMedicinesPageState());\n                handleEnterPress();\n                setShowFavorites(false);\n              }}\n              icon={() => <VscClearAll />}\n            />\n          )}\n\n          <div className={generalStyles.relative}>\n            <Icon\n              withBackground={true}\n              icon={() => <AiFillStar />}\n              foreColor={\n                showFavorites ? Colors.SUCCEEDED_COLOR : Colors.MAIN_COLOR\n              }\n              tooltip={t(\"show-favorite-tooltip\")}\n              onclick={() => setShowFavorites(!showFavorites)}\n            />\n\n            {showFavorites && (\n              <div\n                className={[\n                  generalStyles.favorites_content,\n                  generalStyles.favorites_content_wider,\n                  generalStyles.bg_white,\n                ].join(\" \")}\n              >\n                {showFavorites &&\n                  favoritesItems.map((item) => (\n                    <ItemRow\n                      key={item._id}\n                      item={item}\n                      isFavorite={true}\n                      isSmallFavorite={true}\n                    />\n                  ))}\n              </div>\n            )}\n          </div>\n\n          <Icon\n            withBackground={true}\n            icon={() => <AiFillAppstore />}\n            foreColor={\n              pageState.displayType === \"card\"\n                ? Colors.SUCCEEDED_COLOR\n                : Colors.MAIN_COLOR\n            }\n            tooltip={t(\"show-item-as-card-tooltip\")}\n            onclick={() => dispatch(setDisplayType(\"card\"))}\n          />\n\n          <Icon\n            withBackground={true}\n            icon={() => <FaListUl />}\n            foreColor={\n              pageState.displayType === \"list\"\n                ? Colors.SUCCEEDED_COLOR\n                : Colors.MAIN_COLOR\n            }\n            tooltip={t(\"show-item-as-row-tooltip\")}\n            onclick={() => dispatch(setDisplayType(\"list\"))}\n          />\n\n          <Icon\n            withBackground={true}\n            tooltip={t(\"go-back\")}\n            onclick={() => {\n              history.goBack();\n            }}\n            icon={() => <IoMdArrowRoundBack />}\n            foreColor={Colors.MAIN_COLOR}\n          />\n        </div>\n\n        {count > 0 && (\n          <div className={generalStyles.count}>\n            <span className={generalStyles.label}>{t(\"items-count\")}</span>\n            <span className={generalStyles.count}>{count}</span>\n          </div>\n        )}\n\n        {pageState.displayType === \"list\" &&\n          medicines.map((medicine) => (\n            <ItemRowNew key={medicine._id} item={medicine} />\n          ))}\n\n        {pageState.displayType === \"card\" && (\n          <div\n            className={[\n              generalStyles.flex_container,\n              generalStyles.margin_top_10,\n            ].join(\" \")}\n          >\n            {medicines.map((medicine) => (\n              <ItemCard key={medicine._id} companyItem={medicine} />\n            ))}\n          </div>\n        )}\n\n        {count > 0 && status !== \"loading\" && (\n          <div className={generalStyles.count}>\n            {medicines.length} / {count}\n          </div>\n        )}\n\n        {medicines.length === 0 &&\n          status !== \"loading\" &&\n          pageState.searchName.length === 0 &&\n          pageState.searchCompanyName.length === 0 &&\n          pageState.searchWarehouseName.length === 0 &&\n          !pageState.searchInWarehouse &&\n          !pageState.searchOutWarehouse && <NoContent msg={t(\"no-items\")} />}\n\n        {medicines.length === 0 &&\n          status !== \"loading\" &&\n          (pageState.searchName.length !== 0 ||\n            pageState.searchCompanyName.length !== 0 ||\n            pageState.searchWarehouseName.length !== 0 ||\n            pageState.searchInWarehouse ||\n            pageState.searchOutWarehouse) && (\n            <NoContent msg={t(\"no-result-found\")} />\n          )}\n\n        {status === \"loading\" && (\n          <div className={generalStyles.flex_container}>\n            <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n          </div>\n        )}\n\n        {medicines.length < count && status !== \"loading\" && (\n          <div className={generalStyles.flex_container}>\n            <ButtonWithIcon\n              text={t(\"more\")}\n              action={handleMoreResult}\n              bgColor={Colors.SECONDARY_COLOR}\n              icon={() => <CgMoreVertical />}\n            />\n          </div>\n        )}\n\n        {medicines.length === count && status !== \"loading\" && count !== 0 && (\n          <p\n            className={[generalStyles.center, generalStyles.fc_secondary].join(\n              \" \"\n            )}\n          >\n            {t(\"no-more\")}\n          </p>\n        )}\n      </div>\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default MedicinesPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"search_container\":\"search-container_search_container__6isGM\",\"expanded\":\"search-container_expanded__79n+k\",\"expanded_div\":\"search-container_expanded_div__Hmmm1\",\"checkbox_div\":\"search-container_checkbox_div__RPj5T\"};"],"names":["children","searchAction","t","useTranslation","childrenArray","React","useState","moreSearchOptions","setMoreSearchOptions","className","styles","join","style","flex","length","map","child","index","onClick","marginBlockStart","marginInline","marginLeft","marginRight","width","generalStyles","onclick","icon","type","label","id","value","onchange","placeholder","onEnterPress","resetField","onkeyup","htmlFor","onChange","onKeyPress","event","key","onKeyUp","checkOffer","item","user","UserTypeConstants","result","warehouses","forEach","w","offer","offers","filter","warehouse","_id","city","companyItem","history","useHistory","dispatch","useDispatch","isOnline","useSelector","selectOnlineStatus","selectUser","favorites","selectFavoritesItems","token","selectToken","showModal","setShowModal","changeFavoriteLoading","setChangeFavoriteLoading","changeAddToWarehouseLoading","setChangeAddToWarehouseLoading","addStatistics","obj","sourceUser","targetItem","action","push","from","allowAction","itemId","companyId","company","warehouseId","name","size","foreColor","Colors","includes","e","removeItemFromWarehouse","then","unwrapResult","catch","stopPropagation","changeOnlineMsg","tooltip","addItemToWarehouse","checkItemExistsInWarehouse","favorite","removeFavoriteItem","favoriteItemId","addFavoriteItem","logo_url","src","SERVER_URL","alt","Logo","composition","price","customer_price","formula","packing","caliber","close","pageState","searchName","searchCompanyName","searchWarehouseName","searchInWarehouse","searchOutWarehouse","selectUserData","favoritesItems","addItemToCart","setAddItemToCart","text","bgColor","setAddItemToCartMsg","toastText","actionAfterTimeout","timer","onSelectedChange","selectMedicines","medicines","count","status","showFavorites","setShowFavorites","handleSearch","setCity","getMedicines","handleEnterPress","resetMedicinesArray","keyUpHandler","cancelOperation","clearTimeout","setTimeout","useEffect","window","scrollTo","setSearchName","target","setSearchCompanyName","setSearchWarehouseName","searchContainerStyles","checked","setSearchInWarehouse","setSearchOutWarehouse","paddingInlineStart","withBackground","selected","resetMedicinesPageState","isFavorite","isSmallFavorite","displayType","setDisplayType","goBack","medicine","msg","color","to"],"sourceRoot":""}