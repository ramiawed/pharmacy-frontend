{"version":3,"file":"static/js/7064.88421664.chunk.js","mappings":"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","sources":["modals/order-details-info-modal/order-details-info-modal.component.jsx","webpack://pharmacy-frontend/./src/modals/choose-date-modal/choose-date-modal.module.scss?1253","modals/choose-date-modal/choose-date-modal.component.jsx","components/export-csv/export-csv.component.jsx","components/order-details-actions/order-details-actions.component.jsx","pages/basket-order-details-page/basket-order-details-page.component.jsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport LabelValueRow from \"../../components/label-value-row/label-value-row.component\";\nimport Separator from \"../../components/separator/separator.component\";\nimport Modal from \"../modal/modal.component\";\n\n// utils\nimport { formatDate, formatNumber } from \"../../utils/constants\";\n\nconst OrderDetailsInfoModal = ({ orderDetails, close }) => {\n  const { t } = useTranslation();\n  return (\n    <Modal\n      header={t(\"order details\")}\n      closeModal={close}\n      cancelLabel=\"close\"\n      small={true}\n    >\n      <LabelValueRow label=\"pharmacy\" value={orderDetails.pharmacy.name} />\n      <Separator />\n      <LabelValueRow\n        label=\"certificate name\"\n        value={orderDetails.pharmacy.certificateName}\n      />\n      <Separator />\n      <LabelValueRow\n        label=\"address\"\n        value={orderDetails.pharmacy.addressDetails}\n      />\n      <Separator />\n      <LabelValueRow label=\"mobile\" value={orderDetails.pharmacy.mobile} />\n      <Separator />\n      <LabelValueRow label=\"warehouse\" value={orderDetails.warehouse.name} />\n      <Separator />\n      <LabelValueRow\n        label=\"date\"\n        value={formatDate(new Date(orderDetails.createdAt))}\n      />\n\n      {orderDetails.totalInvoicePrice && (\n        <>\n          <Separator />\n          <LabelValueRow\n            label=\"total price\"\n            value={formatNumber(orderDetails.totalInvoicePrice)}\n          />\n        </>\n      )}\n\n      {/* {orderDetails.totalInvoicePoints && (\n        <>\n          <Separator />\n          <LabelValueRow\n            label=\"points\"\n            value={formatNumber(orderDetails.totalInvoicePoints)}\n          />\n        </>\n      )} */}\n    </Modal>\n  );\n};\n\nexport default memo(OrderDetailsInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"choose-date-modal_small_font__pPR9X\",\"container\":\"choose-date-modal_container__yjI1S\",\"row\":\"choose-date-modal_row__JYAa7\",\"input\":\"choose-date-modal_input__Qoms8\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Separator from \"../../components/separator/separator.component\";\nimport Modal from \"../modal/modal.component\";\n\nimport styles from \"./choose-date-modal.module.scss\";\n\nconst ChooseDateModal = ({ closeModal, header, msg, handler, withTime }) => {\n  const { t } = useTranslation();\n\n  const [disableDate, setDisableDate] = useState(true);\n  const [disableTime, setDisableTime] = useState(true);\n\n  const [date, setDate] = useState(null);\n  const [time, setTime] = useState(null);\n\n  const okHandler = () => {\n    handler(!disableDate ? date : undefined, !disableTime ? time : undefined);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      header={t(header)}\n      closeModal={closeModal}\n      cancelLabel={t(\"cancel\")}\n      okLabel={t(\"ok\")}\n      small={true}\n      okModal={okHandler}\n    >\n      <div className={styles.container}>\n        <p>{t(msg)}</p>\n        <div className={styles.row}>\n          <input\n            type=\"checkbox\"\n            checked={!disableDate}\n            onChange={() => setDisableDate(!disableDate)}\n            id=\"date\"\n          />\n          <label htmlFor=\"date\">{t(\"date\")}</label>\n          <input\n            type=\"date\"\n            className={styles.input}\n            disabled={disableDate}\n            value={date}\n            onChange={(e) => {\n              setDate(e.target.value);\n            }}\n          />\n        </div>\n        {withTime && (\n          <>\n            <Separator />\n            <div className={styles.row}>\n              <input\n                type=\"checkbox\"\n                checked={!disableTime}\n                onChange={() => setDisableTime(!disableTime)}\n                id=\"time\"\n              />\n              <label htmlFor=\"time\">{t(\"time\")}</label>\n              <input\n                type=\"time\"\n                className={styles.input}\n                disabled={disableTime}\n                value={time}\n                onChange={(e) => {\n                  setTime(e.target.value);\n                }}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default ChooseDateModal;\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\n// components\nimport Icon from \"../icon/icon.component\";\n\n// constants\nimport { Colors, OfferTypes } from \"../../utils/constants\";\n\n// icons\nimport { RiSave3Fill } from \"react-icons/ri\";\nimport { useTranslation } from \"react-i18next\";\n\nconst computeTotalPrice = (data) => {\n  let total = 0;\n\n  data.forEach((item) => {\n    total =\n      total +\n      item.qty * item.item.price -\n      (item.bonus && item.bonusType === OfferTypes.PERCENTAGE\n        ? (item.qty * item.item.price * item.bonus) / 100\n        : 0);\n  });\n\n  return total;\n};\n\nexport const ExportCSV = ({ csvData, fileName }) => {\n  const { t } = useTranslation();\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (csvData, fileName) => {\n    let jsonData = csvData.map((d) => {\n      return {\n        \"الاسم التحاري\": d.item.name,\n        \"الاسم التجاري العربي\": d.item.nameAr,\n        الشركة: d.item.company.name,\n        \"الشكل الصيدلاني\": d.item.formula,\n        العيار: d.item.caliber,\n        التعبئة: d.item.packing,\n        \"السعر للصيدلاني\": d.item.price,\n        \"السعر للعموم\": d.item.customer_price,\n        الكمية: d.qty,\n        العرض: d.bonus\n          ? d.bonus +\n            \" \" +\n            (d.bonus\n              ? d.bonusType === OfferTypes.PERCENTAGE\n                ? t(\"percentage\")\n                : t(\"piece\")\n              : \"\")\n          : \"\",\n        \"السعر الاجمالي\":\n          d.qty * d.item.price -\n          (d.bonus && d.bonusType === OfferTypes.PERCENTAGE\n            ? (d.qty * d.item.price * d.bonus) / 100\n            : 0),\n      };\n    });\n\n    jsonData = [\n      ...jsonData,\n      {\n        \"الاسم التحاري\": \"\",\n        الشركة: \"\",\n        \"الشكل الصيدلاني\": \"\",\n        العيار: \"\",\n        التعبئة: \"\",\n        \"السعر للصيدلاني\": \"\",\n        \"السعر للعموم\": \"\",\n        الكمية: \"\",\n        العرض: \"\",\n        \"السعر الاجمالي\": computeTotalPrice(csvData),\n      },\n    ];\n    const ws = XLSX.utils.json_to_sheet(jsonData);\n\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n\n    const data = new Blob([excelBuffer], { type: fileType });\n\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <Icon\n      selected={false}\n      foreColor={Colors.DARK_COLOR}\n      tooltip={t(\"save order\")}\n      icon={() => <RiSave3Fill />}\n      onclick={() => exportToCSV(csvData, fileName)}\n      withBackground={true}\n      text={t(\"save order\")}\n    />\n  );\n};\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport OrderDetailsInfoModal from \"../../modals/order-details-info-modal/order-details-info-modal.component\";\nimport ChooseDateModal from \"../../modals/choose-date-modal/choose-date-modal.component\";\nimport { ExportCSV } from \"../export-csv/export-csv.component\";\nimport ActionBar from \"../action-bar/action-bar.component\";\nimport Modal from \"../../modals/modal/modal.component\";\nimport Icon from \"../icon/icon.component\";\n\n// icons\nimport { BsCheck, BsStopCircle } from \"react-icons/bs\";\nimport { GiConfirmed } from \"react-icons/gi\";\nimport { GrMoreVertical } from \"react-icons/gr\";\nimport { MdDeliveryDining } from \"react-icons/md\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\n// redux stuff\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\n\nconst OrderDetailsActions = ({\n  orderDetails,\n  warehouseDontServeHanlder,\n  devlierHandler,\n  confirmOrderHanlder,\n  shippedHandler,\n  withSaveOption,\n}) => {\n  const { t } = useTranslation();\n\n  const user = useSelector(selectUser);\n\n  const [showOrderDetails, setShowOrderDetails] = useState(false);\n  const [showDevliverDateModal, setShowDeliverDateModal] = useState(false);\n  const [showConfirmDontServerModal, setShowConfirmDontServeModal] =\n    useState(false);\n  const [showConfirmDateModal, setShowConfirmDateModal] = useState(false);\n  const [showShippedDateModal, setShowShippedDateModal] = useState(false);\n\n  return (\n    <ActionBar>\n      <Icon\n        icon={() => <GrMoreVertical color={Colors.MAIN_COLOR} />}\n        onclick={() => {\n          setShowOrderDetails(true);\n        }}\n        foreColor={Colors.LIGHT_COLOR}\n        withBackground={true}\n        tooltip={t(\"order details\")}\n        text={t(\"details\")}\n      />\n      {(user.type === UserTypeConstants.ADMIN ||\n        user.type === UserTypeConstants.WAREHOUSE) && (\n        <>\n          <Icon\n            icon={() => <BsStopCircle color={Colors.MAIN_COLOR} />}\n            onclick={() => {\n              setShowConfirmDontServeModal(true);\n            }}\n            foreColor={Colors.LIGHT_COLOR}\n            withBackground={true}\n            tooltip={t(\"will dont serve label\")}\n            text={t(\"will dont serve label\")}\n          />\n          <Icon\n            icon={() => <GiConfirmed color={Colors.MAIN_COLOR} />}\n            onclick={() => {\n              setShowConfirmDateModal(true);\n            }}\n            foreColor={Colors.LIGHT_COLOR}\n            withBackground={true}\n            tooltip={t(\"confirm order label\")}\n            text={t(\"confirm order label\")}\n          />\n          <Icon\n            icon={() => <BsCheck color={Colors.MAIN_COLOR} />}\n            onclick={() => {\n              setShowDeliverDateModal(true);\n            }}\n            foreColor={Colors.LIGHT_COLOR}\n            withBackground={true}\n            tooltip={t(\"deliver order label\")}\n            text={t(\"deliver order label\")}\n          />\n          <Icon\n            icon={() => <MdDeliveryDining color={Colors.MAIN_COLOR} />}\n            onclick={() => {\n              setShowShippedDateModal(true);\n            }}\n            foreColor={Colors.LIGHT_COLOR}\n            withBackground={true}\n            tooltip={t(\"shipped order label\")}\n            text={t(\"shipped order label\")}\n          />\n        </>\n      )}\n\n      {withSaveOption && (\n        <ExportCSV\n          csvData={orderDetails?.items}\n          fileName={\n            orderDetails.pharmacy.name +\n            \"_\" +\n            orderDetails.warehouse.name +\n            \"_\" +\n            new Date(orderDetails.createdAt).toLocaleDateString()\n          }\n        />\n      )}\n\n      {showOrderDetails && (\n        <OrderDetailsInfoModal\n          orderDetails={orderDetails}\n          close={() => setShowOrderDetails(false)}\n        />\n      )}\n\n      {showDevliverDateModal && (\n        <ChooseDateModal\n          header=\"deliver order label\"\n          msg=\"deliver confirm msg\"\n          closeModal={() => setShowDeliverDateModal(false)}\n          handler={devlierHandler}\n          withTime={true}\n        />\n      )}\n\n      {showShippedDateModal && (\n        <ChooseDateModal\n          header=\"shipped order label\"\n          msg=\"shipped confirm msg\"\n          closeModal={() => setShowShippedDateModal(false)}\n          handler={shippedHandler}\n          withTime={true}\n        />\n      )}\n\n      {showConfirmDateModal && (\n        <ChooseDateModal\n          header=\"confirm order label\"\n          msg=\"confirm order confirm msg\"\n          closeModal={() => setShowConfirmDateModal(false)}\n          handler={confirmOrderHanlder}\n        />\n      )}\n\n      {showConfirmDontServerModal && (\n        <Modal\n          header={t(\"will dont serve label\")}\n          closeModal={() => setShowConfirmDontServeModal(false)}\n          small={true}\n          cancelLabel=\"cancel\"\n          okLabel=\"ok\"\n          okModal={() => {\n            warehouseDontServeHanlder();\n            setShowConfirmDontServeModal(false);\n          }}\n        >\n          <p>{t(\"dont serve confirm msg\")}</p>\n        </Modal>\n      )}\n    </ActionBar>\n  );\n};\n\nexport default OrderDetailsActions;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// components\nimport OrderDetailsActions from \"../../components/order-details-actions/order-details-actions.component\";\nimport MainContentContainer from \"../../components/main-content-container/main-content-container.component\";\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Header from \"../../components/header/header.component\";\nimport Basket from \"../../components/basket/basket.component\";\nimport Toast from \"../../components/toast/toast.component\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { updateBasketOrder } from \"../../redux/orders/ordersSlice\";\n\n// constants and utils\nimport { BASEURL, Colors, OrdersStatusOptions } from \"../../utils/constants\";\n\nconst BasketOrderDetailsPage = ({ onSelectedChange }) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const orderId = location?.search.slice(1);\n\n  const dispatch = useDispatch();\n\n  // selectors\n  const { token } = useSelector(selectUserData);\n  // const { status } = useSelector(selectBasketOrders);\n\n  // own states\n  const [orderDetails, setOrderDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [emptyMsg, setEmptyMsg] = useState(\"\");\n  const [changeStatusSuccessMsg, setChangeStatusSuccessMsg] = useState(\"\");\n  const [changeStatusFailedMsg, setChangeStatusFailedMsg] = useState(\"\");\n\n  const getOrderDetails = async () => {\n    setEmptyMsg(\"\");\n    setLoading(true);\n    axios\n      .get(`${BASEURL}/ordered-baskets/details?id=${orderId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        if (response.data.data.order === null) {\n          setEmptyMsg(\"order-deleted\");\n        } else {\n          setOrderDetails(response.data.data.basketOrder);\n        }\n      })\n      .catch((err) => {\n        setEmptyMsg(\"order-details-error\");\n      });\n\n    setLoading(false);\n  };\n\n  const warehouseDontServeHanlder = () => {\n    dispatch(\n      updateBasketOrder({\n        obj: {\n          status: OrdersStatusOptions.WILL_DONT_SERVER,\n          couldNotDeliverDate: Date.now(),\n        },\n        id: orderId,\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeStatusSuccessMsg(\"change-order-status-success\");\n        getOrderDetails();\n      })\n      .catch(() => {\n        setChangeStatusFailedMsg(\"change-order-status-failed\");\n      });\n  };\n\n  const confirmOrderHanlder = (date) => {\n    const confirmDate = date ? new Date(date) : new Date();\n\n    dispatch(\n      updateBasketOrder({\n        obj: {\n          status: OrdersStatusOptions.CONFIRM,\n          confirmDate: confirmDate,\n        },\n        id: orderId,\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeStatusSuccessMsg(\"change-order-status-success\");\n        getOrderDetails();\n      })\n      .catch(() => {\n        setChangeStatusFailedMsg(\"change-order-status-failed\");\n      });\n  };\n\n  const devlierHandler = (date, time) => {\n    const deliverDate = date ? new Date(date) : new Date();\n    const deliverTime = time ? time : \"\";\n\n    dispatch(\n      updateBasketOrder({\n        obj: {\n          status: OrdersStatusOptions.DELIVERY,\n          deliverDate,\n          deliverTime,\n        },\n        id: orderId,\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeStatusSuccessMsg(\"change-order-status-success\");\n        getOrderDetails();\n      })\n      .catch(() => {\n        setChangeStatusFailedMsg(\"change-order-status-failed\");\n      });\n  };\n\n  const shippedHandler = (date, time) => {\n    const shippedDate = date ? new Date(date) : null;\n    const shippedTime = time ? time : \"\";\n\n    dispatch(\n      updateBasketOrder({\n        obj: {\n          status: OrdersStatusOptions.SHIPPING,\n          shippedDate,\n          shippedTime,\n        },\n        id: orderId,\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        setChangeStatusSuccessMsg(\"change-order-status-success\");\n        getOrderDetails();\n      })\n      .catch(() => {\n        setChangeStatusFailedMsg(\"change-order-status-failed\");\n      });\n  };\n\n  useEffect(() => {\n    getOrderDetails();\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loader allowCancel={false} />\n      ) : (\n        <>\n          {orderDetails ? (\n            <>\n              <Header\n                title=\"special-order-details-header\"\n                refreshHandler={getOrderDetails}\n              />\n\n              {orderDetails && (\n                <OrderDetailsActions\n                  orderDetails={orderDetails}\n                  warehouseDontServeHanlder={warehouseDontServeHanlder}\n                  devlierHandler={devlierHandler}\n                  confirmOrderHanlder={confirmOrderHanlder}\n                  shippedHandler={shippedHandler}\n                />\n              )}\n\n              <p\n                style={{\n                  textAlign: \"center\",\n                  color: Colors.SUCCEEDED_COLOR,\n                  textDecoration: \"underline\",\n                }}\n              >\n                <label>{t(orderDetails.status)}</label>\n                {orderDetails.status ===\n                  OrdersStatusOptions.WILL_DONT_SERVER && (\n                  <label>\n                    {orderDetails.couldNotDeliverDate.split(\"T\")[0]}\n                  </label>\n                )}\n                {orderDetails.status === OrdersStatusOptions.CONFIRM && (\n                  <label>{orderDetails.confirmDate.split(\"T\")[0]}</label>\n                )}\n                {orderDetails.status === OrdersStatusOptions.DELIVERY && (\n                  <label>\n                    {orderDetails.deliverDate?.split(\"T\")[0]}{\" \"}\n                    {orderDetails.deliverTime\n                      ? `---${t(\"time\")}: ${orderDetails.deliverTime}`\n                      : \"\"}\n                  </label>\n                )}\n                {orderDetails.status === OrdersStatusOptions.SHIPPING && (\n                  <label>\n                    {orderDetails.shippedDate\n                      ? orderDetails.shippedDate.split(\"T\")[0]\n                      : t(\"shipped done\")}\n                    {orderDetails.shippedTime\n                      ? `---${t(\"time\")}: ${orderDetails.shippedTime}`\n                      : \"\"}\n                  </label>\n                )}\n              </p>\n\n              <MainContentContainer>\n                {orderDetails ? (\n                  <>\n                    <Basket\n                      basket={orderDetails.basket}\n                      editable={false}\n                      forRead={true}\n                    />\n                  </>\n                ) : (\n                  <NoContent msg={t(emptyMsg)} />\n                )}\n              </MainContentContainer>\n            </>\n          ) : (\n            <></>\n          )}\n        </>\n      )}\n      {/* {status === \"loading\" && <Loader allowCancel={false} />} */}\n\n      {changeStatusSuccessMsg && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(changeStatusSuccessMsg)}\n          actionAfterTimeout={() => setChangeStatusSuccessMsg(\"\")}\n        />\n      )}\n\n      {changeStatusFailedMsg && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(changeStatusFailedMsg)}\n          actionAfterTimeout={() => setChangeStatusFailedMsg(\"\")}\n        />\n      )}\n    </>\n  );\n};\n\nexport default BasketOrderDetailsPage;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["OrderDetailsInfoModal","orderDetails","close","t","useTranslation","header","closeModal","cancelLabel","small","label","value","pharmacy","name","certificateName","addressDetails","mobile","warehouse","formatDate","Date","createdAt","totalInvoicePrice","formatNumber","memo","msg","handler","withTime","useState","disableDate","setDisableDate","disableTime","setDisableTime","date","setDate","time","setTime","okLabel","okModal","undefined","className","styles","type","checked","onChange","id","htmlFor","disabled","e","target","computeTotalPrice","data","total","forEach","item","qty","price","bonus","bonusType","OfferTypes","ExportCSV","csvData","fileName","selected","foreColor","Colors","tooltip","icon","onclick","jsonData","map","d","nameAr","الشركة","company","formula","العيار","caliber","التعبئة","packing","customer_price","الكمية","العرض","wb","Sheets","XLSX","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","withBackground","text","warehouseDontServeHanlder","devlierHandler","confirmOrderHanlder","shippedHandler","withSaveOption","user","useSelector","selectUser","showOrderDetails","setShowOrderDetails","showDevliverDateModal","setShowDeliverDateModal","showConfirmDontServerModal","setShowConfirmDontServeModal","showConfirmDateModal","setShowConfirmDateModal","showShippedDateModal","setShowShippedDateModal","color","UserTypeConstants","items","toLocaleDateString","onSelectedChange","location","useLocation","orderId","search","slice","dispatch","useDispatch","token","selectUserData","setOrderDetails","loading","setLoading","emptyMsg","setEmptyMsg","changeStatusSuccessMsg","setChangeStatusSuccessMsg","changeStatusFailedMsg","setChangeStatusFailedMsg","getOrderDetails","axios","BASEURL","headers","Authorization","then","response","order","basketOrder","catch","err","useEffect","window","scrollTo","allowCancel","title","refreshHandler","updateBasketOrder","obj","status","OrdersStatusOptions","couldNotDeliverDate","now","unwrapResult","deliverDate","deliverTime","confirmDate","shippedDate","shippedTime","style","textAlign","textDecoration","split","basket","editable","forRead","bgColor","toastText","actionAfterTimeout","autoBom","console","test","MouseEvent","document","self","g","global","navigator","HTMLAnchorElement","b","setTimeout","f","open","i","saveAs","module"],"sourceRoot":""}