{"version":3,"file":"static/js/1349.2e0e44dc.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","webpack://pharmacy-frontend/./src/components/main-content-container/main-content-container.module.scss?3a38","components/main-content-container/main-content-container.component.jsx","webpack://pharmacy-frontend/./src/components/cart-item-card/cart-item-card.module.scss?fb06","components/cart-item-card/cart-item-card.component.jsx","webpack://pharmacy-frontend/./src/components/cart-warehouse/cart-warehouse.module.scss?bc3e","components/cart-warehouse/cart-warehouse.component.jsx","pages/cart-page/cart-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../icon/icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ refreshHandler, title, count }) {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <div className={styles.header}>\n      <p>\n        {t(title)}\n        {count ? <span>{count}</span> : \"\"}\n      </p>\n      {refreshHandler && (\n        <Icon\n          selected={false}\n          foreColor={Colors.WHITE_COLOR}\n          tooltip={t(\"refresh\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n        />\n      )}\n      <Icon\n        onclick={() => {\n          history.goBack();\n        }}\n        icon={() => <IoMdArrowRoundBack />}\n        foreColor={Colors.WHITE_COLOR}\n      />\n    </div>\n  );\n}\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"main_content_container\":\"main-content-container_main_content_container__Aihvg\"};","import React from \"react\";\n\nimport styles from \"./main-content-container.module.scss\";\n\nconst MainContentContainer = ({ children }) => {\n  return <div className={styles.main_content_container}>{children}</div>;\n};\n\nexport default MainContentContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"cart-item-card_small_font__aBnOR\",\"item_row\":\"cart-item-card_item_row__3v7F4\",\"row\":\"cart-item-card_row__altFb\",\"additional_container\":\"cart-item-card_additional_container__BAxKh\",\"label\":\"cart-item-card_label__vOnNA\",\"grey_bg\":\"cart-item-card_grey_bg__K-p66\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport ItemNames from \"../item-names/item-names.component\";\nimport Icon from \"../icon/icon.component\";\n\n// react icons\nimport {\n  RiArrowDropLeftFill,\n  RiArrowDropRightFill,\n  RiDeleteBin5Fill,\n} from \"react-icons/ri\";\n\n// redux stuff\nimport { useDispatch } from \"react-redux\";\nimport {\n  decreaseItemQty,\n  increaseItemQty,\n  removeItemFromCart,\n} from \"../../redux/cart/cartSlice\";\n\n// styles\nimport styles from \"./cart-item-card.module.scss\";\n\n// constants\nimport { Colors, formatNumber, OfferTypes } from \"../../utils/constants\";\n\nfunction CartItemCard({ cartItem, inOrderDetails, index, iconColor }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const increaseHandler = () => {\n    if (\n      cartItem.warehouse.maxQty !== 0 &&\n      cartItem.qty < cartItem.warehouse.maxQty\n    )\n      dispatch(increaseItemQty(cartItem.key));\n    else if (cartItem.warehouse.maxQty === 0) {\n      dispatch(increaseItemQty(cartItem.key));\n    }\n  };\n\n  const decreaseHandler = () => {\n    if (cartItem.qty > 1) dispatch(decreaseItemQty(cartItem.key));\n  };\n\n  return (\n    <>\n      <div\n        className={[\n          styles.item_row,\n          index % 2 === 0 ? styles.grey_bg : \"\",\n        ].join(\" \")}\n      >\n        <div className={styles.row}>\n          <div style={{ flex: 1 }}>\n            <ItemNames flexDirection=\"column\" item={cartItem.item} />\n          </div>\n\n          <div className={styles.additional_container}>\n            {!inOrderDetails ? (\n              <Icon\n                onclick={decreaseHandler}\n                icon={() => (\n                  <RiArrowDropRightFill\n                    color={iconColor ? iconColor : Colors.MAIN_COLOR}\n                    size={32}\n                  />\n                )}\n              />\n            ) : (\n              <label style={{ width: \"32px\" }}></label>\n            )}\n\n            <label className={styles.label}>{cartItem.qty}</label>\n\n            {!inOrderDetails ? (\n              <Icon\n                onclick={increaseHandler}\n                icon={() => (\n                  <RiArrowDropLeftFill\n                    color={iconColor ? iconColor : Colors.MAIN_COLOR}\n                    size={32}\n                  />\n                )}\n              />\n            ) : (\n              <label style={{ width: \"32px\" }}></label>\n            )}\n\n            <label className={styles.label}>\n              {cartItem.bonus && cartItem.bonus}{\" \"}\n              {cartItem.bonus\n                ? cartItem.bonusType === OfferTypes.PERCENTAGE\n                  ? t(\"percentage\")\n                  : t(\"piece\")\n                : \"\"}\n            </label>\n\n            <label className={styles.label}>\n              {cartItem.point} {t(\"point\")}\n            </label>\n\n            <label className={styles.label}>\n              {formatNumber(cartItem.item.price)}\n            </label>\n\n            <label className={styles.label}>\n              {formatNumber(\n                cartItem.qty *\n                  (inOrderDetails ? cartItem.price : cartItem.item.price) -\n                  (cartItem.bonus &&\n                  cartItem.bonusType === OfferTypes.PERCENTAGE\n                    ? (cartItem.qty *\n                        (inOrderDetails\n                          ? cartItem.price\n                          : cartItem.item.price) *\n                        cartItem.bonus) /\n                      100\n                    : 0)\n              )}\n            </label>\n          </div>\n        </div>\n        {!inOrderDetails && (\n          <Icon\n            foreColor={Colors.MAIN_COLOR}\n            icon={() => (\n              <RiDeleteBin5Fill size={24} color={Colors.FAILED_COLOR} />\n            )}\n            onclick={() => dispatch(removeItemFromCart(cartItem))}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default CartItemCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"cart-warehouse_small_font__xxo1Y\",\"container\":\"cart-warehouse_container__dgErK\",\"grey_bg\":\"cart-warehouse_grey_bg__LdOX3\",\"additional_warehouse_info_div\":\"cart-warehouse_additional_warehouse_info_div__vkd+o\",\"pay_label\":\"cart-warehouse_pay_label__MWh1y\",\"header\":\"cart-warehouse_header__XorCl\",\"name\":\"cart-warehouse_name__UjOCO\",\"icon\":\"cart-warehouse_icon__D-CwQ\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetCartItems, selectCartItems } from \"../../redux/cart/cartSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport { changeMyPoints, selectUserData } from \"../../redux/auth/authSlice\";\nimport { addStatistics } from \"../../redux/statistics/statisticsSlice\";\nimport { saveOrder, setRefresh } from \"../../redux/orders/ordersSlice\";\n\n// components\nimport Modal from \"../../modals/modal/modal.component\";\nimport Loader from \"../action-loader/action-loader.component\";\nimport ButtonWithIcon from \"../button-with-icon/button-with-icon.component\";\nimport CartItemCard from \"../cart-item-card/cart-item-card.component\";\n\n// icon\nimport { MdExpandMore, MdExpandLess } from \"react-icons/md\";\n\n// styles\nimport styles from \"./cart-warehouse.module.scss\";\n\n// constants\nimport {\n  Colors,\n  formatNumber,\n  OfferTypes,\n  OrdersStatusOptions,\n} from \"../../utils/constants\";\n\nfunction CartWarehouse({ warehouse, wIndex }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { token, user } = useSelector(selectUserData);\n  const cartItems = useSelector(selectCartItems);\n\n  // own state\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showFailedModal, setShowFailedModal] = useState(false);\n  const [showLoadingModal, setShowLoadingModal] = useState(false);\n  const [showConfirmSaveOrder, setShowConfirmSaveOrder] = useState(false);\n  const [showWarningMsg, setShowWarningMsg] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n\n  const computeTotalPrice = (() => {\n    let invoiceTotal = 0;\n    let itemsPoints = 0;\n\n    cartItems\n      .filter((ci) => ci.warehouse.name === warehouse.name)\n      .forEach((ci) => {\n        invoiceTotal =\n          invoiceTotal +\n          ci.qty * ci.item.price -\n          (ci.bonus && ci.bonusType === OfferTypes.PERCENTAGE\n            ? (ci.qty * ci.item.price * ci.bonus) / 100\n            : 0);\n\n        itemsPoints = itemsPoints + ci.point;\n      });\n\n    return { invoiceTotal, itemsPoints };\n  })();\n\n  const numbersOfPoint =\n    warehouse.includeInPointSystem &&\n    warehouse.pointForAmount &&\n    warehouse.amountToGetPoint\n      ? Math.floor(\n          computeTotalPrice.invoiceTotal / warehouse.amountToGetPoint\n        ) * warehouse.pointForAmount\n      : 0;\n\n  const checkOrderHandler = () => {\n    if (\n      warehouse.invoiceMinTotal > 0 &&\n      computeTotalPrice.invoiceTotal < warehouse.invoiceMinTotal\n    ) {\n      setShowWarningMsg(true);\n      return;\n    }\n\n    setShowConfirmSaveOrder(true);\n  };\n\n  const sendOrderHandler = () => {\n    // check internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setShowConfirmSaveOrder(false);\n    setShowLoadingModal(true);\n\n    let obj = {\n      pharmacy: user._id,\n      warehouse: warehouse._id,\n      items: cartItems\n        .filter((ci) => ci.warehouse.name === warehouse.name)\n        .map((ci) => {\n          return {\n            item: ci.item._id,\n            qty: ci.qty,\n            bonus: ci.bonus,\n            bonusType: ci.bonusType,\n            price: ci.item.price,\n            points: ci.point,\n          };\n        }),\n      totalInvoicePrice: computeTotalPrice.invoiceTotal,\n      totalInvoicePoints: numbersOfPoint + computeTotalPrice.itemsPoints,\n      status: OrdersStatusOptions.SENT_BY_PHARMACY,\n    };\n\n    dispatch(saveOrder({ obj, token }))\n      .then(unwrapResult)\n      .then(async () => {\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetUser: null,\n              action: \"user-made-an-order\",\n            },\n            token,\n          })\n        );\n\n        if (numbersOfPoint + computeTotalPrice.itemsPoints > 0) {\n          try {\n            dispatch(\n              changeMyPoints({\n                token,\n                obj: {\n                  id: user._id,\n                  amount: numbersOfPoint + computeTotalPrice.itemsPoints,\n                },\n              })\n            );\n          } catch (err) {}\n        }\n\n        setShowLoadingModal(false);\n        setShowSuccessModal(true);\n      })\n      .catch(() => {\n        setShowLoadingModal(false);\n        setShowFailedModal(true);\n      });\n    dispatch(setRefresh(true));\n  };\n\n  return (\n    <div\n      className={[\n        styles.container,\n        wIndex % 2 === 0 ? styles.grey_bg : \"\",\n      ].join(\" \")}\n    >\n      <div className={styles.header}>\n        <div className={styles.name} onClick={() => setExpanded(!expanded)}>\n          <label className={styles.icon}>\n            {expanded ? <MdExpandMore /> : <MdExpandLess />}\n          </label>\n          <label>{warehouse.name}</label>\n        </div>\n        <label>\n          <ButtonWithIcon\n            text={t(\"send order\")}\n            bgColor={Colors.MAIN_COLOR}\n            action={checkOrderHandler}\n          />\n        </label>\n      </div>\n\n      {expanded && (\n        <>\n          {cartItems\n            .filter((ci) => ci.warehouse.name === warehouse.name)\n            .map((ci, index) => (\n              <CartItemCard\n                key={index}\n                cartItem={ci}\n                inOrderDetails={false}\n                index={index}\n                iconColor={\n                  wIndex % 2 === 0 ? Colors.WHITE_COLOR : Colors.MAIN_COLOR\n                }\n              />\n            ))}\n        </>\n      )}\n\n      <div className={styles.additional_warehouse_info_div}>\n        <label>\n          {t(\"total invoice price\")}:{\" \"}\n          {formatNumber(computeTotalPrice.invoiceTotal)}\n        </label>\n\n        {numbersOfPoint > 0 && (\n          <label>\n            {t(\"number of points that you get\")}:{\" \"}\n            {numbersOfPoint + computeTotalPrice.itemsPoints}\n          </label>\n        )}\n\n        {warehouse.costOfDeliver > 0 && (\n          <label>\n            {t(\"deliver cost\")}: {warehouse.costOfDeliver} %\n          </label>\n        )}\n\n        {warehouse.invoiceMinTotal > 0 && (\n          <label>\n            {t(\"minimum invoice cost\")}:{\" \"}\n            {formatNumber(warehouse.invoiceMinTotal)}\n          </label>\n        )}\n\n        {warehouse.fastDeliver && <label>{t(\"fast deliver\")}</label>}\n        {warehouse.payAtDeliver && (\n          <label className={styles.pay_label}>\n            {t(\"dear partner pay when deliver\")}\n          </label>\n        )}\n      </div>\n\n      {showLoadingModal && <Loader allowCancel={false} />}\n\n      {showSuccessModal && (\n        <Modal\n          closeModal={() => {\n            setShowSuccessModal(false);\n            dispatch(resetCartItems(warehouse));\n          }}\n          header={t(\"send order\")}\n          cancelLabel={t(\"close\")}\n          small={true}\n          green={true}\n        >\n          {t(\"send order succeeded\")}\n        </Modal>\n      )}\n\n      {showFailedModal && (\n        <Modal\n          closeModal={() => {\n            setShowFailedModal(false);\n          }}\n          header={t(\"send order\")}\n          cancelLabel={t(\"close\")}\n          small={true}\n        >\n          {t(\"send order failed\")}\n        </Modal>\n      )}\n\n      {showConfirmSaveOrder && (\n        <Modal\n          closeModal={() => {\n            setShowConfirmSaveOrder(false);\n          }}\n          header={t(\"send order\")}\n          cancelLabel={t(\"cancel\")}\n          okLabel={t(\"send order\")}\n          okModal={sendOrderHandler}\n          small={true}\n        >\n          {t(\"confirm save order\")}\n        </Modal>\n      )}\n\n      {showWarningMsg && (\n        <Modal\n          closeModal={() => {\n            setShowWarningMsg(false);\n          }}\n          header={t(\"minimum invoice cost\")}\n          cancelLabel={t(\"cancel\")}\n          small={true}\n        >\n          {t(\"minimum invoice cost error\")}\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default CartWarehouse;\n","// YOU HAVE TO BE A PHARMACY USER TO SHOW THIS COMPONENT\n\n// this component page display the items you buy divided by warehouse name\n// if the cart is empty display an empty icon\n\n// this component page depends on the cartSlice that contains\n// 1- cartWarehouse: all warehouse that user buy medicine from it\n// 2- cartItems: all the item that user buy it\n\nimport React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux-stuff\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../redux/auth/authSlice\";\nimport { selectCartWarehouse } from \"../../redux/cart/cartSlice\";\n\n// components\nimport MainContentContainer from \"../../components/main-content-container/main-content-container.component\";\nimport CartWarehouse from \"../../components/cart-warehouse/cart-warehouse.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport Header from \"../../components/header/header.component\";\n\n// constants and colors\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nfunction CartPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n\n  // selectors\n  // get the logged user from redux store\n  const user = useSelector(selectUser);\n  // get the cart warehouses from redux store\n  const cartWarehouse = useSelector(selectCartWarehouse);\n\n  useEffect(() => {\n    onSelectedChange();\n\n    window.scrollTo(0, 0);\n  }, []);\n\n  // if there is no logged user or user type is not pharmacy\n  // redirect to the main page\n  return user && user.type === UserTypeConstants.PHARMACY ? (\n    <>\n      <Header title=\"cart\" />\n\n      <MainContentContainer>\n        {/* if cart contains an item or more */}\n        {cartWarehouse.length > 0 && (\n          <div>\n            {cartWarehouse.map((w, index) => (\n              <CartWarehouse warehouse={w} key={index} wIndex={index} />\n            ))}\n          </div>\n        )}\n\n        {/* if the cart is empty */}\n        {cartWarehouse.length === 0 && (\n          <>\n            <NoContent msg={t(\"empty-cart\")} />\n          </>\n        )}\n      </MainContentContainer>\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default CartPage;\n"],"names":["refreshHandler","title","count","history","useHistory","t","useTranslation","className","styles","selected","foreColor","Colors","tooltip","onclick","icon","goBack","children","cartItem","inOrderDetails","index","iconColor","dispatch","useDispatch","join","style","flex","flexDirection","item","width","qty","decreaseItemQty","key","color","size","warehouse","maxQty","increaseItemQty","bonus","bonusType","OfferTypes","point","formatNumber","price","removeItemFromCart","wIndex","isOnline","useSelector","selectOnlineStatus","selectUserData","token","user","cartItems","selectCartItems","useState","showSuccessModal","setShowSuccessModal","showFailedModal","setShowFailedModal","showLoadingModal","setShowLoadingModal","showConfirmSaveOrder","setShowConfirmSaveOrder","showWarningMsg","setShowWarningMsg","expanded","setExpanded","computeTotalPrice","invoiceTotal","itemsPoints","filter","ci","name","forEach","numbersOfPoint","includeInPointSystem","pointForAmount","amountToGetPoint","Math","floor","onClick","text","bgColor","action","invoiceMinTotal","map","costOfDeliver","fastDeliver","payAtDeliver","allowCancel","closeModal","resetCartItems","header","cancelLabel","small","green","okLabel","okModal","obj","pharmacy","_id","items","points","totalInvoicePrice","totalInvoicePoints","status","OrdersStatusOptions","saveOrder","then","unwrapResult","addStatistics","sourceUser","targetUser","changeMyPoints","id","amount","err","catch","setRefresh","changeOnlineMsg","onSelectedChange","selectUser","cartWarehouse","selectCartWarehouse","useEffect","window","scrollTo","type","UserTypeConstants","length","w","msg","to"],"sourceRoot":""}