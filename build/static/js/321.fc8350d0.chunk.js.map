{"version":3,"file":"static/js/321.fc8350d0.chunk.js","mappings":"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","sources":["components/no-content/no-content.component.jsx","webpack://pharmacy-frontend/./src/components/partner-card/partner-card.module.scss?dc0e","components/partner-card/partner-card.component.jsx","components/search-container/search-container.component.jsx","webpack://pharmacy-frontend/./src/components/search-input/search-input.module.scss?50a3","components/search-input/search-input.component.jsx","components/warehouses-header/warehouses-header.component.jsx","pages/warehouses-page/warehouses-page.component.jsx","webpack://pharmacy-frontend/./src/components/search-container/search-container.module.scss?b7db"],"sourcesContent":["import React from \"react\";\n\nimport generalStyles from \"../../style.module.scss\";\n\nfunction NoContent({ msg }) {\n  return (\n    <div\n      className={[generalStyles.no_content_div, generalStyles.fc_white].join(\n        \" \"\n      )}\n    >\n      <p className={generalStyles.fc_white}>{msg}</p>\n    </div>\n  );\n}\n\nexport default NoContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"partner_container\":\"partner-card_partner_container__VB59l\",\"full_width\":\"partner-card_full_width__CUiS6\",\"partner_logo\":\"partner-card_partner_logo__zh12g\",\"partner_name\":\"partner-card_partner_name__jXB4j\",\"from_top\":\"partner-card_from_top__OssbS\",\"name\":\"partner-card_name__xgWNa\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\nimport Logo from \"../../logo01.png\";\n\n// components\nimport Button from \"../button/button.component\";\n\n// react icons\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\nimport { VscLoading } from \"react-icons/vsc\";\n\n// redux-stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addFavorite,\n  selectFavoritesPartners,\n  removeFavorite,\n  selectFavoritesError,\n} from \"../../redux/favorites/favoritesSlice\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  addStatistics,\n  statisticsCompanySelected,\n  statisticsUserFavorites,\n} from \"../../redux/statistics/statisticsSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\nimport { selectSettings } from \"../../redux/settings/settingsSlice\";\nimport {\n  resetMedicines,\n  setSearchCompanyName,\n  setSearchWarehouseName,\n} from \"../../redux/medicines/medicinesSlices\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./partner-card.module.scss\";\n\n// constants and utils\nimport {\n  Colors,\n  SERVER_URL,\n  UserTypeConstants,\n} from \"../../utils/constants.js\";\n\nfunction PartnerCard({ partner, fullWidth }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // selectors\n  const {\n    settings: { showWarehouseItem },\n  } = useSelector(selectSettings);\n  const isOnline = useSelector(selectOnlineStatus);\n  const favorites = useSelector(selectFavoritesPartners);\n  const favoritesError = useSelector(selectFavoritesError);\n  const { token, user } = useSelector(selectUserData);\n\n  // own state\n  // state to display a loader icon when partner dispatch addToFavorite or removeFromFavorite\n  const [changeFavoriteLoading, setChangeFavoriteLoading] = useState(false);\n\n  // determine if the partner can see the medicines in specific warehouse\n  const allowShowingWarehouseMedicines =\n    user.type === UserTypeConstants.ADMIN ||\n    partner.type === UserTypeConstants.COMPANY ||\n    (partner.type === UserTypeConstants.WAREHOUSE &&\n      showWarehouseItem &&\n      partner.allowShowingMedicines);\n\n  // method to handle add company to partner's favorite\n  const addPartnerToFavoriteHandler = () => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(addFavorite({ obj: { favoriteId: partner._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        setChangeFavoriteLoading(false);\n        dispatch(\n          statisticsUserFavorites({ obj: { partnerId: partner._id }, token })\n        );\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetUser: partner._id,\n              action: \"user-added-to-favorite\",\n            },\n            token,\n          })\n        );\n      })\n      .catch(() => {\n        setChangeFavoriteLoading(false);\n      });\n  };\n\n  // method to handle remove company from partner's favorite\n  const removePartnerFromFavoriteHandler = () => {\n    // check the internet connection\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    setChangeFavoriteLoading(true);\n\n    dispatch(removeFavorite({ obj: { favoriteId: partner._id }, token }))\n      .then(unwrapResult)\n      .then(() => {\n        changeFavoriteLoading(false);\n      })\n      .catch(() => setChangeFavoriteLoading(false));\n  };\n\n  const partnerCardClickHandler = () => {\n    if (\n      partner.type === UserTypeConstants.WAREHOUSE &&\n      user.type === UserTypeConstants.WAREHOUSE\n    ) {\n      return;\n    }\n\n    if (allowShowingWarehouseMedicines) {\n      // if the partner type is pharmacy or normal, change the selectedCount\n      // and selectedDates for this company\n      if (\n        user.type === UserTypeConstants.PHARMACY ||\n        user.type === UserTypeConstants.GUEST\n      ) {\n        dispatch(\n          statisticsCompanySelected({\n            obj: { companyId: partner._id },\n            token,\n          })\n        );\n        dispatch(\n          addStatistics({\n            obj: {\n              sourceUser: user._id,\n              targetUser: partner._id,\n              action: \"choose-company\",\n            },\n            token,\n          })\n        );\n      }\n      dispatch(resetMedicines());\n\n      if (partner.type === UserTypeConstants.COMPANY) {\n        dispatch(setSearchCompanyName(partner.name));\n      }\n\n      if (partner.type === UserTypeConstants.WAREHOUSE) {\n        dispatch(setSearchWarehouseName(partner.name));\n      }\n      history.push(\"/medicines\");\n    }\n  };\n\n  return (\n    <div\n      className={[\n        styles.partner_container,\n        fullWidth ? styles.full_width : \"\",\n      ].join(\" \")}\n    >\n      <p className={styles.partner_name}>{partner.name}</p>\n\n      {partner.logo_url?.length > 0 ? (\n        <img\n          src={`${SERVER_URL}/profiles/${partner.logo_url}`}\n          className={styles.partner_logo}\n          alt=\"thumb\"\n        />\n      ) : (\n        <img src={Logo} className={styles.partner_logo} alt=\"thumb\" />\n      )}\n\n      <div className={styles.from_top}>\n        {favoritesError === \"\" ? (\n          changeFavoriteLoading ? (\n            <div\n              className={[generalStyles.icon, generalStyles.fc_yellow].join(\n                \" \"\n              )}\n            >\n              <VscLoading className={generalStyles.loading} size={20} />\n            </div>\n          ) : (\n            <div\n              className={[generalStyles.icon, generalStyles.fc_yellow].join(\n                \" \"\n              )}\n            >\n              {favorites &&\n              favorites\n                .map((favorite) => favorite._id)\n                .includes(partner._id) ? (\n                <AiFillStar\n                  size={24}\n                  onClick={removePartnerFromFavoriteHandler}\n                />\n              ) : (\n                <AiOutlineStar\n                  size={24}\n                  onClick={addPartnerToFavoriteHandler}\n                />\n              )}\n            </div>\n          )\n        ) : null}\n\n        {(partner.type === UserTypeConstants.COMPANY ||\n          (partner.type === UserTypeConstants.WAREHOUSE &&\n            user.type !== UserTypeConstants.WAREHOUSE)) && (\n          <div>\n            <Button\n              action={partnerCardClickHandler}\n              text={t(\"medicines\")}\n              bgColor={Colors.FAILED_COLOR}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PartnerCard;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-icons\nimport { VscSettings } from \"react-icons/vsc\";\n\n// styles\nimport styles from \"./search-container.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\n\nfunction SearchContainer({ children, searchAction }) {\n  const { t } = useTranslation();\n\n  let childrenArray = React.Children.toArray(children);\n  const [moreSearchOptions, setMoreSearchOptions] = useState(false);\n\n  return (\n    <div\n      className={[\n        styles.search_container,\n        styles.expanded,\n        moreSearchOptions ? styles.expanded_with_options : \"\",\n      ].join(\" \")}\n    >\n      <div className={styles.expanded_div}>\n        {true && (\n          <>\n            <div style={{ flex: 1 }}>\n              {childrenArray[0]}\n              {moreSearchOptions && childrenArray.length > 1\n                ? childrenArray.map((child, index) => {\n                    if (index > 0) return child;\n                    return null;\n                  })\n                : null}\n\n              {moreSearchOptions && (\n                <button\n                  onClick={() => {\n                    searchAction();\n                    setMoreSearchOptions(false);\n                  }}\n                  style={{\n                    marginBlockStart: \"4px\",\n                    marginInline: \"auto\",\n                    width: \"50%\",\n                  }}\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_main,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              )}\n            </div>\n\n            {childrenArray.length > 1 && (\n              <div\n                className={[generalStyles.icon].join(\" \")}\n                onClick={() => setMoreSearchOptions(!moreSearchOptions)}\n              >\n                <VscSettings />\n              </div>\n            )}\n\n            {childrenArray.length === 1 && (\n              <div\n                className={[generalStyles.icon, generalStyles.margin_h_4].join(\n                  \" \"\n                )}\n                onClick={() => {\n                  searchAction();\n                  setMoreSearchOptions(false);\n                }}\n              >\n                <button\n                  className={[\n                    generalStyles.button,\n                    generalStyles.bg_secondary,\n                    generalStyles.fc_white,\n                    generalStyles.block,\n                    generalStyles.padding_v_6,\n                    generalStyles.padding_h_8,\n                  ].join(\" \")}\n                >\n                  {t(\"search\")}\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"input_div\":\"search-input_input_div__4KoDe\",\"icon_close\":\"search-input_icon_close__TC1nF\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nimport styles from \"./search-input.module.scss\";\n\nfunction SearchInput({\n  type,\n  label,\n  id,\n  value,\n  onchange,\n  placeholder,\n  onEnterPress,\n  resetField,\n  onkeyup,\n}) {\n  const { t } = useTranslation();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (onEnterPress) {\n        onEnterPress();\n      }\n    }\n  };\n\n  return (\n    <div className={styles.input_div}>\n      {label && <label htmlFor={id}>{t(label)}</label>}\n\n      <input\n        placeholder={placeholder ? t(`${placeholder}`) : \"\"}\n        id={id}\n        type={type}\n        value={value}\n        onChange={onchange}\n        onKeyPress={handleKeyPress}\n        onKeyUp={onkeyup && onkeyup}\n      />\n      {resetField && value && (\n        <AiFillCloseCircle\n          onClick={() => resetField(id)}\n          className={styles.icon_close}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default SearchInput;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeDisplayType,\n  changeSearchCity,\n  changeSearchName,\n  changeShowFavorites,\n  resetWarehousePageState,\n  selectWarehousesPageState,\n} from \"../../redux/warehouse/warehousesSlice\";\nimport { selectFavoritesPartners } from \"../../redux/favorites/favoritesSlice\";\n\n// components\nimport SearchContainer from \"../search-container/search-container.component\";\nimport SearchInput from \"../search-input/search-input.component\";\nimport Icon from \"../action-icon/action-icon.component\";\nimport PartnerRow from \"../partner-row/partner-row.component\";\nimport CitiesDropDown from \"../cities-dropdown/cities-dropdown.component\";\n\n// react icons\nimport { RiRefreshLine } from \"react-icons/ri\";\nimport { AiFillAppstore, AiFillStar } from \"react-icons/ai\";\nimport { FaListUl } from \"react-icons/fa\";\nimport { VscClearAll } from \"react-icons/vsc\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants and utils\nimport { CitiesName, Colors, UserTypeConstants } from \"../../utils/constants\";\n\nfunction WarehousesHeader({ search, refreshHandler, count }) {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { searchName, searchCity, displayType, showFavorites } = useSelector(\n    selectWarehousesPageState\n  );\n  const favorites = useSelector(selectFavoritesPartners);\n\n  // when you change the selected city\n  const citiesNameChangeHandler = (val) => {\n    dispatch(changeSearchCity(val));\n  };\n\n  // select card as display type\n  const selectCardDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"card\"));\n    dispatch(changeShowFavorites(false));\n  };\n\n  // select list as display type\n  const selectListDisplayTypeHandler = () => {\n    dispatch(changeDisplayType(\"list\"));\n    dispatch(changeShowFavorites(false));\n  };\n\n  return (\n    <>\n      <SearchContainer searchAction={search}>\n        <SearchInput\n          label=\"user-name\"\n          id=\"search-name\"\n          type=\"text\"\n          value={searchName}\n          onchange={(e) => {\n            dispatch(changeSearchName(e.target.value));\n          }}\n          placeholder=\"search\"\n          onEnterPress={search}\n          resetField={() => dispatch(changeSearchName(\"\"))}\n        />\n\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            backgroundColor: Colors.WHITE_COLOR,\n            borderRadius: \"6px\",\n          }}\n        >\n          <CitiesDropDown\n            onSelectionChange={citiesNameChangeHandler}\n            defaultValue={{\n              value: searchCity,\n              label: t(searchCity.toLowerCase()),\n            }}\n            caption=\"user-city\"\n          />\n        </div>\n      </SearchContainer>\n\n      {/* action's buttons */}\n      <div\n        className={[generalStyles.actions, generalStyles.margin_v_4].join(\" \")}\n      >\n        {/* refresh */}\n        <Icon\n          foreColor={Colors.GREY_COLOR}\n          tooltip={t(\"refresh-tooltip\")}\n          onclick={refreshHandler}\n          icon={() => <RiRefreshLine />}\n          withBackground={true}\n        />\n\n        {/* clear search filter */}\n        {(searchName.length > 0 || searchCity !== CitiesName.ALL) && (\n          <Icon\n            selected={false}\n            foreColor={Colors.GREY_COLOR}\n            tooltip={t(\"clear-filter-tooltip\")}\n            onclick={() => {\n              dispatch(resetWarehousePageState());\n              refreshHandler();\n              dispatch(changeShowFavorites(false));\n            }}\n            icon={() => <VscClearAll />}\n            withBackground={true}\n          />\n        )}\n\n        {/* show favorites */}\n        <div className={generalStyles.relative}>\n          <Icon\n            foreColor={\n              showFavorites ? Colors.SUCCEEDED_COLOR : Colors.GREY_COLOR\n            }\n            tooltip={t(\"show-favorite-tooltip\")}\n            onclick={() => dispatch(changeShowFavorites(!showFavorites))}\n            icon={() => <AiFillStar />}\n            withBackground={true}\n          />\n\n          {showFavorites && (\n            <div\n              className={[\n                generalStyles.favorites_content,\n                generalStyles.bg_white,\n              ].join(\" \")}\n            >\n              {showFavorites &&\n                favorites\n                  .filter(\n                    (favorite) => favorite.type === UserTypeConstants.WAREHOUSE\n                  )\n                  .map((favorite) => (\n                    <PartnerRow\n                      key={favorite._id}\n                      partner={favorite}\n                      withoutBoxShadow={true}\n                    />\n                  ))}\n            </div>\n          )}\n        </div>\n\n        {/* display card option */}\n        <Icon\n          foreColor={\n            displayType === \"card\" ? Colors.SUCCEEDED_COLOR : Colors.GREY_COLOR\n          }\n          tooltip={t(\"show-item-as-card-tooltip\")}\n          onclick={selectCardDisplayTypeHandler}\n          icon={() => <AiFillAppstore />}\n          withBackground={true}\n        />\n\n        {/* display list option */}\n        <Icon\n          foreColor={\n            displayType === \"list\" ? Colors.SUCCEEDED_COLOR : Colors.GREY_COLOR\n          }\n          tooltip={t(\"show-item-as-row-tooltip\")}\n          onclick={selectListDisplayTypeHandler}\n          icon={() => <FaListUl />}\n          withBackground={true}\n        />\n\n        <Icon\n          withBackground={true}\n          tooltip={t(\"go-back\")}\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.GREY_COLOR}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default WarehousesHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router\";\nimport ReactLoading from \"react-loading\";\n\n// components\nimport PartnerRow from \"../../components/partner-row/partner-row.component\";\nimport PartnerCard from \"../../components/partner-card/partner-card.component\";\nimport Button from \"../../components/button/button.component\";\nimport Toast from \"../../components/toast/toast.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport WarehousesHeader from \"../../components/warehouses-header/warehouses-header.component\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getWarehouses,\n  resetWarehouse,\n  selectWarehouses,\n  changePage,\n  selectWarehousesPageState,\n  resetStatus,\n  changeShowFavorites,\n  cancelOperation,\n  changeSearchCity,\n} from \"../../redux/warehouse/warehousesSlice\";\nimport {\n  getFavorites,\n  resetFavorites,\n  selectFavorites,\n} from \"../../redux/favorites/favoritesSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// constants and utils\nimport { Colors, UserTypeConstants } from \"../../utils/constants.js\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\nfunction WarehousePage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { token, user } = useSelector(selectUserData);\n  const { warehouses, count, status, error } = useSelector(selectWarehouses);\n  const { displayType, page } = useSelector(selectWarehousesPageState);\n\n  // select favorites from favoriteSlice\n  const { error: favoriteError } = useSelector(selectFavorites);\n\n  const [favoritesError, setFavoritesError] = useState(favoriteError);\n\n  // handle search\n  const handleSearch = (page) => {\n    dispatch(changeShowFavorites());\n\n    if (\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.GUEST ||\n      user.type === UserTypeConstants.WAREHOUSE\n    ) {\n      dispatch(changeSearchCity(user.city));\n    }\n\n    dispatch(\n      getWarehouses({\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(changePage(page + 1));\n      });\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch(page);\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetWarehouse());\n    dispatch(changePage(1));\n    handleSearch(1);\n  };\n\n  const refreshHandler = () => {\n    dispatch(resetFavorites());\n    dispatch(getFavorites({ token }));\n    dispatch(resetWarehouse());\n    dispatch(changePage(1));\n    handleSearch(1);\n  };\n\n  useEffect(() => {\n    if (warehouses.length === 0) handleSearch(1);\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user &&\n    (user.type === UserTypeConstants.ADMIN ||\n      user.type === UserTypeConstants.PHARMACY ||\n      user.type === UserTypeConstants.COMPANY) ? (\n    <div className={generalStyles.container}>\n      <WarehousesHeader\n        count={count}\n        search={handleEnterPress}\n        refreshHandler={refreshHandler}\n      />\n\n      {/* display as list */}\n      {displayType === \"list\" &&\n        warehouses.map((warehouse) => (\n          <PartnerRow key={warehouse._id} partner={warehouse} />\n        ))}\n\n      {/* display as card */}\n      {displayType === \"card\" && (\n        <div\n          className={[\n            generalStyles.flex_container,\n            generalStyles.margin_top_10,\n          ].join(\" \")}\n        >\n          {warehouses.map((warehouse) => (\n            <PartnerCard key={warehouse._id} partner={warehouse} />\n          ))}\n        </div>\n      )}\n\n      {/* show loading indicator when data loading from db */}\n      {/* {status === \"loading\" && <Loader allowCancel={false} />} */}\n\n      {warehouses.length === 0 && status !== \"loading\" && (\n        <>\n          <NoContent msg={t(\"no-warehouses\")} />\n        </>\n      )}\n\n      {status === \"loading\" && (\n        <div className={generalStyles.flex_container}>\n          <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n        </div>\n      )}\n\n      {warehouses.length < count && (\n        <Button\n          text={t(\"more\")}\n          action={handleMoreResult}\n          bgColor={Colors.SECONDARY_COLOR}\n        />\n      )}\n\n      {warehouses.length === count && status !== \"loading\" && count !== 0 && (\n        <p\n          className={[generalStyles.center, generalStyles.fc_secondary].join(\n            \" \"\n          )}\n        >\n          {t(\"no-more\")}\n        </p>\n      )}\n\n      {error && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          actionAfterTimeout={() => {\n            dispatch(resetStatus());\n          }}\n        >\n          {t(error)}\n        </Toast>\n      )}\n\n      {favoritesError && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          actionAfterTimeout={() => {\n            setFavoritesError(\"\");\n          }}\n        >\n          {t(favoriteError)}\n        </Toast>\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n}\n\nexport default WarehousePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"search_container\":\"search-container_search_container__6isGM\",\"expanded\":\"search-container_expanded__79n+k\",\"expanded_div\":\"search-container_expanded_div__Hmmm1\",\"checkbox_div\":\"search-container_checkbox_div__RPj5T\"};"],"names":["msg","className","generalStyles","join","partner","fullWidth","t","useTranslation","history","useHistory","dispatch","useDispatch","showWarehouseItem","useSelector","selectSettings","settings","isOnline","selectOnlineStatus","favorites","selectFavoritesPartners","favoritesError","selectFavoritesError","selectUserData","token","user","useState","changeFavoriteLoading","setChangeFavoriteLoading","allowShowingWarehouseMedicines","type","UserTypeConstants","allowShowingMedicines","styles","name","logo_url","length","src","SERVER_URL","alt","Logo","size","map","favorite","_id","includes","onClick","removeFavorite","obj","favoriteId","then","unwrapResult","catch","changeOnlineMsg","addFavorite","statisticsUserFavorites","partnerId","addStatistics","sourceUser","targetUser","action","statisticsCompanySelected","companyId","resetMedicines","setSearchCompanyName","setSearchWarehouseName","push","text","bgColor","Colors","children","searchAction","childrenArray","React","moreSearchOptions","setMoreSearchOptions","style","flex","child","index","marginBlockStart","marginInline","width","label","id","value","onchange","placeholder","onEnterPress","resetField","onkeyup","htmlFor","onChange","onKeyPress","event","key","onKeyUp","search","refreshHandler","count","selectWarehousesPageState","searchName","searchCity","displayType","showFavorites","e","changeSearchName","target","display","justifyContent","backgroundColor","borderRadius","onSelectionChange","val","changeSearchCity","defaultValue","toLowerCase","caption","foreColor","tooltip","onclick","icon","withBackground","CitiesName","selected","resetWarehousePageState","changeShowFavorites","filter","withoutBoxShadow","changeDisplayType","goBack","onSelectedChange","selectWarehouses","warehouses","status","error","page","favoriteError","selectFavorites","setFavoritesError","handleSearch","city","getWarehouses","changePage","useEffect","window","scrollTo","cancelOperation","to","resetWarehouse","resetFavorites","getFavorites","warehouse","color","actionAfterTimeout","resetStatus"],"sourceRoot":""}