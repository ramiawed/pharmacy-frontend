{"version":3,"file":"static/js/1882.248a9807.chunk.js","mappings":"wQA6DA,UApCA,YAA+C,IAArBA,EAAoB,EAApBA,iBAChBC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,GAA+BH,EAAAA,EAAAA,IAAYI,EAAAA,IAAnCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAWpB,OAJAC,EAAAA,EAAAA,YAAU,WACRZ,MACC,IAEIO,GAAQA,EAAKM,OAASC,EAAAA,GAAAA,UAC3B,iCACE,SAAC,IAAD,CAAQC,eAXW,WACrBZ,EAASa,EAAAA,IACTb,GAASc,EAAAA,EAAAA,IAAc,CAAET,MAAAA,MASiBU,MAAM,iBAE9C,UAAC,IAAD,WACGR,EAAWS,KAAI,SAACC,GAAD,OACd,SAAC,IAAD,CAA0BC,KAAMD,GAAdA,EAAGE,QAGA,IAAtBZ,EAAWa,QAA2B,YAAXZ,IAC1B,SAAC,IAAD,CAAWa,IAAKvB,EAAE,oBAGR,YAAXU,IAAwB,SAAC,IAAD,CAAcc,aAAa,WAIxD,SAAC,KAAD,CAAUC,GAAG","sources":["pages/saved-items-page/saved-items-page.component.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport Header from \"../../components/header/header.component\";\nimport MedicineRow from \"../../components/medicine-row/medicine-row.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport ActionLoader from \"../../components/action-loader/action-loader.component\";\n\n// redux stuff\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getSavedItems,\n  resetSavedItems,\n  selectSavedItems,\n} from \"../../redux/savedItems/savedItemsSlice\";\n\n// components\nimport MainContentContainer from \"../../components/main-content-container/main-content-container.component\";\n\n// constants\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nfunction SavedItemsPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { user, token } = useSelector(selectUserData);\n  const { savedItems, status } = useSelector(selectSavedItems);\n\n  const refreshHandler = () => {\n    dispatch(resetSavedItems);\n    dispatch(getSavedItems({ token }));\n  };\n\n  useEffect(() => {\n    onSelectedChange();\n  }, []);\n\n  return user && user.type === UserTypeConstants.PHARMACY ? (\n    <>\n      <Header refreshHandler={refreshHandler} title=\"saved-items\" />\n\n      <MainContentContainer>\n        {savedItems.map((si) => (\n          <MedicineRow key={si._id} item={si} />\n        ))}\n\n        {savedItems.length === 0 && status !== \"loading\" && (\n          <NoContent msg={t(\"no-saved-items\")} />\n        )}\n\n        {status === \"loading\" && <ActionLoader allowCancel={false} />}\n      </MainContentContainer>\n    </>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default SavedItemsPage;\n"],"names":["onSelectedChange","t","useTranslation","dispatch","useDispatch","useSelector","selectUserData","user","token","selectSavedItems","savedItems","status","useEffect","type","UserTypeConstants","refreshHandler","resetSavedItems","getSavedItems","title","map","si","item","_id","length","msg","allowCancel","to"],"sourceRoot":""}