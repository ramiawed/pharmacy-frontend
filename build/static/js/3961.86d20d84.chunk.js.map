{"version":3,"file":"static/js/3961.86d20d84.chunk.js","mappings":"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","sources":["pages/admin-routes/admin-routes.component.jsx"],"sourcesContent":["import React, { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { SideNavLinks, TopNavLinks } from \"../../utils/constants\";\n\nimport HomePageLoader from \"../../components/home-page-loader/home-page-loader.component\";\nconst CartPage = lazy(() => import(\"../cart-page/cart-page.component\"));\nconst AdminUsersPage = lazy(() =>\n  import(\"../admin-users-page/admin-users-page.component\")\n);\nconst FavoritesPage = lazy(() =>\n  import(\"../favorites-page/favorites-page.component\")\n);\n\nconst ItemsPage = lazy(() => import(\"../items-page/items-page.component\"));\nconst ItemPage = lazy(() => import(\"../item-page/item-page.component\"));\nconst ItemExcelPage = lazy(() =>\n  import(\"../item-excel-page/item-excel-page.component\")\n);\nconst StatisticsOptionsPage = lazy(() =>\n  import(\"../statistics-options-page/statistics-options-page.component\")\n);\nconst StatisticsPage = lazy(() =>\n  import(\"../statistics-page/statistics-page.component\")\n);\nconst UserProfilePage = lazy(() =>\n  import(\"../user-profile-page/user-profile-page.component\")\n);\nconst AdvertisementsPage = lazy(() =>\n  import(\"../advertisements-page/advertisements-page.component\")\n);\nconst AdminNotificationPage = lazy(() =>\n  import(\"../admin-notification-page/admin-notification-page.component\")\n);\nconst UserNotificationPage = lazy(() =>\n  import(\"../user-notification-page/user-notification-page.component\")\n);\nconst WarehousesPage = lazy(() =>\n  import(\"../../pages/warehouses-page/warehouses-page.component\")\n);\nconst HomePage = lazy(() => import(\"../home-page/home-page.component\"));\nconst CompaniesPage = lazy(() =>\n  import(\"../companies-page/companies-page.component\")\n);\nconst MedicinesPage = lazy(() =>\n  import(\"../medicines-page/medicines-page.component\")\n);\nconst NotificationPage = lazy(() =>\n  import(\"../notification-page/notification-page.component\")\n);\nconst SettingsPage = lazy(() =>\n  import(\"../settings-page/settings-page.component\")\n);\nconst OrdersPage = lazy(() => import(\"../orders-page/orders-page.component\"));\nconst OrderDetailsPage = lazy(() =>\n  import(\"../order-details-page/order-details-page.component\")\n);\nconst NotFound = lazy(() => import(\"../not-found/not-found.component\"));\n\nfunction AdminRoutes({ changeOptionHandler }) {\n  return (\n    <>\n      <Suspense fallback={<HomePageLoader />}></Suspense>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: TopNavLinks.HOME,\n                collapsedSideNavOption: true,\n                selectedSideNavOption: \"\",\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/companies\">\n          <CompaniesPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: TopNavLinks.COMPANIES,\n                collapsedSideNavOption: true,\n                selectedSideNavOption: \"\",\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/medicines\">\n          <MedicinesPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: TopNavLinks.MEDICINES,\n                collapsedSideNavOption: true,\n                selectedSideNavOption: \"\",\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/warehouses\">\n          <WarehousesPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: TopNavLinks.WAREHOUSES,\n                collapsedSideNavOption: true,\n                selectedSideNavOption: \"\",\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/item\">\n          <ItemPage />\n        </Route>\n\n        <Route exact path=\"/items-from-excel\">\n          <ItemExcelPage />\n        </Route>\n\n        <Route exact path=\"/cart\">\n          <CartPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: TopNavLinks.CART,\n                collapsedSideNavOption: true,\n                selectedSideNavOption: \"\",\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/orders\">\n          <OrdersPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.ORDERS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/order-details\">\n          <OrderDetailsPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.ORDERS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/profile\">\n          <UserProfilePage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.PROFILE,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/favorites\">\n          <FavoritesPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: TopNavLinks.FAVORITES,\n                collapsedSideNavOption: true,\n                selectedSideNavOption: \"\",\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/items\">\n          <ItemsPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.ITEMS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/notifications\">\n          <UserNotificationPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.NOTIFICATIONS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/notification/:notificationId\">\n          <NotificationPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.NOTIFICATIONS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/admin/advertisements\">\n          <AdvertisementsPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.ADVERTISEMENTS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/admin/partners\">\n          <AdminUsersPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.PARTNERS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/admin/settings\">\n          <SettingsPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.SETTINGS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/admin/statistics\">\n          <StatisticsOptionsPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.STATISTICS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/admin/statistics/option\">\n          <StatisticsPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.STATISTICS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route exact path=\"/admin/notifications\">\n          <AdminNotificationPage\n            onSelectedChange={() => {\n              changeOptionHandler({\n                selectedTopNavOption: \"\",\n                collapsedSideNavOption: true,\n                selectedSideNavOption: SideNavLinks.NOTIFICATIONS,\n                showTopNav: false,\n                showSearchBar: false,\n              });\n            }}\n          />\n        </Route>\n\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default AdminRoutes;\n"],"names":["CartPage","lazy","AdminUsersPage","FavoritesPage","ItemsPage","ItemPage","ItemExcelPage","StatisticsOptionsPage","StatisticsPage","UserProfilePage","AdvertisementsPage","AdminNotificationPage","UserNotificationPage","WarehousesPage","HomePage","CompaniesPage","MedicinesPage","NotificationPage","SettingsPage","OrdersPage","OrderDetailsPage","NotFound","changeOptionHandler","Suspense","fallback","exact","path","onSelectedChange","selectedTopNavOption","TopNavLinks","collapsedSideNavOption","selectedSideNavOption","showTopNav","showSearchBar","SideNavLinks","component"],"sourceRoot":""}