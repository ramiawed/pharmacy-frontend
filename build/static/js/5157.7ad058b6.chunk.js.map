{"version":3,"file":"static/js/5157.7ad058b6.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/button-with-icon/button-with-icon.module.scss?5371","components/button-with-icon/button-with-icon.component.jsx","webpack://pharmacy-frontend/./src/components/header/header.module.scss?fd78","components/header/header.component.jsx","components/no-content/no-content.component.jsx","components/baskets-page-header/baskets-page-header.component.jsx","pages/baskets-page/baskets-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"button-with-icon_small_font__s-Vix\",\"button\":\"button-with-icon_button__Yrwl2\"};","// button component\n\n// Props\n// action: handler to execute when click the button\n// text: label of the button\n// bgColor: button's background color\n// tooltip: text to show when hover over the button\n// loading: boolean to indicates if the loading icon show or not\n// icon\n\nimport React, { useState } from \"react\";\nimport { Colors } from \"../../utils/constants\";\n\n// styles\nimport styles from \"./button-with-icon.module.scss\";\n\n// constants\n\nfunction ButtonWithIcon({ action, text, bgColor, icon, smallText }) {\n  const [hover, setHover] = useState(false);\n\n  const toggleHover = () => {\n    setHover(!hover);\n  };\n\n  return (\n    <div\n      className={styles.button}\n      onClick={action}\n      style={{\n        border: `1px solid ${bgColor}`,\n        backgroundColor: hover ? bgColor : Colors.WHITE_COLOR,\n        color: hover ? Colors.WHITE_COLOR : bgColor,\n      }}\n      onMouseEnter={toggleHover}\n      onMouseLeave={toggleHover}\n    >\n      <p style={{ padding: \"10px\" }}>{text}</p>\n      {icon && icon()}\n    </div>\n  );\n}\n\nexport default ButtonWithIcon;\n","// extracted by mini-css-extract-plugin\nexport default {\"small_font\":\"header_small_font__+3f02\",\"header\":\"header_header__MhatS\",\"back\":\"header_back__wgjRV\"};","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport Icon from \"../action-icon/action-icon.component\";\n\n// icons\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// style\nimport styles from \"./header.module.scss\";\n\nfunction Header({ children }) {\n  const history = useHistory();\n\n  return (\n    <div className={styles.header}>\n      {children}\n      <div className={styles.back}>\n        <Icon\n          onclick={() => {\n            history.goBack();\n          }}\n          icon={() => <IoMdArrowRoundBack />}\n          foreColor={Colors.WHITE_COLOR}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport generalStyles from \"../../style.module.scss\";\nimport NoContentImage from \"../../no-content.jpeg\";\nimport { Colors } from \"../../utils/constants\";\n\nfunction NoContent({ msg }) {\n  return (\n    <div className={[generalStyles.no_content_div].join(\" \")}>\n      <img\n        src={NoContentImage}\n        alt=\"thumb\"\n        style={{\n          width: \"150px\",\n          height: \"150px\",\n        }}\n      />\n\n      <p\n        style={{\n          color: Colors.MAIN_COLOR,\n        }}\n      >\n        {msg}\n      </p>\n    </div>\n  );\n}\n\nexport default NoContent;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  getBaskets,\n  resetBasketsArray,\n} from \"../../redux/baskets/basketsSlice\";\n\n// icons\nimport { MdAddCircle } from \"react-icons/md\";\nimport { RiRefreshLine } from \"react-icons/ri\";\n\n// components\nimport Header from \"../header/header.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\nfunction BasketPageHeader({ isNew, setIsNew }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { user, token } = useSelector(selectUserData);\n\n  const refreshHandler = () => {\n    dispatch(resetBasketsArray());\n    dispatch(getBaskets({ token }));\n  };\n\n  return (\n    <>\n      <Header>\n        <h2>{t(\"nav-baskets\")}</h2>\n      </Header>\n      <div\n        className={[generalStyles.actions, generalStyles.margin_v_4].join(\" \")}\n      >\n        {!isNew && (\n          <>\n            {user.type !== UserTypeConstants.PHARMACY && (\n              <Icon\n                selected={false}\n                foreColor={Colors.MAIN_COLOR}\n                tooltip={t(\"new-basket\")}\n                onclick={() => {\n                  setIsNew(true);\n                }}\n                icon={() => <MdAddCircle size={24} />}\n                withBackground={true}\n              />\n            )}\n\n            <Icon\n              selected={false}\n              foreColor={Colors.MAIN_COLOR}\n              tooltip={t(\"refresh-tooltip\")}\n              onclick={() => {\n                refreshHandler();\n              }}\n              icon={() => <RiRefreshLine />}\n              withBackground={true}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default BasketPageHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  cancelOperation,\n  getBaskets,\n  resetBasketsArray,\n  selectBaskets,\n} from \"../../redux/baskets/basketsSlice\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport BasketPageHeader from \"../../components/baskets-page-header/baskets-page-header.component\";\nimport Basket from \"../../components/basket/basket.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport ButtonWithIcon from \"../../components/button-with-icon/button-with-icon.component\";\n\n// constants\nimport { Colors, UserTypeConstants } from \"../../utils/constants\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\n\n// icons\nimport { CgMoreVertical } from \"react-icons/cg\";\n\nconst BasketsPage = ({ onSelectedChange }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const isOnline = useSelector(selectOnlineStatus);\n  const { user, token } = useSelector(selectUserData);\n  const { status, baskets, count, error } = useSelector(selectBaskets);\n\n  const [isNew, setIsNew] = useState(false);\n\n  const handleSearch = () => {\n    dispatch(getBaskets({ token }));\n  };\n\n  const handleMoreResult = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    handleSearch();\n  };\n\n  const handleEnterPress = () => {\n    dispatch(resetBasketsArray());\n    handleSearch();\n  };\n\n  useEffect(() => {\n    if (baskets.length === 0) handleSearch();\n\n    window.scrollTo(0, 0);\n\n    onSelectedChange();\n\n    return () => {\n      cancelOperation();\n    };\n  }, []);\n\n  return user.type === UserTypeConstants.ADMIN ||\n    user.type === UserTypeConstants.PHARMACY ||\n    user.type === UserTypeConstants.WAREHOUSE ? (\n    <>\n      <BasketPageHeader isNew={isNew} setIsNew={setIsNew} />\n\n      <div className={generalStyles.container_with_header}>\n        {count > 0 && !isNew && (\n          <div className={generalStyles.count}>\n            <span className={generalStyles.label}>{t(\"baskets-count\")}</span>\n            <span className={generalStyles.count}>{count}</span>\n          </div>\n        )}\n        <div\n          style={{\n            paddingInline: \"10px\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\",\n          }}\n        >\n          {isNew ? (\n            <Basket setIsNew={setIsNew} editable={true} />\n          ) : (\n            baskets.map((basket) => (\n              <Basket\n                basket={basket}\n                key={basket._id}\n                editable={user.type !== UserTypeConstants.PHARMACY}\n              />\n            ))\n          )}\n        </div>\n      </div>\n\n      {count === 0 && status !== \"loading\" && !isNew && (\n        <>\n          <NoContent msg={t(\"no-basket-to-order\")} />\n        </>\n      )}\n\n      {status === \"loading\" && (\n        <div className={generalStyles.flex_container}>\n          <ReactLoading color={Colors.SECONDARY_COLOR} type=\"cylon\" />\n        </div>\n      )}\n\n      {baskets.length < count && (\n        <div className={generalStyles.flex_container}>\n          <ButtonWithIcon\n            text={t(\"more\")}\n            action={handleMoreResult}\n            bgColor={Colors.SECONDARY_COLOR}\n            icon={() => <CgMoreVertical />}\n          />\n        </div>\n      )}\n\n      {baskets.length === count && status !== \"loading\" && count !== 0 && (\n        <p\n          className={[generalStyles.center, generalStyles.fc_secondary].join(\n            \" \"\n          )}\n        >\n          {t(\"no-more\")}\n        </p>\n      )}\n    </>\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default BasketsPage;\n"],"names":["action","text","bgColor","icon","smallText","useState","hover","setHover","toggleHover","className","styles","onClick","style","border","backgroundColor","Colors","color","onMouseEnter","onMouseLeave","padding","children","history","useHistory","onclick","goBack","foreColor","msg","generalStyles","join","src","NoContentImage","alt","width","height","isNew","setIsNew","t","useTranslation","dispatch","useDispatch","useSelector","selectUserData","user","token","type","UserTypeConstants","selected","tooltip","size","withBackground","resetBasketsArray","getBaskets","onSelectedChange","isOnline","selectOnlineStatus","selectBaskets","status","baskets","count","error","handleSearch","useEffect","length","window","scrollTo","cancelOperation","paddingInline","paddingLeft","paddingRight","editable","map","basket","_id","changeOnlineMsg","to"],"sourceRoot":""}