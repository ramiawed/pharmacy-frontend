{"version":3,"file":"static/js/345.dfe0424b.chunk.js","mappings":"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","sources":["webpack://pharmacy-frontend/./src/components/multi-value/multi-value.module.scss?ab1c","components/multi-value/multi-value.component.jsx","webpack://pharmacy-frontend/./src/components/offers-modal/offers-modal.module.scss?5de3","components/offers-modal/offers-modal.component.jsx","components/company-item-row/company-item-row.component.jsx","components/items-table-header/items-table-header.component.jsx","components/export-csv-from-url/export-csv-from-url.component.jsx","components/items-page-header/items-page-header.component.jsx","pages/items-page/items-page.component.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"multi-value_container__efvXg\",\"row\":\"multi-value_row__CgABK\",\"header\":\"multi-value_header__sV-dg\",\"add_icon\":\"multi-value_add_icon__+LvX8\",\"input_div\":\"multi-value_input_div__4ZhqR\",\"delete_icon\":\"multi-value_delete_icon__FIBYW\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// react-icons\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\nimport { MdAddCircle } from \"react-icons/md\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport styles from \"./multi-value.module.scss\";\n\n// constants\nimport { onKeyPressForNumberInput } from \"../../utils/constants\";\n\nfunction MultiValue({\n  addHandler,\n  deleteHandler,\n  values,\n  changeHandler,\n  placeholder,\n  quantityLabel,\n  bonusLabel,\n  afterQuantityLabel,\n  afterBonusLabel,\n  allowEdit,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className={styles.header}>\n        {allowEdit && (\n          <div\n            className={[\n              generalStyles.icon,\n              generalStyles.fc_green,\n              generalStyles.margin_h_auto,\n            ].join(\" \")}\n          >\n            <MdAddCircle\n              size={36}\n              onClick={(e) => {\n                addHandler();\n                e.stopPropagation();\n              }}\n            />\n            <div className={generalStyles.tooltip}>\n              {t(\"add-offer-tooltip\")}\n            </div>\n          </div>\n        )}\n      </div>\n      <div className={styles.container}>\n        {values.map((value) => (\n          <div className={styles.row} key={value.key}>\n            {/* quantity value */}\n            <div className={styles.input_div}>\n              {quantityLabel && <label>{quantityLabel}</label>}\n              <input\n                id={value.key}\n                title=\"qty\"\n                value={value.value.qty}\n                onChange={(e) => changeHandler(e)}\n                placeholder={placeholder}\n                onKeyPress={onKeyPressForNumberInput}\n                disabled={!allowEdit}\n              />\n              {afterQuantityLabel && <label>{afterQuantityLabel}</label>}\n            </div>\n\n            {/* bonus value */}\n            <div className={styles.input_div} key={value.key}>\n              {bonusLabel && <label>{bonusLabel}</label>}\n\n              <input\n                id={value.key}\n                title=\"bonus\"\n                value={value.value.bonus}\n                onChange={(e) => changeHandler(e)}\n                placeholder={placeholder}\n                disabled={!allowEdit}\n              />\n\n              {afterBonusLabel && <label>{afterBonusLabel}</label>}\n            </div>\n\n            {allowEdit && (\n              <div\n                className={[generalStyles.icon, generalStyles.fc_red].join(\" \")}\n              >\n                <RiDeleteBin5Fill\n                  size={20}\n                  onClick={() => deleteHandler(value.key)}\n                />\n                <div className={generalStyles.tooltip}>\n                  {t(\"remove-offer-tooltip\")}\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default MultiValue;\n","// extracted by mini-css-extract-plugin\nexport default {\"offer_type\":\"offers-modal_offer_type__ALAtZ\",\"checkboxes_div\":\"offers-modal_checkboxes_div__jHFjO\",\"offer_type_checkbox\":\"offers-modal_offer_type_checkbox__6qdXR\"};","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// redux stuff\nimport { useDispatch } from \"react-redux\";\nimport { changeItemWarehouseOffer } from \"../../redux/warehouseItems/warehouseItemsSlices\";\n\n// components\nimport Modal from \"../modal/modal.component\";\nimport MultiValue from \"../multi-value/multi-value.component\";\n\n// react-icons\nimport { MdErrorOutline } from \"react-icons/md\";\n\n// styles\nimport styles from \"./offers-modal.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { Colors, OfferTypes, toEnglishNumber } from \"../../utils/constants\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\n\nfunction OffersModal({\n  item,\n  warehouseId,\n  close,\n  token,\n  allowEdit,\n  afterUpdateOffer,\n}) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const { offer } = item.warehouses.find(\n    (w) => w.warehouse._id === warehouseId\n  );\n\n  const [offerTypeError, setOfferTypeError] = useState(false);\n  const [quantityOfferType, setQuantityOfferType] = useState(\n    offer.mode === OfferTypes.PIECES ? true : false\n  );\n\n  const [percentageOfferType, setPercentageOfferType] = useState(\n    offer.mode === OfferTypes.PERCENTAGE ? true : false\n  );\n\n  const [values, setValues] = useState(\n    offer.offers?.length > 0\n      ? offer.offers.map((o) => {\n          return { value: { qty: o.qty, bonus: o.bonus }, key: o._id };\n        })\n      : []\n  );\n\n  // add a new offer to the offer array\n  const addHandler = () =>\n    setValues([...values, { value: { qty: 0, bonus: 0 }, key: uuidv4() }]);\n\n  const deleteHandler = (key) => {\n    const updatedValues = values.filter((value) => value.key !== key);\n    setValues(updatedValues);\n  };\n\n  const changeHandler = (e) => {\n    const updatedValues = values.map((value) => {\n      if (value.key === e.target.id) {\n        return {\n          ...value,\n          value: {\n            ...value.value,\n            [e.target.title]: toEnglishNumber(e.target.value) * 1,\n          },\n        };\n      } else {\n        return value;\n      }\n    });\n\n    setValues(updatedValues);\n  };\n\n  const handleOkButton = () => {\n    if (!quantityOfferType && !percentageOfferType) {\n      setOfferTypeError(true);\n      return;\n    }\n\n    const offers = values\n      .filter((v) => v.value.bonus !== 0 || v.value.qty)\n      .sort((a, b) => {\n        if (a.value.qty > b.value.qty) return -1;\n        if (a.value.qty < b.value.qty) return 1;\n        return 0;\n      })\n      .map((v) => {\n        return { qty: v.value.qty, bonus: v.value.bonus };\n      });\n\n    const offerObj = {\n      mode:\n        offers.length === 0\n          ? \"\"\n          : quantityOfferType\n          ? OfferTypes.PIECES\n          : OfferTypes.PERCENTAGE,\n      offers,\n    };\n\n    dispatch(\n      changeItemWarehouseOffer({\n        obj: {\n          itemId: item._id,\n          warehouseId: warehouseId,\n          offer: offerObj,\n        },\n        token,\n      })\n    )\n      .then(unwrapResult)\n      .then(() => afterUpdateOffer && afterUpdateOffer());\n\n    close();\n  };\n\n  return (\n    <Modal\n      header=\"nav-offers\"\n      cancelLabel=\"close-label\"\n      okLabel=\"add-label\"\n      closeModal={close}\n      okModal={\n        allowEdit\n          ? () => {\n              handleOkButton();\n            }\n          : null\n      }\n      small={true}\n    >\n      {allowEdit && values.length > 0 && (\n        <div className={styles.checkboxes_div}>\n          <label>{t(\"offer-type\")}:</label>\n\n          <div className={styles.offer_type_checkbox}>\n            <input\n              type=\"checkbox\"\n              value={quantityOfferType}\n              checked={quantityOfferType}\n              onChange={() => {\n                setQuantityOfferType(!quantityOfferType);\n                setPercentageOfferType(false);\n                setOfferTypeError(false);\n              }}\n            />\n            <label>{t(OfferTypes.PIECES)}</label>\n          </div>\n\n          <div className={styles.offer_type_checkbox}>\n            <input\n              type=\"checkbox\"\n              value={percentageOfferType}\n              checked={percentageOfferType}\n              onChange={() => {\n                setPercentageOfferType(!percentageOfferType);\n                setQuantityOfferType(false);\n                setOfferTypeError(false);\n              }}\n            />\n            <label>{t(OfferTypes.PERCENTAGE)}</label>\n          </div>\n\n          {offerTypeError && (\n            <MdErrorOutline color={Colors.FAILED_COLOR} size={24} />\n          )}\n        </div>\n      )}\n\n      {values.length === 0 && (\n        <p\n          className={[generalStyles.center, generalStyles.fc_secondary].join(\n            \" \"\n          )}\n        >\n          {t(\"no-offers\")}\n        </p>\n      )}\n\n      <MultiValue\n        allowEdit={allowEdit}\n        values={values}\n        addHandler={addHandler}\n        deleteHandler={deleteHandler}\n        changeHandler={changeHandler}\n        quantityLabel={t(\"quantity-label\")}\n        bonusLabel={\n          quantityOfferType\n            ? t(\"bonus-quantity-label\")\n            : percentageOfferType\n            ? t(\"bonus-percentage-label\")\n            : null\n        }\n        afterQuantityLabel={t(\"after-quantity-label\")}\n        afterBonusLabel={\n          quantityOfferType\n            ? t(\"after-bonus-quantity-label\")\n            : percentageOfferType\n            ? t(\"after-bonus-percentage-label\")\n            : null\n        }\n      />\n    </Modal>\n  );\n}\n\nexport default OffersModal;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\n\n// redux stuff\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserData } from \"../../redux/auth/authSlice\";\nimport {\n  changeItemActiveState,\n  changeItemOffer,\n} from \"../../redux/items/itemsSlices\";\nimport {\n  changeOnlineMsg,\n  selectOnlineStatus,\n} from \"../../redux/online/onlineSlice\";\n\n// components\nimport Modal from \"../modal/modal.component\";\nimport OffersModal from \"../offers-modal/offers-modal.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// react-icons\nimport { AiFillUnlock, AiFillLock } from \"react-icons/ai\";\nimport { MdLocalOffer } from \"react-icons/md\";\nimport { RiDeleteBin5Fill } from \"react-icons/ri\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport tableStyles from \"../table.module.scss\";\nimport rowStyles from \"../row.module.scss\";\n\n// constants\nimport {\n  Colors,\n  onKeyPressForNumberInput,\n  toEnglishNumber,\n  UserTypeConstants,\n} from \"../../utils/constants\";\nimport { VscLoading } from \"react-icons/vsc\";\n\nconst checkOffer = (item, user) => {\n  if (user.type === UserTypeConstants.COMPANY) {\n    return false;\n  }\n\n  let result = false;\n\n  if (user.type === UserTypeConstants.WAREHOUSE) {\n    item.warehouses\n      .filter((w) => w.warehouse._id === user._id)\n      .forEach((w) => {\n        if (w.offer.offers.length > 0) {\n          result = true;\n        }\n      });\n  }\n\n  if (user.type === UserTypeConstants.ADMIN) {\n    item.warehouses.forEach((w) => {\n      if (w.offer.offers.length > 0) {\n        result = true;\n      }\n    });\n  }\n\n  return result;\n};\n\nfunction CompanyItemRow({\n  item,\n  user,\n  company,\n  warehouse,\n  role,\n  changeItemMaxQty,\n  deleteItemFromWarehouse,\n}) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // selectors\n  const isOnline = useSelector(selectOnlineStatus);\n  const { token } = useSelector(selectUserData);\n\n  // own state\n  const [modalObj, setModalObj] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [showWarningModal, setShowWarningModal] = useState(false);\n  const [showOfferModal, setShowOfferModal] = useState(false);\n  const [showDeleteFromWarehouseModal, setShowDeleteFromWarehouseModal] =\n    useState(false);\n  const [deleteLoading, setDeleteLoading] = useState(false);\n  const [maxQty, setMaxQty] = useState(\n    warehouse\n      ? item.warehouses.find((w) => w.warehouse._id === warehouse._id).maxQty\n      : 0\n  );\n\n  const actionButtonPress = (action) => {\n    if (action === \"delete\") {\n      setModalObj({\n        header: \"item-delete-header\",\n        body: \"item-delete-confirm-message\",\n        action: \"delete\",\n      });\n    } else {\n      setModalObj({\n        header: \"item-undo-delete-header\",\n        body: \"item-undo-delete-confirm-message\",\n        action: \"undo-delete\",\n      });\n    }\n\n    setShowModal(true);\n  };\n\n  const handlePressOkOnModal = () => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    dispatch(\n      changeItemActiveState({\n        obj: {\n          itemId: item._id,\n          action: modalObj.action,\n        },\n        token,\n      })\n    );\n    setShowModal(false);\n    setModalObj({});\n  };\n\n  const handleDeleteItemFromWarehouse = (e) => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n    deleteItemFromWarehouse({\n      itemId: item._id,\n      warehouseId: warehouse._id,\n      city: warehouse.city,\n    });\n\n    setShowDeleteFromWarehouseModal(false);\n\n    // e.stopPropagation();\n  };\n\n  const deleteItemHandler = (e) => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    if (\n      (user.type === UserTypeConstants.ADMIN && item.company.allowAdmin) ||\n      user.type === UserTypeConstants.COMPANY\n    ) {\n      actionButtonPress(\"delete\");\n    } else {\n      setShowWarningModal(true);\n    }\n\n    // e.stopPropagation();\n  };\n\n  const undoDeleteItemHandler = (e) => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    if (\n      (user.type === UserTypeConstants.ADMIN && item.company.allowAdmin) ||\n      user.type === UserTypeConstants.COMPANY\n    ) {\n      actionButtonPress(\"undo-delete\");\n    } else {\n      setShowWarningModal(true);\n    }\n\n    // e.stopPropagation();\n  };\n\n  const deleteFromWarehouseHandler = (e) => {\n    if (!isOnline) {\n      dispatch(changeOnlineMsg());\n      return;\n    }\n\n    if (\n      (user.type === UserTypeConstants.ADMIN &&\n        role === UserTypeConstants.WAREHOUSE &&\n        warehouse.allowAdmin) ||\n      user.type === UserTypeConstants.WAREHOUSE\n    ) {\n      setShowDeleteFromWarehouseModal(true);\n    } else {\n      setShowWarningModal(true);\n    }\n\n    // e.stopPropagation();\n  };\n\n  // const onKeyPress = (event) => {\n  //   return event.charCode >= 48 && event.charCode <= 57;\n  // };\n\n  const maxQtyChangeHandler = (event) => {\n    const value = Number.parseInt(toEnglishNumber(event.target.value));\n    setMaxQty(isNaN(value) ? \"\" : value);\n  };\n\n  return (\n    <>\n      <div\n        className={rowStyles.container}\n        style={{\n          backgroundColor: checkOffer(item, user) ? Colors.OFFER_COLOR : \"#fff\",\n        }}\n        // onClick={() => {\n        //   history.push(\"item\", {\n        //     from: user.type,\n        //     type: \"info\",\n        //     allowAction:\n        //       user.type === UserTypeConstants.COMPANY ||\n        //       (user.type === UserTypeConstants.ADMIN &&\n        //         item.company.allowAdmin),\n        //     itemId: item._id,\n        //     companyId: item.company._id,\n        //     warehouseId: warehouse?._id,\n        //   });\n        // }}\n      >\n        <label\n          className={[rowStyles.hover_underline, tableStyles.label_medium].join(\n            \" \"\n          )}\n        >\n          <Link\n            className={rowStyles.hover_underline}\n            to={{\n              pathname: \"/item\",\n              state: {\n                from: user.type,\n                type: \"info\",\n                allowAction:\n                  user.type === UserTypeConstants.COMPANY ||\n                  (user.type === UserTypeConstants.ADMIN &&\n                    item.company.allowAdmin),\n                itemId: item._id,\n                companyId: item.company._id,\n                warehouseId: warehouse?._id,\n              },\n            }}\n          >\n            {item.name}\n          </Link>\n        </label>\n\n        {((user.type === UserTypeConstants.ADMIN &&\n          role === UserTypeConstants.ADMIN) ||\n          (user.type === UserTypeConstants.ADMIN &&\n            role === UserTypeConstants.WAREHOUSE) ||\n          user.type === UserTypeConstants.WAREHOUSE) && (\n          <label className={tableStyles.label_medium}>\n            {item.company.name}\n          </label>\n        )}\n\n        <label\n          className={[\n            tableStyles.label_small,\n            generalStyles.flex_center_container,\n          ].join(\" \")}\n        >\n          {item.isActive ? (\n            <Icon\n              icon={() => <AiFillUnlock />}\n              foreColor={Colors.SUCCEEDED_COLOR}\n              onclick={deleteItemHandler}\n            />\n          ) : (\n            <Icon\n              icon={() => <AiFillLock />}\n              foreColor={Colors.FAILED_COLOR}\n              onclick={undoDeleteItemHandler}\n            />\n          )}\n        </label>\n\n        <label className={tableStyles.label_small}>{item.formula}</label>\n        <label className={tableStyles.label_small}>{item.caliber}</label>\n        <label className={tableStyles.label_small}>{item.packing}</label>\n        <label className={tableStyles.label_small}>{item.price}</label>\n\n        <label className={tableStyles.label_small}>{item.customer_price}</label>\n        {((user.type === UserTypeConstants.ADMIN &&\n          role === UserTypeConstants.WAREHOUSE) ||\n          user.type === UserTypeConstants.WAREHOUSE) && (\n          <>\n            <label className={tableStyles.label_small}>\n              <input\n                // type=\"number\"\n                className={rowStyles.input}\n                // min={0}\n                onKeyPress={onKeyPressForNumberInput}\n                value={maxQty}\n                onChange={maxQtyChangeHandler}\n                onBlur={(e) =>\n                  changeItemMaxQty({\n                    itemId: item._id,\n                    warehouseId: warehouse._id,\n                    qty: Number.parseInt(maxQty),\n                  })\n                }\n                disabled={\n                  (user.type === UserTypeConstants.ADMIN &&\n                    role === UserTypeConstants.WAREHOUSE &&\n                    !warehouse?.allowAdmin) ||\n                  !isOnline\n                }\n              />\n            </label>\n\n            <label\n              className={[\n                tableStyles.label_xsmall,\n                generalStyles.flex_center_container,\n              ].join(\" \")}\n            >\n              {deleteLoading ? (\n                <Icon\n                  icon={() => (\n                    <VscLoading className={generalStyles.loading} size={24} />\n                  )}\n                  onclick={() => {}}\n                  foreColor={Colors.FAILED_COLOR}\n                />\n              ) : (\n                <Icon\n                  icon={() => <RiDeleteBin5Fill size={20} />}\n                  onclick={deleteFromWarehouseHandler}\n                  foreColor={Colors.FAILED_COLOR}\n                />\n              )}\n            </label>\n\n            <label className={tableStyles.label_xsmall}>\n              <Icon\n                icon={() => <MdLocalOffer size={20} />}\n                tooltip={t(\"nav-offers\")}\n                foreColor={\n                  checkOffer(item, user)\n                    ? Colors.SUCCEEDED_COLOR\n                    : Colors.SECONDARY_COLOR\n                }\n                onclick={() => {\n                  setShowOfferModal(true);\n                }}\n              />\n            </label>\n          </>\n        )}\n      </div>\n\n      {showModal && (\n        <Modal\n          header={t(modalObj.header)}\n          cancelLabel={t(\"cancel-label\")}\n          okLabel={t(\"ok-label\")}\n          okModal={() => handlePressOkOnModal()}\n          closeModal={() => setShowModal(false)}\n          small={true}\n        >\n          {<p>{t(modalObj.body)}</p>}\n        </Modal>\n      )}\n\n      {showWarningModal && (\n        <Modal\n          header={t(\"warning\")}\n          cancelLabel={t(\"cancel-label\")}\n          closeModal={() => setShowWarningModal(false)}\n          small={true}\n          warning={true}\n        >\n          {<p>{t(\"dont-have-permission\")}</p>}\n        </Modal>\n      )}\n\n      {showOfferModal && (\n        <OffersModal\n          token={token}\n          item={item}\n          warehouseId={warehouse._id}\n          close={() => setShowOfferModal(false)}\n          allowEdit={\n            user.type === UserTypeConstants.WAREHOUSE ||\n            (user.type === UserTypeConstants.ADMIN &&\n              role === UserTypeConstants.WAREHOUSE &&\n              warehouse.allowAdmin)\n          }\n          afterUpdateOffer={() =>\n            dispatch(changeItemOffer({ _id: item._id, token }))\n          }\n        />\n      )}\n\n      {showDeleteFromWarehouseModal && (\n        <Modal\n          header={t(\"item-delete-header\")}\n          cancelLabel={t(\"cancel-label\")}\n          okLabel={t(\"ok-label\")}\n          okModal={() => {\n            handleDeleteItemFromWarehouse();\n            setDeleteLoading(true);\n          }}\n          closeModal={() => {\n            setShowDeleteFromWarehouseModal(false);\n            setDeleteLoading(false);\n          }}\n          small={true}\n        >\n          {<p>{t(\"item-delete-from-warehouse\")}</p>}\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default CompanyItemRow;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n// components\nimport TableHeader from \"../table-header/table-header.component\";\n\n// redux stuff\nimport { useDispatch } from \"react-redux\";\nimport {\n  setSortCaliberField,\n  setSortCustomerPriceField,\n  setSortFields,\n  setSortNameField,\n  setSortPriceField,\n} from \"../../redux/items/itemsSlices\";\n\n// react icons\nimport {\n  AiOutlineSortAscending,\n  AiOutlineSortDescending,\n} from \"react-icons/ai\";\nimport { TiArrowUnsorted } from \"react-icons/ti\";\n\n// styles\nimport tableStyles from \"../table.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\n\n// constants\nimport { UserTypeConstants } from \"../../utils/constants\";\n\nfunction ItemsTableHeader({\n  user,\n  role,\n  sortNameField,\n  sortCaliberField,\n  sortPriceField,\n  sortCustomerPriceField,\n  pageState,\n}) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  // sort by item's name\n  const sortByName = () => {\n    if (pageState.sortNameField === 0) {\n      dispatch(setSortNameField(1));\n      dispatch(setSortFields(\"name\"));\n    } else if (pageState.sortNameField === 1) {\n      dispatch(setSortNameField(-1));\n      dispatch(setSortFields(\"-name\"));\n    } else {\n      dispatch(setSortNameField(0));\n      dispatch(setSortFields(\"\"));\n    }\n    dispatch(setSortCaliberField(0));\n    dispatch(setSortPriceField(0));\n    dispatch(setSortCustomerPriceField(0));\n  };\n\n  // sort by item's caliber\n  const sortByCaliber = () => {\n    if (pageState.sortCaliberField === 0) {\n      dispatch(setSortCaliberField(1));\n      dispatch(setSortFields(\"caliber\"));\n    } else if (pageState.sortCaliberField === 1) {\n      dispatch(setSortCaliberField(-1));\n      dispatch(setSortFields(\"-caliber\"));\n    } else {\n      dispatch(setSortCaliberField(0));\n      dispatch(setSortFields(\"\"));\n    }\n    dispatch(setSortNameField(0));\n    dispatch(setSortPriceField(0));\n    dispatch(setSortCustomerPriceField(0));\n  };\n\n  // sort by item's price\n  const sortByPrice = () => {\n    if (pageState.sortPriceField === 0) {\n      dispatch(setSortPriceField(1));\n      dispatch(setSortFields(\"price\"));\n    } else if (pageState.sortPriceField === 1) {\n      dispatch(setSortPriceField(-1));\n      dispatch(setSortFields(\"-price\"));\n    } else {\n      dispatch(setSortPriceField(0));\n      dispatch(setSortFields(\"\"));\n    }\n    dispatch(setSortNameField(0));\n    dispatch(setSortCaliberField(0));\n    dispatch(setSortCustomerPriceField(0));\n  };\n\n  // sort by items' customer price\n  const sortByCustomerPrice = () => {\n    if (pageState.sortCustomerPriceField === 0) {\n      dispatch(setSortCustomerPriceField(1));\n      dispatch(setSortFields(\"customer_price\"));\n    } else if (pageState.sortCustomerPriceField === 1) {\n      dispatch(setSortCustomerPriceField(-1));\n      dispatch(setSortFields(\"-customer_price\"));\n    } else {\n      dispatch(setSortCustomerPriceField(0));\n      dispatch(setSortFields(\"\"));\n    }\n    dispatch(setSortNameField(0));\n    dispatch(setSortCaliberField(0));\n    dispatch(setSortPriceField(0));\n  };\n\n  return (\n    <TableHeader>\n      <label\n        className={[\n          tableStyles.label_medium,\n          generalStyles.flex_center_container,\n        ].join(\" \")}\n        onClick={sortByName}\n      >\n        {t(\"item-trade-name\")}\n        {sortNameField === 1 && (\n          <AiOutlineSortAscending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortNameField === -1 && (\n          <AiOutlineSortDescending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortNameField === 0 && (\n          <TiArrowUnsorted style={{ marginRight: \"4px\" }} />\n        )}\n      </label>\n\n      {((user.type === UserTypeConstants.ADMIN &&\n        role === UserTypeConstants.ADMIN) ||\n        (user.type === UserTypeConstants.ADMIN &&\n          role === UserTypeConstants.WAREHOUSE) ||\n        user.type === UserTypeConstants.WAREHOUSE) && (\n        <label className={tableStyles.label_medium}>\n          {t(\"user-company-name\")}\n        </label>\n      )}\n      <label className={tableStyles.label_small}>{t(\"item-status\")}</label>\n\n      <label className={tableStyles.label_small}>{t(\"item-formula\")}</label>\n\n      <label\n        className={[\n          tableStyles.label_small,\n          generalStyles.flex_center_container,\n        ].join(\" \")}\n        onClick={sortByCaliber}\n      >\n        {t(\"item-caliber\")}\n        {sortCaliberField === 1 && (\n          <AiOutlineSortAscending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortCaliberField === -1 && (\n          <AiOutlineSortDescending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortCaliberField === 0 && (\n          <TiArrowUnsorted style={{ marginRight: \"4px\" }} />\n        )}\n      </label>\n\n      <label className={tableStyles.label_small}>{t(\"item-packing\")}</label>\n\n      <label\n        className={[\n          tableStyles.label_small,\n          generalStyles.flex_center_container,\n        ].join(\" \")}\n        onClick={sortByPrice}\n      >\n        {t(\"item-price\")}\n        {sortPriceField === 1 && (\n          <AiOutlineSortAscending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortPriceField === -1 && (\n          <AiOutlineSortDescending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortPriceField === 0 && (\n          <TiArrowUnsorted style={{ marginRight: \"4px\" }} />\n        )}\n      </label>\n\n      <label\n        className={[\n          tableStyles.label_small,\n          generalStyles.flex_center_container,\n        ].join(\" \")}\n        onClick={sortByCustomerPrice}\n      >\n        {t(\"item-customer-price\")}\n        {sortCustomerPriceField === 1 && (\n          <AiOutlineSortAscending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortCustomerPriceField === -1 && (\n          <AiOutlineSortDescending style={{ marginRight: \"4px\" }} />\n        )}\n        {sortCustomerPriceField === 0 && (\n          <TiArrowUnsorted style={{ marginRight: \"4px\" }} />\n        )}\n      </label>\n\n      {((user.type === UserTypeConstants.ADMIN &&\n        role === UserTypeConstants.WAREHOUSE) ||\n        user.type === UserTypeConstants.WAREHOUSE) && (\n        <>\n          <label className={tableStyles.label_small}>{t(\"item-max-qty\")}</label>\n          <label className={tableStyles.label_xsmall}></label>\n          <label className={tableStyles.label_xsmall}></label>\n        </>\n      )}\n    </TableHeader>\n  );\n}\n\nexport default ItemsTableHeader;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\n// components\nimport Icon from \"../action-icon/action-icon.component\";\n\n// constants\nimport { Colors } from \"../../utils/constants\";\n\n// react icons\nimport { RiSave3Fill } from \"react-icons/ri\";\nimport { useSelector } from \"react-redux\";\nimport { selectToken } from \"../../redux/auth/authSlice\";\n\nexport const ExportCSVFromURL = ({ url, fileName }) => {\n  const { t } = useTranslation();\n  const token = useSelector(selectToken);\n\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = async (fileName) => {\n    await axios\n      .get(url, {\n        // timeout: 10000,\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n      .then((response) => {\n        const ws = XLSX.utils.json_to_sheet(response.data.data.items);\n\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n\n        const data = new Blob([excelBuffer], { type: fileType });\n\n        FileSaver.saveAs(data, fileName + fileExtension);\n      });\n  };\n\n  return (\n    <Icon\n      selected={false}\n      foreColor={Colors.SECONDARY_COLOR}\n      tooltip={t(\"export-items\")}\n      icon={() => <RiSave3Fill />}\n      onclick={(e) => exportToCSV(fileName)}\n      withBackground={true}\n    />\n  );\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from \"react-router-dom\";\n\n// components\nimport SearchContainer from \"../search-container/search-container.component\";\nimport SearchInput from \"../search-input/search-input.component\";\nimport { ExportCSVFromURL } from \"../export-csv-from-url/export-csv-from-url.component\";\nimport Icon from \"../action-icon/action-icon.component\";\n\n// redux stuff\nimport { useDispatch } from \"react-redux\";\nimport {\n  setSearchName,\n  setSearchCompanyName,\n  setSearchDeletedItems,\n  setSearchActiveItems,\n  setSearchInWarehouse,\n  setSearchOutWarehouse,\n  setSearchWarehouseName,\n} from \"../../redux/items/itemsSlices\";\n\n// icons\nimport { RiAddCircleFill, RiRefreshLine } from \"react-icons/ri\";\nimport { SiMicrosoftexcel } from \"react-icons/si\";\n\n// constants and utils\nimport { BASEURL, Colors, UserTypeConstants } from \"../../utils/constants\";\n\n// styles\nimport generalStyles from \"../../style.module.scss\";\nimport searchContainerStyles from \"../search-container/search-container.module.scss\";\n\nfunction ItemsPageHeader({\n  user,\n  role,\n  warehouse,\n  count,\n  company,\n  pageState,\n  search,\n}) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  return (\n    <>\n      <SearchContainer searchAction={search}>\n        <SearchInput\n          label=\"item-name\"\n          id=\"item-name\"\n          type=\"text\"\n          value={pageState.searchName}\n          onchange={(e) => dispatch(setSearchName(e.target.value))}\n          placeholder=\"search\"\n          onEnterPress={search}\n          resetField={() => {\n            dispatch(setSearchName(\"\"));\n          }}\n        />\n\n        {(user.type === UserTypeConstants.WAREHOUSE ||\n          (user.type === UserTypeConstants.ADMIN &&\n            pageState.role !== UserTypeConstants.COMPANY)) && (\n          <SearchInput\n            label=\"item-company\"\n            id=\"item-company\"\n            type=\"text\"\n            value={pageState.searchCompanyName}\n            onchange={(e) => dispatch(setSearchCompanyName(e.target.value))}\n            placeholder=\"search\"\n            onEnterPress={search}\n            resetField={() => {\n              dispatch(setSearchCompanyName(\"\"));\n            }}\n          />\n        )}\n\n        {(user.type === UserTypeConstants.COMPANY ||\n          (user.type === UserTypeConstants.ADMIN &&\n            pageState.role !== UserTypeConstants.WAREHOUSE)) && (\n          <SearchInput\n            label=\"item-warehouse\"\n            id=\"item-warehouse\"\n            type=\"text\"\n            value={pageState.searchWarehouseName}\n            onchange={(e) => dispatch(setSearchWarehouseName(e.target.value))}\n            placeholder=\"search\"\n            onEnterPress={search}\n            resetField={() => {\n              dispatch(setSearchWarehouseName(\"\"));\n            }}\n          />\n        )}\n\n        <div className={searchContainerStyles.checkbox_div}>\n          <input\n            type=\"checkbox\"\n            checked={pageState.searchDeletedItems}\n            onChange={() => {\n              dispatch(setSearchDeletedItems(!pageState.searchDeletedItems));\n              dispatch(setSearchActiveItems(false));\n            }}\n          />\n          <label>{t(\"deleted-items\")}</label>\n        </div>\n\n        <div className={searchContainerStyles.checkbox_div}>\n          <input\n            type=\"checkbox\"\n            checked={pageState.searchActiveItems}\n            onChange={() => {\n              dispatch(setSearchDeletedItems(false));\n              dispatch(setSearchActiveItems(!pageState.searchActiveItems));\n            }}\n          />\n          <label>{t(\"active-items\")}</label>\n        </div>\n\n        {user.type !== UserTypeConstants.WAREHOUSE && (\n          <>\n            <div className={searchContainerStyles.checkbox_div}>\n              <input\n                type=\"checkbox\"\n                checked={pageState.searchInWarehouse}\n                onChange={() => {\n                  dispatch(setSearchInWarehouse(!pageState.searchInWarehouse));\n                  dispatch(setSearchOutWarehouse(false));\n                }}\n              />\n              <label>{t(\"warehouse-in-warehouse\")}</label>\n            </div>\n\n            <div className={searchContainerStyles.checkbox_div}>\n              <input\n                type=\"checkbox\"\n                checked={pageState.searchOutWarehouse}\n                onChange={() => {\n                  dispatch(setSearchInWarehouse(false));\n                  dispatch(\n                    setSearchOutWarehouse(!pageState.searchOutWarehouse)\n                  );\n                }}\n              />\n              <label>{t(\"warehouse-out-warehouse\")}</label>\n            </div>\n          </>\n        )}\n      </SearchContainer>\n\n      <div className={generalStyles.actions}>\n        {user.type === UserTypeConstants.COMPANY ||\n        (user.type === UserTypeConstants.ADMIN &&\n          company !== null &&\n          company.allowAdmin) ? (\n          <>\n            <Icon\n              foreColor={Colors.GREY_COLOR}\n              selected={false}\n              icon={() => <RiRefreshLine />}\n              tooltip={t(\"refresh-tooltip\")}\n              onclick={search}\n              withBackground={true}\n            />\n            <Icon\n              foreColor={Colors.GREY_COLOR}\n              selected={false}\n              icon={() => <RiAddCircleFill />}\n              tooltip={t(\"add-item\")}\n              onclick={() => {\n                history.push(\"/item\", {\n                  from: user.type,\n                  type: \"new\",\n                  allowAction: true,\n                  itemId: null,\n                  companyId:\n                    user.type === UserTypeConstants.COMPANY\n                      ? user._id\n                      : company._id,\n                  warehouseId: null,\n                });\n              }}\n              withBackground={true}\n            />\n\n            <Icon\n              foreColor={Colors.GREY_COLOR}\n              selected={false}\n              icon={() => <SiMicrosoftexcel />}\n              tooltip={t(\"items-from-excel\")}\n              onclick={() => {\n                history.push(\"/items-from-excel\", {\n                  companyId:\n                    user.type === UserTypeConstants.COMPANY\n                      ? user._id\n                      : company._id,\n                });\n              }}\n              withBackground={true}\n            />\n\n            <ExportCSVFromURL\n              url={`${BASEURL}/items/allItem/${\n                user.type === UserTypeConstants.COMPANY ? user._id : company._id\n              }`}\n              fileName=\"filename\"\n            />\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default ItemsPageHeader;\n","import React, { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Redirect } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n// components\nimport ReactPaginate from \"react-paginate\";\nimport CompanyItemRow from \"../../components/company-item-row/company-item-row.component\";\nimport Toast from \"../../components/toast/toast.component\";\nimport NoContent from \"../../components/no-content/no-content.component\";\nimport ItemsTableHeader from \"../../components/items-table-header/items-table-header.component\";\nimport Loader from \"../../components/action-loader/action-loader.component\";\nimport ItemsPageHeader from \"../../components/items-page-header/items-page-header.component\";\n\n// redux stuff\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getItems,\n  resetActiveStatus,\n  resetStatus,\n  resetItems,\n  selectItems,\n  setPage,\n  resetChangeOfferStatus,\n} from \"../../redux/items/itemsSlices\";\nimport {\n  changeItemWarehouseMaxQty,\n  removeItemFromWarehouse,\n  selectWarehouseItems,\n} from \"../../redux/warehouseItems/warehouseItemsSlices\";\nimport { selectToken, selectUser } from \"../../redux/auth/authSlice\";\nimport { selectOnlineStatus } from \"../../redux/online/onlineSlice\";\n\n// constant\nimport { Colors } from \"../../utils/constants\";\n\n// styles\nimport paginationStyles from \"../../components/pagination.module.scss\";\nimport generalStyles from \"../../style.module.scss\";\n\nfunction ItemsPage({ onSelectedChange }) {\n  const { t } = useTranslation();\n  const user = useSelector(selectUser);\n\n  // const location = useLocation();\n  // const { user, company, warehouse, role } = location.state;\n\n  // selector\n  const isOnline = useSelector(selectOnlineStatus);\n  const dispatch = useDispatch();\n  const {\n    status,\n    error,\n    count,\n    items,\n    activeStatus,\n    activeError,\n    pageState,\n    changeOfferStatus,\n  } = useSelector(selectItems);\n  const { changeOfferStatus: warehouseOfferStatus } =\n    useSelector(selectWarehouseItems);\n  const token = useSelector(selectToken);\n\n  // handle for page change in the paginate component\n  const handlePageClick = (e) => {\n    const { selected } = e;\n\n    dispatch(setPage(selected + 1));\n    handleSearch();\n    // setInitialPage(selected);\n    window.scrollTo(0, 0);\n  };\n\n  // enter pressed handler\n  const handleEnterPress = () => {\n    dispatch(resetItems());\n    dispatch(setPage(1));\n    handleSearch();\n  };\n\n  // search handler\n  const handleSearch = () => {\n    dispatch(getItems({ token }));\n  };\n\n  const deleteItemFromWarehouse = (obj) => {\n    dispatch(removeItemFromWarehouse({ obj, token }))\n      .then(unwrapResult)\n      .then(() => {\n        handleSearch(pageState.page);\n      })\n      .catch(() => {});\n  };\n\n  const changeItemMaxQty = (obj) => {\n    if (obj.qty) {\n      dispatch(changeItemWarehouseMaxQty({ obj, token }))\n        .then(unwrapResult)\n        .then(() => {\n          handleSearch(pageState.page);\n        })\n        .catch(() => {});\n    }\n  };\n\n  useEffect(() => {\n    handleSearch();\n\n    onSelectedChange();\n\n    return () => {\n      dispatch(resetItems());\n    };\n  }, [pageState.sortFields, pageState.warehouse, pageState.role]);\n\n  return user ? (\n    <div\n      className={generalStyles.container}\n      style={{\n        marginTop: \"55px\",\n      }}\n    >\n      <ItemsPageHeader\n        user={user}\n        role={pageState.role}\n        warehouse={pageState.warehouse}\n        count={count}\n        company={pageState.company}\n        pageState={pageState}\n        search={handleEnterPress}\n      />\n\n      {count > 0 && (\n        <ItemsTableHeader\n          user={user}\n          role={pageState.role}\n          pageState={pageState}\n          sortNameField={pageState.sortNameField}\n          sortCaliberField={pageState.sortCaliberField}\n          sortPriceField={pageState.sortPriceField}\n          sortCustomerPriceField={pageState.sortCustomerPriceField}\n        />\n      )}\n\n      {/* display items */}\n      {items?.map((item) => (\n        <CompanyItemRow\n          key={uuidv4()}\n          item={item}\n          user={user}\n          company={pageState.company}\n          warehouse={pageState.warehouse}\n          role={pageState.role}\n          deleteItemFromWarehouse={deleteItemFromWarehouse}\n          changeItemMaxQty={changeItemMaxQty}\n        />\n      ))}\n\n      {/* show the pagination option when the items in not empty and the internet connection is well */}\n      {count > 0 && isOnline && (\n        <ReactPaginate\n          previousLabel={t(\"previous\")}\n          nextLabel={t(\"next\")}\n          pageCount={Math.ceil(count / 9)}\n          forcePage={pageState.page - 1}\n          onPageChange={handlePageClick}\n          containerClassName={paginationStyles.pagination}\n          previousLinkClassName={paginationStyles.pagination_link}\n          nextLinkClassName={paginationStyles.pagination_link}\n          disabledClassName={paginationStyles.pagination_link_disabled}\n          activeClassName={paginationStyles.pagination_link_active}\n        />\n      )}\n\n      {count === 0 && status !== \"loading\" && (\n        <>\n          <NoContent msg={t(\"no-medicines\")} />\n        </>\n      )}\n\n      {status === \"loading\" && <Loader allowCancel={false} />}\n\n      {error && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(error)}\n          actionAfterTimeout={() => dispatch(resetStatus())}\n        />\n      )}\n\n      {(activeStatus === \"loading\" ||\n        changeOfferStatus === \"loading\" ||\n        warehouseOfferStatus === \"loading\") && <Loader allowCancel={false} />}\n\n      {activeStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"update-succeeded\")}\n          actionAfterTimeout={() => dispatch(resetActiveStatus())}\n        />\n      )}\n\n      {activeError && (\n        <Toast\n          bgColor={Colors.FAILED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(activeError)}\n          actionAfterTimeout={() => dispatch(resetActiveStatus())}\n        />\n      )}\n\n      {changeOfferStatus === \"succeeded\" && (\n        <Toast\n          bgColor={Colors.SUCCEEDED_COLOR}\n          foreColor=\"#fff\"\n          toastText={t(\"update-succeeded\")}\n          actionAfterTimeout={() => dispatch(resetChangeOfferStatus())}\n        />\n      )}\n    </div>\n  ) : (\n    <Redirect to=\"/signin\" />\n  );\n}\n\nexport default ItemsPage;\n"],"names":["addHandler","deleteHandler","values","changeHandler","placeholder","quantityLabel","bonusLabel","afterQuantityLabel","afterBonusLabel","allowEdit","t","useTranslation","className","styles","generalStyles","join","size","onClick","e","stopPropagation","map","value","id","key","title","qty","onChange","onKeyPress","onKeyPressForNumberInput","disabled","bonus","item","warehouseId","close","token","afterUpdateOffer","dispatch","useDispatch","offer","warehouses","find","w","warehouse","_id","useState","offerTypeError","setOfferTypeError","mode","OfferTypes","quantityOfferType","setQuantityOfferType","percentageOfferType","setPercentageOfferType","offers","length","o","setValues","header","cancelLabel","okLabel","closeModal","okModal","filter","v","sort","a","b","offerObj","changeItemWarehouseOffer","obj","itemId","then","unwrapResult","handleOkButton","small","type","checked","color","Colors","uuidv4","updatedValues","target","toEnglishNumber","checkOffer","user","UserTypeConstants","result","forEach","company","role","changeItemMaxQty","deleteItemFromWarehouse","isOnline","useSelector","selectOnlineStatus","selectUserData","modalObj","setModalObj","showModal","setShowModal","showWarningModal","setShowWarningModal","showOfferModal","setShowOfferModal","showDeleteFromWarehouseModal","setShowDeleteFromWarehouseModal","deleteLoading","setDeleteLoading","maxQty","setMaxQty","actionButtonPress","action","body","rowStyles","style","backgroundColor","tableStyles","to","pathname","state","from","allowAction","allowAdmin","companyId","name","isActive","icon","foreColor","onclick","changeOnlineMsg","formula","caliber","packing","price","customer_price","event","Number","parseInt","isNaN","onBlur","tooltip","changeItemActiveState","warning","changeItemOffer","city","sortNameField","sortCaliberField","sortPriceField","sortCustomerPriceField","pageState","setSortNameField","setSortFields","setSortCaliberField","setSortPriceField","setSortCustomerPriceField","marginRight","ExportCSVFromURL","url","fileName","selectToken","exportToCSV","axios","headers","Authorization","response","wb","Sheets","data","XLSX","items","SheetNames","excelBuffer","bookType","Blob","FileSaver","selected","withBackground","count","search","history","useHistory","searchAction","label","searchName","onchange","setSearchName","onEnterPress","resetField","searchCompanyName","setSearchCompanyName","searchWarehouseName","setSearchWarehouseName","searchContainerStyles","searchDeletedItems","setSearchDeletedItems","setSearchActiveItems","searchActiveItems","searchInWarehouse","setSearchInWarehouse","setSearchOutWarehouse","searchOutWarehouse","push","BASEURL","onSelectedChange","selectUser","selectItems","status","error","activeStatus","activeError","changeOfferStatus","warehouseOfferStatus","selectWarehouseItems","handleSearch","getItems","removeItemFromWarehouse","page","catch","changeItemWarehouseMaxQty","useEffect","resetItems","sortFields","marginTop","setPage","previousLabel","nextLabel","pageCount","Math","ceil","forcePage","onPageChange","window","scrollTo","containerClassName","paginationStyles","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","msg","allowCancel","bgColor","toastText","actionAfterTimeout","resetStatus","resetActiveStatus","resetChangeOfferStatus"],"sourceRoot":""}